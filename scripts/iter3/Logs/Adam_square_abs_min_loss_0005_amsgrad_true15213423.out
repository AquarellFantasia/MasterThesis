Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 04:31:45.181578: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 04:31:45.612566: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-01-19 04:31:52.105794: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 04:31:52.106677: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 04:31:52.106705: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 04:32:01.285215: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 04:32:05.264706: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:d8:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  Adam(learning_rate=0.005, amsgrad=True)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  square_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  Adam_square_abs_min_loss_0005_amsgrad_true
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 04:32:10.006317: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 85s - loss: 0.2761 - accuracy: 0.3590 - mean_squared_error: 0.6924 - val_loss: 0.0732 - val_accuracy: 0.2923 - val_mean_squared_error: 0.2917 - 85s/epoch - 312ms/step
Epoch 2/100
273/273 - 79s - loss: 0.0661 - accuracy: 0.3065 - mean_squared_error: 0.3388 - val_loss: 0.0577 - val_accuracy: 0.3216 - val_mean_squared_error: 0.3292 - 79s/epoch - 290ms/step
Epoch 3/100
273/273 - 80s - loss: 0.0665 - accuracy: 0.3214 - mean_squared_error: 0.3301 - val_loss: 0.0788 - val_accuracy: 0.4244 - val_mean_squared_error: 0.3142 - 80s/epoch - 293ms/step
Epoch 4/100
273/273 - 79s - loss: 0.0679 - accuracy: 0.3297 - mean_squared_error: 0.3652 - val_loss: 0.0768 - val_accuracy: 0.3377 - val_mean_squared_error: 0.3492 - 79s/epoch - 289ms/step
Epoch 5/100
273/273 - 79s - loss: 0.0670 - accuracy: 0.3291 - mean_squared_error: 0.3718 - val_loss: 0.0689 - val_accuracy: 0.3115 - val_mean_squared_error: 0.3401 - 79s/epoch - 288ms/step
Epoch 6/100
273/273 - 81s - loss: 0.0680 - accuracy: 0.3308 - mean_squared_error: 0.3694 - val_loss: 0.0635 - val_accuracy: 0.3498 - val_mean_squared_error: 0.3972 - 81s/epoch - 296ms/step
Epoch 7/100
273/273 - 79s - loss: 0.0667 - accuracy: 0.3432 - mean_squared_error: 0.3746 - val_loss: 0.0672 - val_accuracy: 0.3690 - val_mean_squared_error: 0.4014 - 79s/epoch - 289ms/step
Epoch 8/100
273/273 - 80s - loss: 0.0655 - accuracy: 0.3119 - mean_squared_error: 0.3889 - val_loss: 0.0747 - val_accuracy: 0.3458 - val_mean_squared_error: 0.3776 - 80s/epoch - 294ms/step
Epoch 9/100
273/273 - 80s - loss: 0.0627 - accuracy: 0.3130 - mean_squared_error: 0.3122 - val_loss: 0.0709 - val_accuracy: 0.2782 - val_mean_squared_error: 0.2905 - 80s/epoch - 293ms/step
Epoch 10/100
273/273 - 78s - loss: 0.0672 - accuracy: 0.3681 - mean_squared_error: 0.2776 - val_loss: 0.0692 - val_accuracy: 0.2923 - val_mean_squared_error: 0.2916 - 78s/epoch - 285ms/step
Epoch 11/100
273/273 - 78s - loss: 0.0712 - accuracy: 0.3111 - mean_squared_error: 0.2887 - val_loss: 0.0787 - val_accuracy: 0.3821 - val_mean_squared_error: 0.2600 - 78s/epoch - 286ms/step
Epoch 12/100
273/273 - 79s - loss: 0.0681 - accuracy: 0.3544 - mean_squared_error: 0.2916 - val_loss: 0.0750 - val_accuracy: 0.1784 - val_mean_squared_error: 0.3281 - 79s/epoch - 290ms/step
Epoch 13/100
273/273 - 77s - loss: 0.0711 - accuracy: 0.3468 - mean_squared_error: 0.3176 - val_loss: 0.0683 - val_accuracy: 0.3478 - val_mean_squared_error: 0.3874 - 77s/epoch - 284ms/step
Epoch 14/100
273/273 - 78s - loss: 0.0659 - accuracy: 0.2786 - mean_squared_error: 0.3614 - val_loss: 0.0745 - val_accuracy: 0.3659 - val_mean_squared_error: 0.3814 - 78s/epoch - 287ms/step
Epoch 15/100
273/273 - 79s - loss: 0.0711 - accuracy: 0.3476 - mean_squared_error: 0.3696 - val_loss: 0.0741 - val_accuracy: 0.4355 - val_mean_squared_error: 0.3624 - 79s/epoch - 288ms/step
Epoch 16/100
273/273 - 80s - loss: 0.0650 - accuracy: 0.2896 - mean_squared_error: 0.3475 - val_loss: 0.0667 - val_accuracy: 0.2278 - val_mean_squared_error: 0.3412 - 80s/epoch - 292ms/step
Epoch 17/100
273/273 - 78s - loss: 0.0678 - accuracy: 0.3199 - mean_squared_error: 0.3215 - val_loss: 0.0711 - val_accuracy: 0.3770 - val_mean_squared_error: 0.3386 - 78s/epoch - 285ms/step
Epoch 18/100
273/273 - 79s - loss: 0.0699 - accuracy: 0.3092 - mean_squared_error: 0.3076 - val_loss: 0.0677 - val_accuracy: 0.3508 - val_mean_squared_error: 0.2384 - 79s/epoch - 288ms/step
Epoch 19/100
273/273 - 79s - loss: 0.0673 - accuracy: 0.3395 - mean_squared_error: 0.2214 - val_loss: 0.0691 - val_accuracy: 0.3952 - val_mean_squared_error: 0.2017 - 79s/epoch - 290ms/step
Epoch 20/100
273/273 - 78s - loss: 0.0685 - accuracy: 0.3429 - mean_squared_error: 0.2279 - val_loss: 0.0654 - val_accuracy: 0.2883 - val_mean_squared_error: 0.2478 - 78s/epoch - 287ms/step
Epoch 21/100
273/273 - 77s - loss: 0.0671 - accuracy: 0.3280 - mean_squared_error: 0.2106 - val_loss: 0.0700 - val_accuracy: 0.2288 - val_mean_squared_error: 0.1904 - 77s/epoch - 283ms/step
Epoch 22/100
273/273 - 77s - loss: 0.0636 - accuracy: 0.3462 - mean_squared_error: 0.2211 - val_loss: 0.0689 - val_accuracy: 0.3387 - val_mean_squared_error: 0.2049 - 77s/epoch - 281ms/step
Epoch 23/100
273/273 - 79s - loss: 0.0712 - accuracy: 0.3513 - mean_squared_error: 0.2417 - val_loss: 0.0686 - val_accuracy: 0.2621 - val_mean_squared_error: 0.2360 - 79s/epoch - 289ms/step
Epoch 24/100
273/273 - 78s - loss: 0.0667 - accuracy: 0.3687 - mean_squared_error: 0.2720 - val_loss: 0.0672 - val_accuracy: 0.3760 - val_mean_squared_error: 0.2663 - 78s/epoch - 284ms/step
Epoch 25/100
273/273 - 77s - loss: 0.0669 - accuracy: 0.2918 - mean_squared_error: 0.2667 - val_loss: 0.0816 - val_accuracy: 0.3014 - val_mean_squared_error: 0.2519 - 77s/epoch - 284ms/step
Epoch 26/100
273/273 - 77s - loss: 0.0660 - accuracy: 0.3348 - mean_squared_error: 0.2363 - val_loss: 0.0772 - val_accuracy: 0.2591 - val_mean_squared_error: 0.2472 - 77s/epoch - 283ms/step
Epoch 27/100
273/273 - 76s - loss: 0.0643 - accuracy: 0.3127 - mean_squared_error: 0.2076 - val_loss: 0.0783 - val_accuracy: 0.3659 - val_mean_squared_error: 0.2203 - 76s/epoch - 279ms/step
Epoch 28/100
273/273 - 78s - loss: 0.0674 - accuracy: 0.3829 - mean_squared_error: 0.2067 - val_loss: 0.0680 - val_accuracy: 0.2379 - val_mean_squared_error: 0.2090 - 78s/epoch - 285ms/step
Epoch 29/100
273/273 - 76s - loss: 0.0707 - accuracy: 0.3889 - mean_squared_error: 0.1803 - val_loss: 0.0734 - val_accuracy: 0.2581 - val_mean_squared_error: 0.1893 - 76s/epoch - 278ms/step
Epoch 30/100
273/273 - 75s - loss: 0.0666 - accuracy: 0.3162 - mean_squared_error: 0.1565 - val_loss: 0.0684 - val_accuracy: 0.3569 - val_mean_squared_error: 0.1524 - 75s/epoch - 275ms/step
Epoch 31/100
273/273 - 76s - loss: 0.0663 - accuracy: 0.3252 - mean_squared_error: 0.1818 - val_loss: 0.0684 - val_accuracy: 0.2238 - val_mean_squared_error: 0.2167 - 76s/epoch - 277ms/step
Epoch 32/100
273/273 - 75s - loss: 0.0669 - accuracy: 0.3633 - mean_squared_error: 0.2003 - val_loss: 0.0683 - val_accuracy: 0.3821 - val_mean_squared_error: 0.2179 - 75s/epoch - 276ms/step
Epoch 33/100
273/273 - 75s - loss: 0.0692 - accuracy: 0.3202 - mean_squared_error: 0.2352 - val_loss: 0.0714 - val_accuracy: 0.3498 - val_mean_squared_error: 0.2116 - 75s/epoch - 276ms/step
Epoch 34/100
273/273 - 76s - loss: 0.0659 - accuracy: 0.2976 - mean_squared_error: 0.2732 - val_loss: 0.0647 - val_accuracy: 0.3710 - val_mean_squared_error: 0.2873 - 76s/epoch - 278ms/step
Epoch 35/100
273/273 - 77s - loss: 0.0697 - accuracy: 0.2687 - mean_squared_error: 0.2821 - val_loss: 0.0772 - val_accuracy: 0.4153 - val_mean_squared_error: 0.2836 - 77s/epoch - 281ms/step
Epoch 36/100
273/273 - 77s - loss: 0.0720 - accuracy: 0.3447 - mean_squared_error: 0.3051 - val_loss: 0.0733 - val_accuracy: 0.4758 - val_mean_squared_error: 0.2784 - 77s/epoch - 283ms/step
Epoch 37/100
273/273 - 77s - loss: 0.0663 - accuracy: 0.3130 - mean_squared_error: 0.2974 - val_loss: 0.0805 - val_accuracy: 0.3296 - val_mean_squared_error: 0.2671 - 77s/epoch - 283ms/step
Epoch 38/100
273/273 - 76s - loss: 0.0689 - accuracy: 0.3292 - mean_squared_error: 0.3119 - val_loss: 0.0824 - val_accuracy: 0.5383 - val_mean_squared_error: 0.2479 - 76s/epoch - 277ms/step
Epoch 39/100
273/273 - 75s - loss: 0.0663 - accuracy: 0.3069 - mean_squared_error: 0.3682 - val_loss: 0.0711 - val_accuracy: 0.3347 - val_mean_squared_error: 0.3785 - 75s/epoch - 274ms/step
Epoch 40/100
273/273 - 75s - loss: 0.0699 - accuracy: 0.3726 - mean_squared_error: 0.3761 - val_loss: 0.0704 - val_accuracy: 0.3931 - val_mean_squared_error: 0.3701 - 75s/epoch - 273ms/step
Epoch 41/100
273/273 - 77s - loss: 0.0669 - accuracy: 0.3455 - mean_squared_error: 0.4204 - val_loss: 0.0701 - val_accuracy: 0.3044 - val_mean_squared_error: 0.4170 - 77s/epoch - 281ms/step
Epoch 42/100
273/273 - 78s - loss: 0.0630 - accuracy: 0.3096 - mean_squared_error: 0.4163 - val_loss: 0.0854 - val_accuracy: 0.4708 - val_mean_squared_error: 0.3707 - 78s/epoch - 284ms/step
Epoch 43/100
273/273 - 76s - loss: 0.0644 - accuracy: 0.3085 - mean_squared_error: 0.3915 - val_loss: 0.0766 - val_accuracy: 0.3095 - val_mean_squared_error: 0.3712 - 76s/epoch - 280ms/step
Epoch 44/100
273/273 - 79s - loss: 0.0689 - accuracy: 0.3565 - mean_squared_error: 0.4202 - val_loss: 0.0659 - val_accuracy: 0.2752 - val_mean_squared_error: 0.4385 - 79s/epoch - 291ms/step
Epoch 45/100
273/273 - 77s - loss: 0.0642 - accuracy: 0.2549 - mean_squared_error: 0.4009 - val_loss: 0.0676 - val_accuracy: 0.3417 - val_mean_squared_error: 0.3719 - 77s/epoch - 283ms/step
Epoch 46/100
273/273 - 77s - loss: 0.0716 - accuracy: 0.3744 - mean_squared_error: 0.4204 - val_loss: 0.0643 - val_accuracy: 0.2772 - val_mean_squared_error: 0.4550 - 77s/epoch - 281ms/step
Epoch 47/100
273/273 - 77s - loss: 0.0654 - accuracy: 0.3633 - mean_squared_error: 0.5253 - val_loss: 0.0781 - val_accuracy: 0.2581 - val_mean_squared_error: 0.5471 - 77s/epoch - 282ms/step
Epoch 48/100
273/273 - 75s - loss: 0.0656 - accuracy: 0.3107 - mean_squared_error: 0.5060 - val_loss: 0.0744 - val_accuracy: 0.3911 - val_mean_squared_error: 0.4207 - 75s/epoch - 276ms/step
Epoch 49/100
273/273 - 75s - loss: 0.0649 - accuracy: 0.3379 - mean_squared_error: 0.5048 - val_loss: 0.0660 - val_accuracy: 0.3891 - val_mean_squared_error: 0.5602 - 75s/epoch - 274ms/step
Epoch 50/100
273/273 - 76s - loss: 0.0693 - accuracy: 0.3433 - mean_squared_error: 0.4763 - val_loss: 0.0682 - val_accuracy: 0.3085 - val_mean_squared_error: 0.4842 - 76s/epoch - 277ms/step
Epoch 51/100
273/273 - 78s - loss: 0.0653 - accuracy: 0.3110 - mean_squared_error: 0.4495 - val_loss: 0.0704 - val_accuracy: 0.3780 - val_mean_squared_error: 0.3981 - 78s/epoch - 285ms/step
Epoch 52/100
273/273 - 75s - loss: 0.0642 - accuracy: 0.2829 - mean_squared_error: 0.3889 - val_loss: 0.0719 - val_accuracy: 0.3508 - val_mean_squared_error: 0.3613 - 75s/epoch - 273ms/step
Epoch 53/100
273/273 - 76s - loss: 0.0620 - accuracy: 0.3033 - mean_squared_error: 0.3466 - val_loss: 0.0636 - val_accuracy: 0.2470 - val_mean_squared_error: 0.3439 - 76s/epoch - 279ms/step
Epoch 54/100
273/273 - 74s - loss: 0.0707 - accuracy: 0.3431 - mean_squared_error: 0.2905 - val_loss: 0.0578 - val_accuracy: 0.2188 - val_mean_squared_error: 0.2652 - 74s/epoch - 272ms/step
Epoch 55/100
273/273 - 75s - loss: 0.0676 - accuracy: 0.3591 - mean_squared_error: 0.2698 - val_loss: 0.0652 - val_accuracy: 0.3831 - val_mean_squared_error: 0.2602 - 75s/epoch - 274ms/step
Epoch 56/100
273/273 - 76s - loss: 0.0637 - accuracy: 0.3385 - mean_squared_error: 0.2294 - val_loss: 0.0827 - val_accuracy: 0.4214 - val_mean_squared_error: 0.2557 - 76s/epoch - 279ms/step
Epoch 57/100
273/273 - 76s - loss: 0.0661 - accuracy: 0.3369 - mean_squared_error: 0.2878 - val_loss: 0.0660 - val_accuracy: 0.3367 - val_mean_squared_error: 0.2971 - 76s/epoch - 279ms/step
Epoch 58/100
273/273 - 76s - loss: 0.0684 - accuracy: 0.3099 - mean_squared_error: 0.3252 - val_loss: 0.0749 - val_accuracy: 0.3024 - val_mean_squared_error: 0.3323 - 76s/epoch - 279ms/step
Epoch 59/100
273/273 - 75s - loss: 0.0663 - accuracy: 0.3568 - mean_squared_error: 0.3274 - val_loss: 0.0743 - val_accuracy: 0.3367 - val_mean_squared_error: 0.2979 - 75s/epoch - 276ms/step
Epoch 60/100
273/273 - 77s - loss: 0.0672 - accuracy: 0.3365 - mean_squared_error: 0.3377 - val_loss: 0.0652 - val_accuracy: 0.3085 - val_mean_squared_error: 0.3512 - 77s/epoch - 280ms/step
Epoch 61/100
273/273 - 75s - loss: 0.0630 - accuracy: 0.3127 - mean_squared_error: 0.3477 - val_loss: 0.0633 - val_accuracy: 0.2641 - val_mean_squared_error: 0.3405 - 75s/epoch - 273ms/step
Epoch 62/100
273/273 - 75s - loss: 0.0668 - accuracy: 0.3275 - mean_squared_error: 0.3633 - val_loss: 0.0654 - val_accuracy: 0.3075 - val_mean_squared_error: 0.3457 - 75s/epoch - 276ms/step
Epoch 63/100
273/273 - 74s - loss: 0.0695 - accuracy: 0.3289 - mean_squared_error: 0.3423 - val_loss: 0.0686 - val_accuracy: 0.2833 - val_mean_squared_error: 0.3478 - 74s/epoch - 270ms/step
Epoch 64/100
273/273 - 73s - loss: 0.0674 - accuracy: 0.2914 - mean_squared_error: 0.3480 - val_loss: 0.0688 - val_accuracy: 0.2560 - val_mean_squared_error: 0.3389 - 73s/epoch - 269ms/step
Epoch 65/100
273/273 - 76s - loss: 0.0680 - accuracy: 0.2927 - mean_squared_error: 0.2624 - val_loss: 0.0786 - val_accuracy: 0.3952 - val_mean_squared_error: 0.2290 - 76s/epoch - 277ms/step
Epoch 66/100
273/273 - 74s - loss: 0.0701 - accuracy: 0.3099 - mean_squared_error: 0.2764 - val_loss: 0.0785 - val_accuracy: 0.3780 - val_mean_squared_error: 0.2666 - 74s/epoch - 271ms/step
Epoch 67/100
273/273 - 74s - loss: 0.0708 - accuracy: 0.3679 - mean_squared_error: 0.3191 - val_loss: 0.0687 - val_accuracy: 0.3427 - val_mean_squared_error: 0.3616 - 74s/epoch - 272ms/step
Epoch 68/100
273/273 - 73s - loss: 0.0670 - accuracy: 0.3144 - mean_squared_error: 0.3400 - val_loss: 0.0837 - val_accuracy: 0.2944 - val_mean_squared_error: 0.3273 - 73s/epoch - 269ms/step
Epoch 69/100
273/273 - 76s - loss: 0.0632 - accuracy: 0.3284 - mean_squared_error: 0.2918 - val_loss: 0.0867 - val_accuracy: 0.4456 - val_mean_squared_error: 0.2383 - 76s/epoch - 278ms/step
Epoch 70/100
273/273 - 76s - loss: 0.0669 - accuracy: 0.2707 - mean_squared_error: 0.2969 - val_loss: 0.0649 - val_accuracy: 0.2379 - val_mean_squared_error: 0.3044 - 76s/epoch - 277ms/step
Epoch 71/100
273/273 - 74s - loss: 0.0685 - accuracy: 0.2967 - mean_squared_error: 0.3102 - val_loss: 0.0734 - val_accuracy: 0.3206 - val_mean_squared_error: 0.2969 - 74s/epoch - 271ms/step
Epoch 72/100
273/273 - 77s - loss: 0.0650 - accuracy: 0.2919 - mean_squared_error: 0.2545 - val_loss: 0.0669 - val_accuracy: 0.4254 - val_mean_squared_error: 0.2280 - 77s/epoch - 282ms/step
Epoch 73/100
273/273 - 76s - loss: 0.0653 - accuracy: 0.3408 - mean_squared_error: 0.2580 - val_loss: 0.0709 - val_accuracy: 0.3165 - val_mean_squared_error: 0.2269 - 76s/epoch - 280ms/step
Epoch 74/100
273/273 - 76s - loss: 0.0661 - accuracy: 0.3576 - mean_squared_error: 0.1933 - val_loss: 0.0742 - val_accuracy: 0.2742 - val_mean_squared_error: 0.1948 - 76s/epoch - 277ms/step
Epoch 75/100
273/273 - 73s - loss: 0.0710 - accuracy: 0.3662 - mean_squared_error: 0.1959 - val_loss: 0.0797 - val_accuracy: 0.3337 - val_mean_squared_error: 0.2452 - 73s/epoch - 267ms/step
Epoch 76/100
273/273 - 75s - loss: 0.0677 - accuracy: 0.3082 - mean_squared_error: 0.2520 - val_loss: 0.0734 - val_accuracy: 0.3075 - val_mean_squared_error: 0.2854 - 75s/epoch - 276ms/step
Epoch 77/100
273/273 - 75s - loss: 0.0673 - accuracy: 0.2864 - mean_squared_error: 0.2671 - val_loss: 0.0708 - val_accuracy: 0.3760 - val_mean_squared_error: 0.2776 - 75s/epoch - 275ms/step
Epoch 78/100
273/273 - 75s - loss: 0.0693 - accuracy: 0.3549 - mean_squared_error: 0.3183 - val_loss: 0.0708 - val_accuracy: 0.3367 - val_mean_squared_error: 0.3292 - 75s/epoch - 276ms/step
Epoch 79/100
273/273 - 74s - loss: 0.0698 - accuracy: 0.3417 - mean_squared_error: 0.3199 - val_loss: 0.0760 - val_accuracy: 0.4093 - val_mean_squared_error: 0.3189 - 74s/epoch - 270ms/step
Epoch 80/100
273/273 - 76s - loss: 0.0684 - accuracy: 0.3280 - mean_squared_error: 0.3255 - val_loss: 0.0667 - val_accuracy: 0.3750 - val_mean_squared_error: 0.3670 - 76s/epoch - 279ms/step
Epoch 81/100
273/273 - 76s - loss: 0.0715 - accuracy: 0.3506 - mean_squared_error: 0.3559 - val_loss: 0.0603 - val_accuracy: 0.3952 - val_mean_squared_error: 0.3379 - 76s/epoch - 277ms/step
Epoch 82/100
273/273 - 74s - loss: 0.0672 - accuracy: 0.3030 - mean_squared_error: 0.3594 - val_loss: 0.0706 - val_accuracy: 0.2389 - val_mean_squared_error: 0.4098 - 74s/epoch - 271ms/step
Epoch 83/100
273/273 - 75s - loss: 0.0679 - accuracy: 0.3215 - mean_squared_error: 0.3630 - val_loss: 0.0757 - val_accuracy: 0.3891 - val_mean_squared_error: 0.3449 - 75s/epoch - 276ms/step
Epoch 84/100
273/273 - 74s - loss: 0.0659 - accuracy: 0.2953 - mean_squared_error: 0.3708 - val_loss: 0.0892 - val_accuracy: 0.5323 - val_mean_squared_error: 0.3379 - 74s/epoch - 271ms/step
Epoch 85/100
273/273 - 75s - loss: 0.0694 - accuracy: 0.2922 - mean_squared_error: 0.3732 - val_loss: 0.0667 - val_accuracy: 0.3175 - val_mean_squared_error: 0.3688 - 75s/epoch - 274ms/step
Epoch 86/100
273/273 - 76s - loss: 0.0679 - accuracy: 0.3234 - mean_squared_error: 0.3676 - val_loss: 0.0675 - val_accuracy: 0.2762 - val_mean_squared_error: 0.3943 - 76s/epoch - 278ms/step
Epoch 87/100
273/273 - 76s - loss: 0.0697 - accuracy: 0.3630 - mean_squared_error: 0.3670 - val_loss: 0.0654 - val_accuracy: 0.3911 - val_mean_squared_error: 0.3622 - 76s/epoch - 278ms/step
Epoch 88/100
273/273 - 76s - loss: 0.0670 - accuracy: 0.3213 - mean_squared_error: 0.4459 - val_loss: 0.0737 - val_accuracy: 0.2712 - val_mean_squared_error: 0.4507 - 76s/epoch - 278ms/step
Epoch 89/100
273/273 - 76s - loss: 0.0689 - accuracy: 0.3423 - mean_squared_error: 0.3701 - val_loss: 0.0685 - val_accuracy: 0.3609 - val_mean_squared_error: 0.3362 - 76s/epoch - 278ms/step
Epoch 90/100
273/273 - 77s - loss: 0.0704 - accuracy: 0.3434 - mean_squared_error: 0.3658 - val_loss: 0.0652 - val_accuracy: 0.3438 - val_mean_squared_error: 0.3942 - 77s/epoch - 282ms/step
Epoch 91/100
273/273 - 74s - loss: 0.0661 - accuracy: 0.2877 - mean_squared_error: 0.3885 - val_loss: 0.0705 - val_accuracy: 0.3256 - val_mean_squared_error: 0.3434 - 74s/epoch - 272ms/step
Epoch 92/100
273/273 - 75s - loss: 0.0690 - accuracy: 0.3244 - mean_squared_error: 0.3566 - val_loss: 0.0715 - val_accuracy: 0.2218 - val_mean_squared_error: 0.3421 - 75s/epoch - 276ms/step
Epoch 93/100
273/273 - 77s - loss: 0.0654 - accuracy: 0.2871 - mean_squared_error: 0.3590 - val_loss: 0.0695 - val_accuracy: 0.2883 - val_mean_squared_error: 0.3296 - 77s/epoch - 281ms/step
Epoch 94/100
User defined signal 2

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213423: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:42 2023
Job was executed on host(s) <4*n-62-11-13>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 04:31:39 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 04:31:39 2023
Terminated at Thu Jan 19 06:31:51 2023
Results reported at Thu Jan 19 06:31:51 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/Adam_square_abs_min_loss_0005_amsgrad_true%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "Adam(learning_rate=0.005, amsgrad=True)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "square_abs_min_loss" "black_background_500x500.csv" 2 "Adam_square_abs_min_loss_0005_amsgrad_true" "iter3"

    
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   8728.00 sec.
    Max Memory :                                 3012 MB
    Average Memory :                             2881.85 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17468.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   7304 sec.
    Turnaround time :                            23889 sec.

The output (if any) is above this job summary.

