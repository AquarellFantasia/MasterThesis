Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 06:31:56.769193: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 06:31:56.934381: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-01-19 06:31:58.839669: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 06:31:58.840398: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 06:31:58.840426: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 06:32:03.711978: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 06:32:04.409937: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:d8:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  Adam(learning_rate=0.0005, amsgrad=True)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  abs_loss_function
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  Adam_abs_loss_function_00005_amsgrad_true
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 06:32:07.110119: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 77s - loss: 0.2405 - accuracy: 0.2956 - mean_squared_error: 0.2951 - val_loss: 0.2591 - val_accuracy: 0.2923 - val_mean_squared_error: 0.2481 - 77s/epoch - 283ms/step
Epoch 2/100
273/273 - 75s - loss: 0.2430 - accuracy: 0.2818 - mean_squared_error: 0.3083 - val_loss: 0.2602 - val_accuracy: 0.3105 - val_mean_squared_error: 0.3163 - 75s/epoch - 276ms/step
Epoch 3/100
273/273 - 76s - loss: 0.2423 - accuracy: 0.3418 - mean_squared_error: 0.5147 - val_loss: 0.2626 - val_accuracy: 0.3800 - val_mean_squared_error: 0.4078 - 76s/epoch - 278ms/step
Epoch 4/100
273/273 - 76s - loss: 0.2427 - accuracy: 0.3087 - mean_squared_error: 0.3070 - val_loss: 0.2377 - val_accuracy: 0.2792 - val_mean_squared_error: 0.2805 - 76s/epoch - 278ms/step
Epoch 5/100
273/273 - 75s - loss: 0.2483 - accuracy: 0.3293 - mean_squared_error: 0.3045 - val_loss: 0.2358 - val_accuracy: 0.2823 - val_mean_squared_error: 0.3159 - 75s/epoch - 275ms/step
Epoch 6/100
273/273 - 78s - loss: 0.2390 - accuracy: 0.3324 - mean_squared_error: 0.3944 - val_loss: 0.2503 - val_accuracy: 0.3226 - val_mean_squared_error: 0.3836 - 78s/epoch - 284ms/step
Epoch 7/100
273/273 - 76s - loss: 0.2412 - accuracy: 0.3151 - mean_squared_error: 0.3380 - val_loss: 0.2421 - val_accuracy: 0.4335 - val_mean_squared_error: 0.2491 - 76s/epoch - 277ms/step
Epoch 8/100
273/273 - 74s - loss: 0.2384 - accuracy: 0.3024 - mean_squared_error: 0.4432 - val_loss: 0.2335 - val_accuracy: 0.3427 - val_mean_squared_error: 0.4525 - 74s/epoch - 270ms/step
Epoch 9/100
273/273 - 77s - loss: 0.2393 - accuracy: 0.3284 - mean_squared_error: 0.3206 - val_loss: 0.2333 - val_accuracy: 0.4244 - val_mean_squared_error: 0.2759 - 77s/epoch - 283ms/step
Epoch 10/100
273/273 - 75s - loss: 0.2432 - accuracy: 0.2949 - mean_squared_error: 0.3423 - val_loss: 0.2636 - val_accuracy: 0.4627 - val_mean_squared_error: 0.3662 - 75s/epoch - 277ms/step
Epoch 11/100
273/273 - 75s - loss: 0.2503 - accuracy: 0.3266 - mean_squared_error: 0.2828 - val_loss: 0.2579 - val_accuracy: 0.4577 - val_mean_squared_error: 0.2822 - 75s/epoch - 274ms/step
Epoch 12/100
273/273 - 76s - loss: 0.2457 - accuracy: 0.3102 - mean_squared_error: 0.3151 - val_loss: 0.2452 - val_accuracy: 0.2359 - val_mean_squared_error: 0.3381 - 76s/epoch - 278ms/step
Epoch 13/100
273/273 - 76s - loss: 0.2388 - accuracy: 0.3731 - mean_squared_error: 0.3199 - val_loss: 0.2729 - val_accuracy: 0.3821 - val_mean_squared_error: 0.2607 - 76s/epoch - 278ms/step
Epoch 14/100
273/273 - 75s - loss: 0.2439 - accuracy: 0.3101 - mean_squared_error: 0.5441 - val_loss: 0.2515 - val_accuracy: 0.4163 - val_mean_squared_error: 0.5554 - 75s/epoch - 276ms/step
Epoch 15/100
273/273 - 76s - loss: 0.2465 - accuracy: 0.3497 - mean_squared_error: 0.3329 - val_loss: 0.2344 - val_accuracy: 0.3488 - val_mean_squared_error: 0.3398 - 76s/epoch - 279ms/step
Epoch 16/100
273/273 - 76s - loss: 0.2457 - accuracy: 0.3491 - mean_squared_error: 0.3193 - val_loss: 0.2529 - val_accuracy: 0.3599 - val_mean_squared_error: 0.3024 - 76s/epoch - 278ms/step
Epoch 17/100
273/273 - 75s - loss: 0.2407 - accuracy: 0.3211 - mean_squared_error: 0.2847 - val_loss: 0.2526 - val_accuracy: 0.3730 - val_mean_squared_error: 0.2590 - 75s/epoch - 276ms/step
Epoch 18/100
273/273 - 75s - loss: 0.2412 - accuracy: 0.3270 - mean_squared_error: 0.3947 - val_loss: 0.2513 - val_accuracy: 0.2571 - val_mean_squared_error: 0.4138 - 75s/epoch - 275ms/step
Epoch 19/100
273/273 - 76s - loss: 0.2475 - accuracy: 0.3777 - mean_squared_error: 0.2818 - val_loss: 0.2662 - val_accuracy: 0.3085 - val_mean_squared_error: 0.2879 - 76s/epoch - 278ms/step
Epoch 20/100
273/273 - 75s - loss: 0.2411 - accuracy: 0.3499 - mean_squared_error: 0.2963 - val_loss: 0.2445 - val_accuracy: 0.3488 - val_mean_squared_error: 0.2156 - 75s/epoch - 274ms/step
Epoch 21/100
273/273 - 76s - loss: 0.2431 - accuracy: 0.3001 - mean_squared_error: 0.3736 - val_loss: 0.2530 - val_accuracy: 0.3397 - val_mean_squared_error: 0.3414 - 76s/epoch - 278ms/step
Epoch 22/100
273/273 - 76s - loss: 0.2357 - accuracy: 0.3277 - mean_squared_error: 0.4987 - val_loss: 0.2538 - val_accuracy: 0.2530 - val_mean_squared_error: 0.4803 - 76s/epoch - 279ms/step
Epoch 23/100
273/273 - 75s - loss: 0.2446 - accuracy: 0.3134 - mean_squared_error: 0.3381 - val_loss: 0.2354 - val_accuracy: 0.3468 - val_mean_squared_error: 0.2784 - 75s/epoch - 275ms/step
Epoch 24/100
273/273 - 76s - loss: 0.2406 - accuracy: 0.3872 - mean_squared_error: 0.2196 - val_loss: 0.2553 - val_accuracy: 0.3508 - val_mean_squared_error: 0.2264 - 76s/epoch - 278ms/step
Epoch 25/100
273/273 - 75s - loss: 0.2455 - accuracy: 0.3146 - mean_squared_error: 0.3188 - val_loss: 0.2557 - val_accuracy: 0.2812 - val_mean_squared_error: 0.4097 - 75s/epoch - 276ms/step
Epoch 26/100
273/273 - 75s - loss: 0.2373 - accuracy: 0.3560 - mean_squared_error: 0.3078 - val_loss: 0.2502 - val_accuracy: 0.3599 - val_mean_squared_error: 0.2888 - 75s/epoch - 276ms/step
Epoch 27/100
273/273 - 74s - loss: 0.2329 - accuracy: 0.3535 - mean_squared_error: 0.2693 - val_loss: 0.2436 - val_accuracy: 0.3236 - val_mean_squared_error: 0.2768 - 74s/epoch - 272ms/step
Epoch 28/100
273/273 - 74s - loss: 0.2073 - accuracy: 0.3331 - mean_squared_error: 0.3122 - val_loss: 0.2592 - val_accuracy: 0.3185 - val_mean_squared_error: 0.2854 - 74s/epoch - 270ms/step
Epoch 29/100
273/273 - 75s - loss: 0.1715 - accuracy: 0.3656 - mean_squared_error: 0.3213 - val_loss: 0.2601 - val_accuracy: 0.3448 - val_mean_squared_error: 0.3831 - 75s/epoch - 275ms/step
Epoch 30/100
273/273 - 76s - loss: 0.1570 - accuracy: 0.3536 - mean_squared_error: 0.3869 - val_loss: 0.2441 - val_accuracy: 0.3216 - val_mean_squared_error: 0.3340 - 76s/epoch - 277ms/step
Epoch 31/100
273/273 - 76s - loss: 0.1180 - accuracy: 0.3318 - mean_squared_error: 0.4795 - val_loss: 0.2690 - val_accuracy: 0.4466 - val_mean_squared_error: 0.4290 - 76s/epoch - 277ms/step
Epoch 32/100
273/273 - 75s - loss: 0.1212 - accuracy: 0.2965 - mean_squared_error: 0.4611 - val_loss: 0.2573 - val_accuracy: 0.3276 - val_mean_squared_error: 0.4901 - 75s/epoch - 275ms/step
Epoch 33/100
273/273 - 75s - loss: 0.1131 - accuracy: 0.3478 - mean_squared_error: 0.5026 - val_loss: 0.2685 - val_accuracy: 0.2419 - val_mean_squared_error: 0.5351 - 75s/epoch - 276ms/step
Epoch 34/100
273/273 - 74s - loss: 0.1027 - accuracy: 0.2838 - mean_squared_error: 0.5044 - val_loss: 0.2577 - val_accuracy: 0.2883 - val_mean_squared_error: 0.5049 - 74s/epoch - 271ms/step
Epoch 35/100
273/273 - 76s - loss: 0.1033 - accuracy: 0.3253 - mean_squared_error: 0.4869 - val_loss: 0.2460 - val_accuracy: 0.3407 - val_mean_squared_error: 0.4411 - 76s/epoch - 277ms/step
Epoch 36/100
273/273 - 74s - loss: 0.1009 - accuracy: 0.4006 - mean_squared_error: 0.4498 - val_loss: 0.2603 - val_accuracy: 0.3065 - val_mean_squared_error: 0.5351 - 74s/epoch - 271ms/step
Epoch 37/100
273/273 - 75s - loss: 0.1023 - accuracy: 0.3369 - mean_squared_error: 0.4805 - val_loss: 0.2792 - val_accuracy: 0.2712 - val_mean_squared_error: 0.4629 - 75s/epoch - 276ms/step
Epoch 38/100
273/273 - 74s - loss: 0.1021 - accuracy: 0.3177 - mean_squared_error: 0.4832 - val_loss: 0.2386 - val_accuracy: 0.3175 - val_mean_squared_error: 0.4997 - 74s/epoch - 271ms/step
Epoch 39/100
273/273 - 76s - loss: 0.1002 - accuracy: 0.3267 - mean_squared_error: 0.4648 - val_loss: 0.2560 - val_accuracy: 0.4143 - val_mean_squared_error: 0.4802 - 76s/epoch - 278ms/step
Epoch 40/100
273/273 - 75s - loss: 0.0979 - accuracy: 0.3500 - mean_squared_error: 0.4826 - val_loss: 0.2424 - val_accuracy: 0.2228 - val_mean_squared_error: 0.6236 - 75s/epoch - 275ms/step
Epoch 41/100
273/273 - 75s - loss: 0.0920 - accuracy: 0.3587 - mean_squared_error: 0.5082 - val_loss: 0.2645 - val_accuracy: 0.2621 - val_mean_squared_error: 0.5364 - 75s/epoch - 275ms/step
Epoch 42/100
273/273 - 72s - loss: 0.0943 - accuracy: 0.2914 - mean_squared_error: 0.4595 - val_loss: 0.2631 - val_accuracy: 0.3458 - val_mean_squared_error: 0.4072 - 72s/epoch - 264ms/step
Epoch 43/100
273/273 - 74s - loss: 0.0937 - accuracy: 0.3418 - mean_squared_error: 0.4357 - val_loss: 0.2576 - val_accuracy: 0.2903 - val_mean_squared_error: 0.3350 - 74s/epoch - 272ms/step
Epoch 44/100
273/273 - 75s - loss: 0.0959 - accuracy: 0.2990 - mean_squared_error: 0.4701 - val_loss: 0.2340 - val_accuracy: 0.4012 - val_mean_squared_error: 0.4143 - 75s/epoch - 273ms/step
Epoch 45/100
273/273 - 74s - loss: 0.0911 - accuracy: 0.3348 - mean_squared_error: 0.4891 - val_loss: 0.2573 - val_accuracy: 0.4002 - val_mean_squared_error: 0.3661 - 74s/epoch - 271ms/step
Epoch 46/100
273/273 - 76s - loss: 0.0866 - accuracy: 0.2759 - mean_squared_error: 0.4879 - val_loss: 0.2431 - val_accuracy: 0.3317 - val_mean_squared_error: 0.5282 - 76s/epoch - 278ms/step
Epoch 47/100
273/273 - 76s - loss: 0.0867 - accuracy: 0.3870 - mean_squared_error: 0.4701 - val_loss: 0.2657 - val_accuracy: 0.2288 - val_mean_squared_error: 0.4564 - 76s/epoch - 278ms/step
Epoch 48/100
273/273 - 76s - loss: 0.0915 - accuracy: 0.3756 - mean_squared_error: 0.4411 - val_loss: 0.2676 - val_accuracy: 0.2026 - val_mean_squared_error: 0.4015 - 76s/epoch - 277ms/step
Epoch 49/100
273/273 - 76s - loss: 0.0850 - accuracy: 0.3543 - mean_squared_error: 0.4385 - val_loss: 0.2416 - val_accuracy: 0.3327 - val_mean_squared_error: 0.3329 - 76s/epoch - 277ms/step
Epoch 50/100
273/273 - 76s - loss: 0.0853 - accuracy: 0.3656 - mean_squared_error: 0.4173 - val_loss: 0.2688 - val_accuracy: 0.3548 - val_mean_squared_error: 0.4128 - 76s/epoch - 277ms/step
Epoch 51/100
273/273 - 76s - loss: 0.0821 - accuracy: 0.3522 - mean_squared_error: 0.4483 - val_loss: 0.2341 - val_accuracy: 0.1794 - val_mean_squared_error: 0.4116 - 76s/epoch - 279ms/step
Epoch 52/100
273/273 - 75s - loss: 0.0865 - accuracy: 0.3924 - mean_squared_error: 0.4083 - val_loss: 0.2484 - val_accuracy: 0.3206 - val_mean_squared_error: 0.4276 - 75s/epoch - 274ms/step
Epoch 53/100
273/273 - 74s - loss: 0.0880 - accuracy: 0.3565 - mean_squared_error: 0.4465 - val_loss: 0.2585 - val_accuracy: 0.4768 - val_mean_squared_error: 0.3763 - 74s/epoch - 272ms/step
Epoch 54/100
273/273 - 75s - loss: 0.0853 - accuracy: 0.3405 - mean_squared_error: 0.4485 - val_loss: 0.2476 - val_accuracy: 0.4657 - val_mean_squared_error: 0.3193 - 75s/epoch - 274ms/step
Epoch 55/100
273/273 - 76s - loss: 0.0829 - accuracy: 0.3751 - mean_squared_error: 0.4501 - val_loss: 0.2646 - val_accuracy: 0.4123 - val_mean_squared_error: 0.3771 - 76s/epoch - 278ms/step
Epoch 56/100
273/273 - 76s - loss: 0.0834 - accuracy: 0.3096 - mean_squared_error: 0.4424 - val_loss: 0.2512 - val_accuracy: 0.4163 - val_mean_squared_error: 0.3931 - 76s/epoch - 277ms/step
Epoch 57/100
273/273 - 76s - loss: 0.0862 - accuracy: 0.3456 - mean_squared_error: 0.4645 - val_loss: 0.2501 - val_accuracy: 0.2863 - val_mean_squared_error: 0.4187 - 76s/epoch - 278ms/step
Epoch 58/100
273/273 - 76s - loss: 0.0832 - accuracy: 0.3698 - mean_squared_error: 0.4656 - val_loss: 0.2441 - val_accuracy: 0.3599 - val_mean_squared_error: 0.4704 - 76s/epoch - 278ms/step
Epoch 59/100
273/273 - 74s - loss: 0.0801 - accuracy: 0.3577 - mean_squared_error: 0.4566 - val_loss: 0.2594 - val_accuracy: 0.2792 - val_mean_squared_error: 0.4289 - 74s/epoch - 272ms/step
Epoch 60/100
273/273 - 76s - loss: 0.0837 - accuracy: 0.3840 - mean_squared_error: 0.4457 - val_loss: 0.2349 - val_accuracy: 0.4970 - val_mean_squared_error: 0.3518 - 76s/epoch - 278ms/step
Epoch 61/100
273/273 - 76s - loss: 0.0810 - accuracy: 0.3478 - mean_squared_error: 0.4424 - val_loss: 0.2675 - val_accuracy: 0.2460 - val_mean_squared_error: 0.4142 - 76s/epoch - 277ms/step
Epoch 62/100
273/273 - 76s - loss: 0.0794 - accuracy: 0.3780 - mean_squared_error: 0.4760 - val_loss: 0.2555 - val_accuracy: 0.2026 - val_mean_squared_error: 0.5200 - 76s/epoch - 279ms/step
Epoch 63/100
273/273 - 77s - loss: 0.0760 - accuracy: 0.3305 - mean_squared_error: 0.4565 - val_loss: 0.2654 - val_accuracy: 0.3962 - val_mean_squared_error: 0.4290 - 77s/epoch - 284ms/step
Epoch 64/100
273/273 - 75s - loss: 0.0825 - accuracy: 0.3247 - mean_squared_error: 0.4695 - val_loss: 0.2486 - val_accuracy: 0.3438 - val_mean_squared_error: 0.4295 - 75s/epoch - 275ms/step
Epoch 65/100
273/273 - 76s - loss: 0.0771 - accuracy: 0.3553 - mean_squared_error: 0.4530 - val_loss: 0.2750 - val_accuracy: 0.4617 - val_mean_squared_error: 0.3771 - 76s/epoch - 277ms/step
Epoch 66/100
273/273 - 75s - loss: 0.0808 - accuracy: 0.3633 - mean_squared_error: 0.4570 - val_loss: 0.2427 - val_accuracy: 0.2742 - val_mean_squared_error: 0.4184 - 75s/epoch - 275ms/step
Epoch 67/100
273/273 - 76s - loss: 0.0800 - accuracy: 0.3591 - mean_squared_error: 0.4626 - val_loss: 0.2409 - val_accuracy: 0.3619 - val_mean_squared_error: 0.4402 - 76s/epoch - 278ms/step
Epoch 68/100
273/273 - 77s - loss: 0.0793 - accuracy: 0.3511 - mean_squared_error: 0.4961 - val_loss: 0.2312 - val_accuracy: 0.4093 - val_mean_squared_error: 0.4244 - 77s/epoch - 281ms/step
Epoch 69/100
273/273 - 76s - loss: 0.0808 - accuracy: 0.3285 - mean_squared_error: 0.4853 - val_loss: 0.2563 - val_accuracy: 0.3468 - val_mean_squared_error: 0.4291 - 76s/epoch - 278ms/step
Epoch 70/100
273/273 - 76s - loss: 0.0776 - accuracy: 0.3631 - mean_squared_error: 0.4731 - val_loss: 0.2484 - val_accuracy: 0.3558 - val_mean_squared_error: 0.4461 - 76s/epoch - 278ms/step
Epoch 71/100
273/273 - 75s - loss: 0.0827 - accuracy: 0.3646 - mean_squared_error: 0.4708 - val_loss: 0.2440 - val_accuracy: 0.4002 - val_mean_squared_error: 0.4389 - 75s/epoch - 274ms/step
Epoch 72/100
273/273 - 77s - loss: 0.0778 - accuracy: 0.3239 - mean_squared_error: 0.4892 - val_loss: 0.2589 - val_accuracy: 0.2792 - val_mean_squared_error: 0.4964 - 77s/epoch - 283ms/step
Epoch 73/100
273/273 - 75s - loss: 0.0791 - accuracy: 0.3272 - mean_squared_error: 0.4696 - val_loss: 0.2566 - val_accuracy: 0.3145 - val_mean_squared_error: 0.4103 - 75s/epoch - 276ms/step
Epoch 74/100
273/273 - 76s - loss: 0.0775 - accuracy: 0.3742 - mean_squared_error: 0.4771 - val_loss: 0.2412 - val_accuracy: 0.3175 - val_mean_squared_error: 0.4630 - 76s/epoch - 278ms/step
Epoch 75/100
273/273 - 76s - loss: 0.0768 - accuracy: 0.3399 - mean_squared_error: 0.4791 - val_loss: 0.2291 - val_accuracy: 0.3881 - val_mean_squared_error: 0.4393 - 76s/epoch - 280ms/step
Epoch 76/100
273/273 - 75s - loss: 0.0777 - accuracy: 0.3768 - mean_squared_error: 0.4809 - val_loss: 0.2470 - val_accuracy: 0.1794 - val_mean_squared_error: 0.5006 - 75s/epoch - 276ms/step
Epoch 77/100
273/273 - 76s - loss: 0.0793 - accuracy: 0.3353 - mean_squared_error: 0.4848 - val_loss: 0.2482 - val_accuracy: 0.3427 - val_mean_squared_error: 0.3360 - 76s/epoch - 278ms/step
Epoch 78/100
273/273 - 76s - loss: 0.0798 - accuracy: 0.3410 - mean_squared_error: 0.4894 - val_loss: 0.2430 - val_accuracy: 0.2510 - val_mean_squared_error: 0.3554 - 76s/epoch - 278ms/step
Epoch 79/100
273/273 - 75s - loss: 0.0763 - accuracy: 0.3308 - mean_squared_error: 0.4657 - val_loss: 0.2477 - val_accuracy: 0.2964 - val_mean_squared_error: 0.4744 - 75s/epoch - 275ms/step
Epoch 80/100
273/273 - 75s - loss: 0.0755 - accuracy: 0.3698 - mean_squared_error: 0.4639 - val_loss: 0.2461 - val_accuracy: 0.3196 - val_mean_squared_error: 0.4372 - 75s/epoch - 275ms/step
Epoch 81/100
273/273 - 76s - loss: 0.0764 - accuracy: 0.3201 - mean_squared_error: 0.4939 - val_loss: 0.2729 - val_accuracy: 0.2802 - val_mean_squared_error: 0.4525 - 76s/epoch - 278ms/step
Epoch 82/100
273/273 - 77s - loss: 0.0740 - accuracy: 0.3460 - mean_squared_error: 0.4740 - val_loss: 0.2405 - val_accuracy: 0.3548 - val_mean_squared_error: 0.4308 - 77s/epoch - 281ms/step
Epoch 83/100
273/273 - 77s - loss: 0.0761 - accuracy: 0.3341 - mean_squared_error: 0.4784 - val_loss: 0.2351 - val_accuracy: 0.1905 - val_mean_squared_error: 0.4441 - 77s/epoch - 281ms/step
Epoch 84/100
273/273 - 73s - loss: 0.0749 - accuracy: 0.3109 - mean_squared_error: 0.4455 - val_loss: 0.2416 - val_accuracy: 0.3226 - val_mean_squared_error: 0.3911 - 73s/epoch - 266ms/step
Epoch 85/100
273/273 - 76s - loss: 0.0762 - accuracy: 0.3155 - mean_squared_error: 0.4422 - val_loss: 0.2466 - val_accuracy: 0.3196 - val_mean_squared_error: 0.4375 - 76s/epoch - 278ms/step
Epoch 86/100
273/273 - 75s - loss: 0.0754 - accuracy: 0.3486 - mean_squared_error: 0.4663 - val_loss: 0.2656 - val_accuracy: 0.4123 - val_mean_squared_error: 0.4508 - 75s/epoch - 276ms/step
Epoch 87/100
273/273 - 76s - loss: 0.0748 - accuracy: 0.3095 - mean_squared_error: 0.4399 - val_loss: 0.2727 - val_accuracy: 0.3548 - val_mean_squared_error: 0.3836 - 76s/epoch - 278ms/step
Epoch 88/100
273/273 - 77s - loss: 0.0772 - accuracy: 0.3735 - mean_squared_error: 0.4184 - val_loss: 0.2615 - val_accuracy: 0.5050 - val_mean_squared_error: 0.4137 - 77s/epoch - 281ms/step
Epoch 89/100
273/273 - 76s - loss: 0.0720 - accuracy: 0.3072 - mean_squared_error: 0.4601 - val_loss: 0.2562 - val_accuracy: 0.3770 - val_mean_squared_error: 0.4244 - 76s/epoch - 279ms/step
Epoch 90/100
273/273 - 76s - loss: 0.0789 - accuracy: 0.3425 - mean_squared_error: 0.4601 - val_loss: 0.2349 - val_accuracy: 0.2692 - val_mean_squared_error: 0.4384 - 76s/epoch - 277ms/step
Epoch 91/100
273/273 - 76s - loss: 0.0762 - accuracy: 0.3889 - mean_squared_error: 0.4648 - val_loss: 0.2630 - val_accuracy: 0.3377 - val_mean_squared_error: 0.4341 - 76s/epoch - 277ms/step
Epoch 92/100
273/273 - 77s - loss: 0.0738 - accuracy: 0.3843 - mean_squared_error: 0.4440 - val_loss: 0.2500 - val_accuracy: 0.3004 - val_mean_squared_error: 0.3419 - 77s/epoch - 282ms/step
Epoch 93/100
273/273 - 76s - loss: 0.0718 - accuracy: 0.3416 - mean_squared_error: 0.4642 - val_loss: 0.2663 - val_accuracy: 0.4728 - val_mean_squared_error: 0.3528 - 76s/epoch - 277ms/step
Epoch 94/100
273/273 - 72s - loss: 0.0718 - accuracy: 0.3353 - mean_squared_error: 0.4567 - val_loss: 0.2573 - val_accuracy: 0.3105 - val_mean_squared_error: 0.4387 - 72s/epoch - 264ms/step
Epoch 95/100
273/273 - 77s - loss: 0.0750 - accuracy: 0.3101 - mean_squared_error: 0.4807 - val_loss: 0.2271 - val_accuracy: 0.3538 - val_mean_squared_error: 0.4505 - 77s/epoch - 281ms/step
Epoch 96/100
273/273 - 76s - loss: 0.0720 - accuracy: 0.3520 - mean_squared_error: 0.4739 - val_loss: 0.2658 - val_accuracy: 0.3780 - val_mean_squared_error: 0.5034 - 76s/epoch - 278ms/step
Epoch 97/100
User defined signal 2

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213427: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:43 2023
Job was executed on host(s) <4*n-62-11-13>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 06:31:53 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 06:31:53 2023
Terminated at Thu Jan 19 08:33:23 2023
Results reported at Thu Jan 19 08:33:23 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/Adam_abs_loss_function_00005_amsgrad_true%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "Adam(learning_rate=0.0005, amsgrad=True)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "abs_loss_function" "black_background_500x500.csv" 2 "Adam_abs_loss_function_00005_amsgrad_true" "iter3"

    
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   9041.00 sec.
    Max Memory :                                 2986 MB
    Average Memory :                             2907.07 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17494.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   7292 sec.
    Turnaround time :                            31180 sec.

The output (if any) is above this job summary.

