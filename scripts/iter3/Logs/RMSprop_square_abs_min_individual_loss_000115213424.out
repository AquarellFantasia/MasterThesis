Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 05:04:17.639668: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 05:04:19.143495: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 05:04:19.144148: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 05:04:19.144160: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 05:04:22.334824: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 05:04:23.021814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:16:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.001)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  square_abs_min_individual_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_square_abs_min_individual_loss_0001
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 05:04:26.188394: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 80s - loss: 0.0781 - accuracy: 0.3172 - mean_squared_error: 0.3477 - val_loss: 0.0897 - val_accuracy: 0.2923 - val_mean_squared_error: 0.3165 - 80s/epoch - 293ms/step
Epoch 2/100
273/273 - 82s - loss: 0.0824 - accuracy: 0.3726 - mean_squared_error: 0.3112 - val_loss: 0.0830 - val_accuracy: 0.2077 - val_mean_squared_error: 0.2512 - 82s/epoch - 299ms/step
Epoch 3/100
273/273 - 83s - loss: 0.0727 - accuracy: 0.2812 - mean_squared_error: 0.2940 - val_loss: 0.0801 - val_accuracy: 0.4083 - val_mean_squared_error: 0.2755 - 83s/epoch - 303ms/step
Epoch 4/100
273/273 - 87s - loss: 0.0471 - accuracy: 0.3293 - mean_squared_error: 0.2355 - val_loss: 0.0808 - val_accuracy: 0.4113 - val_mean_squared_error: 0.2438 - 87s/epoch - 318ms/step
Epoch 5/100
273/273 - 84s - loss: 0.0282 - accuracy: 0.3428 - mean_squared_error: 0.3728 - val_loss: 0.0860 - val_accuracy: 0.2359 - val_mean_squared_error: 0.3544 - 84s/epoch - 308ms/step
Epoch 6/100
273/273 - 84s - loss: 0.0191 - accuracy: 0.3336 - mean_squared_error: 0.4060 - val_loss: 0.0847 - val_accuracy: 0.4153 - val_mean_squared_error: 0.2988 - 84s/epoch - 309ms/step
Epoch 7/100
273/273 - 83s - loss: 0.0146 - accuracy: 0.3111 - mean_squared_error: 0.3867 - val_loss: 0.0752 - val_accuracy: 0.3810 - val_mean_squared_error: 0.2564 - 83s/epoch - 304ms/step
Epoch 8/100
273/273 - 83s - loss: 0.0143 - accuracy: 0.3592 - mean_squared_error: 0.3371 - val_loss: 0.0834 - val_accuracy: 0.3034 - val_mean_squared_error: 0.2593 - 83s/epoch - 305ms/step
Epoch 9/100
273/273 - 81s - loss: 0.0133 - accuracy: 0.3820 - mean_squared_error: 0.3633 - val_loss: 0.0814 - val_accuracy: 0.2792 - val_mean_squared_error: 0.2918 - 81s/epoch - 295ms/step
Epoch 10/100
273/273 - 84s - loss: 0.0115 - accuracy: 0.3535 - mean_squared_error: 0.3527 - val_loss: 0.0669 - val_accuracy: 0.2268 - val_mean_squared_error: 0.3276 - 84s/epoch - 308ms/step
Epoch 11/100
273/273 - 85s - loss: 0.0109 - accuracy: 0.3595 - mean_squared_error: 0.3701 - val_loss: 0.0865 - val_accuracy: 0.2843 - val_mean_squared_error: 0.2923 - 85s/epoch - 312ms/step
Epoch 12/100
273/273 - 80s - loss: 0.0117 - accuracy: 0.3591 - mean_squared_error: 0.3799 - val_loss: 0.0830 - val_accuracy: 0.3780 - val_mean_squared_error: 0.3182 - 80s/epoch - 292ms/step
Epoch 13/100
273/273 - 81s - loss: 0.0109 - accuracy: 0.3813 - mean_squared_error: 0.3300 - val_loss: 0.0809 - val_accuracy: 0.2671 - val_mean_squared_error: 0.2519 - 81s/epoch - 296ms/step
Epoch 14/100
273/273 - 81s - loss: 0.0110 - accuracy: 0.3918 - mean_squared_error: 0.3569 - val_loss: 0.0836 - val_accuracy: 0.2661 - val_mean_squared_error: 0.2288 - 81s/epoch - 295ms/step
Epoch 15/100
273/273 - 84s - loss: 0.0103 - accuracy: 0.3284 - mean_squared_error: 0.3575 - val_loss: 0.0823 - val_accuracy: 0.2994 - val_mean_squared_error: 0.2869 - 84s/epoch - 307ms/step
Epoch 16/100
273/273 - 83s - loss: 0.0094 - accuracy: 0.3950 - mean_squared_error: 0.3216 - val_loss: 0.0692 - val_accuracy: 0.3750 - val_mean_squared_error: 0.2322 - 83s/epoch - 306ms/step
Epoch 17/100
273/273 - 82s - loss: 0.0093 - accuracy: 0.3476 - mean_squared_error: 0.3502 - val_loss: 0.0689 - val_accuracy: 0.3901 - val_mean_squared_error: 0.2216 - 82s/epoch - 301ms/step
Epoch 18/100
273/273 - 84s - loss: 0.0095 - accuracy: 0.3672 - mean_squared_error: 0.3142 - val_loss: 0.0781 - val_accuracy: 0.2833 - val_mean_squared_error: 0.2708 - 84s/epoch - 307ms/step
Epoch 19/100
273/273 - 80s - loss: 0.0094 - accuracy: 0.3887 - mean_squared_error: 0.3460 - val_loss: 0.0789 - val_accuracy: 0.2419 - val_mean_squared_error: 0.3042 - 80s/epoch - 294ms/step
Epoch 20/100
273/273 - 81s - loss: 0.0085 - accuracy: 0.3273 - mean_squared_error: 0.3783 - val_loss: 0.0728 - val_accuracy: 0.3478 - val_mean_squared_error: 0.3209 - 81s/epoch - 296ms/step
Epoch 21/100
273/273 - 83s - loss: 0.0087 - accuracy: 0.3646 - mean_squared_error: 0.3523 - val_loss: 0.0795 - val_accuracy: 0.3498 - val_mean_squared_error: 0.2095 - 83s/epoch - 302ms/step
Epoch 22/100
273/273 - 74s - loss: 0.0089 - accuracy: 0.4527 - mean_squared_error: 0.3342 - val_loss: 0.0694 - val_accuracy: 0.4587 - val_mean_squared_error: 0.2507 - 74s/epoch - 270ms/step
Epoch 23/100
273/273 - 74s - loss: 0.0082 - accuracy: 0.2945 - mean_squared_error: 0.3932 - val_loss: 0.0785 - val_accuracy: 0.3115 - val_mean_squared_error: 0.2848 - 74s/epoch - 272ms/step
Epoch 24/100
273/273 - 76s - loss: 0.0081 - accuracy: 0.3389 - mean_squared_error: 0.3680 - val_loss: 0.0712 - val_accuracy: 0.3931 - val_mean_squared_error: 0.2739 - 76s/epoch - 278ms/step
Epoch 25/100
273/273 - 80s - loss: 0.0083 - accuracy: 0.2872 - mean_squared_error: 0.3827 - val_loss: 0.0629 - val_accuracy: 0.3387 - val_mean_squared_error: 0.2655 - 80s/epoch - 294ms/step
Epoch 26/100
273/273 - 73s - loss: 0.0077 - accuracy: 0.3290 - mean_squared_error: 0.3841 - val_loss: 0.0764 - val_accuracy: 0.3690 - val_mean_squared_error: 0.3362 - 73s/epoch - 268ms/step
Epoch 27/100
273/273 - 71s - loss: 0.0077 - accuracy: 0.2838 - mean_squared_error: 0.3969 - val_loss: 0.0665 - val_accuracy: 0.3125 - val_mean_squared_error: 0.2051 - 71s/epoch - 262ms/step
Epoch 28/100
273/273 - 73s - loss: 0.0074 - accuracy: 0.3543 - mean_squared_error: 0.3604 - val_loss: 0.0690 - val_accuracy: 0.3417 - val_mean_squared_error: 0.3365 - 73s/epoch - 269ms/step
Epoch 29/100
273/273 - 72s - loss: 0.0070 - accuracy: 0.3255 - mean_squared_error: 0.3836 - val_loss: 0.0649 - val_accuracy: 0.3256 - val_mean_squared_error: 0.3073 - 72s/epoch - 263ms/step
Epoch 30/100
273/273 - 72s - loss: 0.0071 - accuracy: 0.3109 - mean_squared_error: 0.3619 - val_loss: 0.0752 - val_accuracy: 0.3659 - val_mean_squared_error: 0.2817 - 72s/epoch - 263ms/step
Epoch 31/100
273/273 - 70s - loss: 0.0068 - accuracy: 0.2779 - mean_squared_error: 0.3649 - val_loss: 0.0733 - val_accuracy: 0.1391 - val_mean_squared_error: 0.2319 - 70s/epoch - 258ms/step
Epoch 32/100
273/273 - 82s - loss: 0.0067 - accuracy: 0.3207 - mean_squared_error: 0.4009 - val_loss: 0.0782 - val_accuracy: 0.3508 - val_mean_squared_error: 0.2415 - 82s/epoch - 302ms/step
Epoch 33/100
273/273 - 82s - loss: 0.0068 - accuracy: 0.3150 - mean_squared_error: 0.4398 - val_loss: 0.0646 - val_accuracy: 0.3397 - val_mean_squared_error: 0.3766 - 82s/epoch - 299ms/step
Epoch 34/100
273/273 - 76s - loss: 0.0072 - accuracy: 0.3141 - mean_squared_error: 0.4330 - val_loss: 0.0647 - val_accuracy: 0.3306 - val_mean_squared_error: 0.3175 - 76s/epoch - 279ms/step
Epoch 35/100
273/273 - 82s - loss: 0.0062 - accuracy: 0.3052 - mean_squared_error: 0.3838 - val_loss: 0.0622 - val_accuracy: 0.3367 - val_mean_squared_error: 0.3030 - 82s/epoch - 300ms/step
Epoch 36/100
273/273 - 80s - loss: 0.0068 - accuracy: 0.3305 - mean_squared_error: 0.4025 - val_loss: 0.0637 - val_accuracy: 0.3206 - val_mean_squared_error: 0.2612 - 80s/epoch - 292ms/step
Epoch 37/100
273/273 - 81s - loss: 0.0065 - accuracy: 0.3273 - mean_squared_error: 0.4023 - val_loss: 0.0551 - val_accuracy: 0.2510 - val_mean_squared_error: 0.2881 - 81s/epoch - 295ms/step
Epoch 38/100
273/273 - 76s - loss: 0.0064 - accuracy: 0.3231 - mean_squared_error: 0.3862 - val_loss: 0.0510 - val_accuracy: 0.2913 - val_mean_squared_error: 0.3674 - 76s/epoch - 277ms/step
Epoch 39/100
273/273 - 82s - loss: 0.0060 - accuracy: 0.3285 - mean_squared_error: 0.3748 - val_loss: 0.0642 - val_accuracy: 0.1996 - val_mean_squared_error: 0.2933 - 82s/epoch - 300ms/step
Epoch 40/100
273/273 - 78s - loss: 0.0057 - accuracy: 0.3552 - mean_squared_error: 0.3639 - val_loss: 0.0569 - val_accuracy: 0.3952 - val_mean_squared_error: 0.1918 - 78s/epoch - 286ms/step
Epoch 41/100
273/273 - 77s - loss: 0.0062 - accuracy: 0.3130 - mean_squared_error: 0.3676 - val_loss: 0.0654 - val_accuracy: 0.4335 - val_mean_squared_error: 0.2771 - 77s/epoch - 284ms/step
Epoch 42/100
273/273 - 73s - loss: 0.0058 - accuracy: 0.3139 - mean_squared_error: 0.3709 - val_loss: 0.0606 - val_accuracy: 0.2913 - val_mean_squared_error: 0.2696 - 73s/epoch - 267ms/step
Epoch 43/100
273/273 - 73s - loss: 0.0060 - accuracy: 0.3249 - mean_squared_error: 0.3743 - val_loss: 0.0613 - val_accuracy: 0.3014 - val_mean_squared_error: 0.3206 - 73s/epoch - 267ms/step
Epoch 44/100
273/273 - 81s - loss: 0.0056 - accuracy: 0.3503 - mean_squared_error: 0.3457 - val_loss: 0.0594 - val_accuracy: 0.3125 - val_mean_squared_error: 0.2436 - 81s/epoch - 297ms/step
Epoch 45/100
273/273 - 82s - loss: 0.0054 - accuracy: 0.3235 - mean_squared_error: 0.3695 - val_loss: 0.0495 - val_accuracy: 0.3750 - val_mean_squared_error: 0.2862 - 82s/epoch - 300ms/step
Epoch 46/100
273/273 - 77s - loss: 0.0055 - accuracy: 0.3120 - mean_squared_error: 0.3713 - val_loss: 0.0606 - val_accuracy: 0.3306 - val_mean_squared_error: 0.3190 - 77s/epoch - 281ms/step
Epoch 47/100
273/273 - 78s - loss: 0.0051 - accuracy: 0.3231 - mean_squared_error: 0.3828 - val_loss: 0.0652 - val_accuracy: 0.2863 - val_mean_squared_error: 0.2713 - 78s/epoch - 287ms/step
Epoch 48/100
273/273 - 75s - loss: 0.0055 - accuracy: 0.3463 - mean_squared_error: 0.3729 - val_loss: 0.0578 - val_accuracy: 0.3065 - val_mean_squared_error: 0.2878 - 75s/epoch - 276ms/step
Epoch 49/100
273/273 - 79s - loss: 0.0053 - accuracy: 0.3914 - mean_squared_error: 0.3425 - val_loss: 0.0553 - val_accuracy: 0.3760 - val_mean_squared_error: 0.2612 - 79s/epoch - 289ms/step
Epoch 50/100
273/273 - 80s - loss: 0.0046 - accuracy: 0.3165 - mean_squared_error: 0.3959 - val_loss: 0.0467 - val_accuracy: 0.2460 - val_mean_squared_error: 0.3078 - 80s/epoch - 294ms/step
Epoch 51/100
273/273 - 82s - loss: 0.0049 - accuracy: 0.3545 - mean_squared_error: 0.3846 - val_loss: 0.0493 - val_accuracy: 0.2046 - val_mean_squared_error: 0.2804 - 82s/epoch - 301ms/step
Epoch 52/100
273/273 - 81s - loss: 0.0046 - accuracy: 0.3298 - mean_squared_error: 0.3683 - val_loss: 0.0501 - val_accuracy: 0.2056 - val_mean_squared_error: 0.3382 - 81s/epoch - 297ms/step
Epoch 53/100
273/273 - 77s - loss: 0.0044 - accuracy: 0.3315 - mean_squared_error: 0.3975 - val_loss: 0.0598 - val_accuracy: 0.3196 - val_mean_squared_error: 0.2529 - 77s/epoch - 284ms/step
Epoch 54/100
273/273 - 86s - loss: 0.0049 - accuracy: 0.3218 - mean_squared_error: 0.3957 - val_loss: 0.0535 - val_accuracy: 0.3569 - val_mean_squared_error: 0.3134 - 86s/epoch - 315ms/step
Epoch 55/100
273/273 - 77s - loss: 0.0045 - accuracy: 0.3151 - mean_squared_error: 0.3887 - val_loss: 0.0619 - val_accuracy: 0.2087 - val_mean_squared_error: 0.3877 - 77s/epoch - 284ms/step
Epoch 56/100
273/273 - 73s - loss: 0.0046 - accuracy: 0.2769 - mean_squared_error: 0.3902 - val_loss: 0.0453 - val_accuracy: 0.3306 - val_mean_squared_error: 0.3132 - 73s/epoch - 267ms/step
Epoch 57/100
273/273 - 83s - loss: 0.0041 - accuracy: 0.3051 - mean_squared_error: 0.3898 - val_loss: 0.0519 - val_accuracy: 0.2742 - val_mean_squared_error: 0.2995 - 83s/epoch - 306ms/step
Epoch 58/100
273/273 - 82s - loss: 0.0044 - accuracy: 0.3146 - mean_squared_error: 0.3902 - val_loss: 0.0481 - val_accuracy: 0.3024 - val_mean_squared_error: 0.3585 - 82s/epoch - 302ms/step
Epoch 59/100
273/273 - 79s - loss: 0.0044 - accuracy: 0.3030 - mean_squared_error: 0.3564 - val_loss: 0.0514 - val_accuracy: 0.2581 - val_mean_squared_error: 0.3244 - 79s/epoch - 288ms/step
Epoch 60/100
273/273 - 78s - loss: 0.0046 - accuracy: 0.3417 - mean_squared_error: 0.3906 - val_loss: 0.0418 - val_accuracy: 0.2974 - val_mean_squared_error: 0.3704 - 78s/epoch - 286ms/step
Epoch 61/100
273/273 - 80s - loss: 0.0041 - accuracy: 0.3399 - mean_squared_error: 0.3496 - val_loss: 0.0433 - val_accuracy: 0.1855 - val_mean_squared_error: 0.3510 - 80s/epoch - 293ms/step
Epoch 62/100
273/273 - 78s - loss: 0.0042 - accuracy: 0.3705 - mean_squared_error: 0.3553 - val_loss: 0.0364 - val_accuracy: 0.2137 - val_mean_squared_error: 0.3098 - 78s/epoch - 287ms/step
Epoch 63/100
273/273 - 82s - loss: 0.0037 - accuracy: 0.3519 - mean_squared_error: 0.3634 - val_loss: 0.0460 - val_accuracy: 0.2560 - val_mean_squared_error: 0.2794 - 82s/epoch - 299ms/step
Epoch 64/100
273/273 - 82s - loss: 0.0038 - accuracy: 0.3383 - mean_squared_error: 0.3479 - val_loss: 0.0414 - val_accuracy: 0.2722 - val_mean_squared_error: 0.2718 - 82s/epoch - 300ms/step
Epoch 65/100
273/273 - 76s - loss: 0.0039 - accuracy: 0.3045 - mean_squared_error: 0.3946 - val_loss: 0.0453 - val_accuracy: 0.2893 - val_mean_squared_error: 0.3079 - 76s/epoch - 277ms/step
Epoch 66/100
273/273 - 77s - loss: 0.0042 - accuracy: 0.3124 - mean_squared_error: 0.3730 - val_loss: 0.0423 - val_accuracy: 0.3075 - val_mean_squared_error: 0.3258 - 77s/epoch - 280ms/step
Epoch 67/100
273/273 - 81s - loss: 0.0041 - accuracy: 0.3236 - mean_squared_error: 0.3644 - val_loss: 0.0365 - val_accuracy: 0.3105 - val_mean_squared_error: 0.2629 - 81s/epoch - 295ms/step
Epoch 68/100
273/273 - 77s - loss: 0.0037 - accuracy: 0.3254 - mean_squared_error: 0.3839 - val_loss: 0.0396 - val_accuracy: 0.3196 - val_mean_squared_error: 0.3289 - 77s/epoch - 283ms/step
Epoch 69/100
273/273 - 74s - loss: 0.0038 - accuracy: 0.3599 - mean_squared_error: 0.3761 - val_loss: 0.0425 - val_accuracy: 0.3185 - val_mean_squared_error: 0.2702 - 74s/epoch - 272ms/step
Epoch 70/100
273/273 - 73s - loss: 0.0035 - accuracy: 0.3299 - mean_squared_error: 0.3938 - val_loss: 0.0406 - val_accuracy: 0.3216 - val_mean_squared_error: 0.2859 - 73s/epoch - 268ms/step
Epoch 71/100
273/273 - 82s - loss: 0.0033 - accuracy: 0.3421 - mean_squared_error: 0.3593 - val_loss: 0.0412 - val_accuracy: 0.2933 - val_mean_squared_error: 0.3154 - 82s/epoch - 299ms/step
Epoch 72/100
273/273 - 81s - loss: 0.0033 - accuracy: 0.3352 - mean_squared_error: 0.3453 - val_loss: 0.0427 - val_accuracy: 0.3034 - val_mean_squared_error: 0.3228 - 81s/epoch - 297ms/step
Epoch 73/100
273/273 - 77s - loss: 0.0028 - accuracy: 0.3456 - mean_squared_error: 0.3389 - val_loss: 0.0486 - val_accuracy: 0.1310 - val_mean_squared_error: 0.3342 - 77s/epoch - 282ms/step
Epoch 74/100
273/273 - 81s - loss: 0.0032 - accuracy: 0.3154 - mean_squared_error: 0.3830 - val_loss: 0.0352 - val_accuracy: 0.2923 - val_mean_squared_error: 0.3127 - 81s/epoch - 297ms/step
Epoch 75/100
273/273 - 77s - loss: 0.0032 - accuracy: 0.3111 - mean_squared_error: 0.3868 - val_loss: 0.0348 - val_accuracy: 0.2641 - val_mean_squared_error: 0.2905 - 77s/epoch - 282ms/step
Epoch 76/100
273/273 - 76s - loss: 0.0029 - accuracy: 0.3666 - mean_squared_error: 0.3549 - val_loss: 0.0300 - val_accuracy: 0.3901 - val_mean_squared_error: 0.2923 - 76s/epoch - 279ms/step
Epoch 77/100
273/273 - 79s - loss: 0.0029 - accuracy: 0.3092 - mean_squared_error: 0.3687 - val_loss: 0.0357 - val_accuracy: 0.3720 - val_mean_squared_error: 0.3259 - 79s/epoch - 291ms/step
Epoch 78/100
273/273 - 79s - loss: 0.0032 - accuracy: 0.3011 - mean_squared_error: 0.3828 - val_loss: 0.0364 - val_accuracy: 0.2157 - val_mean_squared_error: 0.3389 - 79s/epoch - 291ms/step
Epoch 79/100
273/273 - 77s - loss: 0.0029 - accuracy: 0.3380 - mean_squared_error: 0.3806 - val_loss: 0.0419 - val_accuracy: 0.3528 - val_mean_squared_error: 0.3368 - 77s/epoch - 281ms/step
Epoch 80/100
273/273 - 83s - loss: 0.0029 - accuracy: 0.3189 - mean_squared_error: 0.3744 - val_loss: 0.0377 - val_accuracy: 0.2460 - val_mean_squared_error: 0.2742 - 83s/epoch - 303ms/step
Epoch 81/100
273/273 - 74s - loss: 0.0028 - accuracy: 0.3707 - mean_squared_error: 0.3666 - val_loss: 0.0232 - val_accuracy: 0.2681 - val_mean_squared_error: 0.3030 - 74s/epoch - 270ms/step
Epoch 82/100
273/273 - 79s - loss: 0.0029 - accuracy: 0.3290 - mean_squared_error: 0.3891 - val_loss: 0.0305 - val_accuracy: 0.2389 - val_mean_squared_error: 0.2941 - 79s/epoch - 289ms/step
Epoch 83/100
273/273 - 84s - loss: 0.0026 - accuracy: 0.2937 - mean_squared_error: 0.3748 - val_loss: 0.0343 - val_accuracy: 0.1835 - val_mean_squared_error: 0.3603 - 84s/epoch - 309ms/step
Epoch 84/100
273/273 - 75s - loss: 0.0027 - accuracy: 0.3238 - mean_squared_error: 0.3580 - val_loss: 0.0375 - val_accuracy: 0.2389 - val_mean_squared_error: 0.2961 - 75s/epoch - 275ms/step
Epoch 85/100
273/273 - 77s - loss: 0.0029 - accuracy: 0.3344 - mean_squared_error: 0.3723 - val_loss: 0.0404 - val_accuracy: 0.2782 - val_mean_squared_error: 0.3110 - 77s/epoch - 281ms/step
Epoch 86/100
273/273 - 72s - loss: 0.0028 - accuracy: 0.3409 - mean_squared_error: 0.3574 - val_loss: 0.0456 - val_accuracy: 0.2349 - val_mean_squared_error: 0.3061 - 72s/epoch - 262ms/step
Epoch 87/100
273/273 - 74s - loss: 0.0025 - accuracy: 0.3244 - mean_squared_error: 0.4085 - val_loss: 0.0341 - val_accuracy: 0.3266 - val_mean_squared_error: 0.3002 - 74s/epoch - 273ms/step
Epoch 88/100
273/273 - 72s - loss: 0.0024 - accuracy: 0.3177 - mean_squared_error: 0.3680 - val_loss: 0.0344 - val_accuracy: 0.2651 - val_mean_squared_error: 0.3332 - 72s/epoch - 265ms/step
Epoch 89/100
273/273 - 79s - loss: 0.0027 - accuracy: 0.3719 - mean_squared_error: 0.3732 - val_loss: 0.0340 - val_accuracy: 0.3206 - val_mean_squared_error: 0.2137 - 79s/epoch - 289ms/step
Epoch 90/100
273/273 - 75s - loss: 0.0023 - accuracy: 0.3361 - mean_squared_error: 0.3501 - val_loss: 0.0384 - val_accuracy: 0.2923 - val_mean_squared_error: 0.3323 - 75s/epoch - 276ms/step
Epoch 91/100
273/273 - 77s - loss: 0.0024 - accuracy: 0.3144 - mean_squared_error: 0.4091 - val_loss: 0.0372 - val_accuracy: 0.4415 - val_mean_squared_error: 0.2805 - 77s/epoch - 281ms/step
Epoch 92/100
User defined signal 2

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213424: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:42 2023
Job was executed on host(s) <4*n-62-20-12>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 05:04:14 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 05:04:14 2023
Terminated at Thu Jan 19 07:04:32 2023
Results reported at Thu Jan 19 07:04:32 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/RMSprop_square_abs_min_individual_loss_0001%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "RMSprop(learning_rate=0.001)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "square_abs_min_individual_loss" "black_background_500x500.csv" 2 "RMSprop_square_abs_min_individual_loss_0001" "iter3"

    
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   8694.00 sec.
    Max Memory :                                 3017 MB
    Average Memory :                             2908.41 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17463.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   7315 sec.
    Turnaround time :                            25850 sec.

The output (if any) is above this job summary.

