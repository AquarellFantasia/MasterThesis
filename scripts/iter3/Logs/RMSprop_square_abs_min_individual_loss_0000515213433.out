Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 09:01:20.536257: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 09:01:25.618528: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 09:01:25.619193: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 09:01:25.619206: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 09:01:31.543185: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 09:01:36.602150: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:16:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  square_abs_min_individual_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_square_abs_min_individual_loss_00005
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 09:01:39.714673: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 72s - loss: 0.0786 - accuracy: 0.3132 - mean_squared_error: 0.3681 - val_loss: 0.0866 - val_accuracy: 0.2923 - val_mean_squared_error: 0.3533 - 72s/epoch - 265ms/step
Epoch 2/100
273/273 - 68s - loss: 0.0802 - accuracy: 0.2842 - mean_squared_error: 0.5590 - val_loss: 0.0808 - val_accuracy: 0.2631 - val_mean_squared_error: 0.5815 - 68s/epoch - 250ms/step
Epoch 3/100
273/273 - 68s - loss: 0.0762 - accuracy: 0.2728 - mean_squared_error: 0.5664 - val_loss: 0.0889 - val_accuracy: 0.4345 - val_mean_squared_error: 0.5355 - 68s/epoch - 251ms/step
Epoch 4/100
273/273 - 68s - loss: 0.0799 - accuracy: 0.3135 - mean_squared_error: 0.4569 - val_loss: 0.0722 - val_accuracy: 0.2903 - val_mean_squared_error: 0.3601 - 68s/epoch - 248ms/step
Epoch 5/100
273/273 - 65s - loss: 0.0794 - accuracy: 0.3622 - mean_squared_error: 0.3680 - val_loss: 0.0921 - val_accuracy: 0.2762 - val_mean_squared_error: 0.3138 - 65s/epoch - 238ms/step
Epoch 6/100
273/273 - 68s - loss: 0.0789 - accuracy: 0.3082 - mean_squared_error: 0.3694 - val_loss: 0.0793 - val_accuracy: 0.2903 - val_mean_squared_error: 0.3331 - 68s/epoch - 248ms/step
Epoch 7/100
273/273 - 68s - loss: 0.0807 - accuracy: 0.3006 - mean_squared_error: 0.4073 - val_loss: 0.0760 - val_accuracy: 0.3508 - val_mean_squared_error: 0.3409 - 68s/epoch - 250ms/step
Epoch 8/100
273/273 - 67s - loss: 0.0781 - accuracy: 0.3660 - mean_squared_error: 0.3396 - val_loss: 0.0810 - val_accuracy: 0.4899 - val_mean_squared_error: 0.3014 - 67s/epoch - 244ms/step
Epoch 9/100
273/273 - 67s - loss: 0.0791 - accuracy: 0.3412 - mean_squared_error: 0.3380 - val_loss: 0.0836 - val_accuracy: 0.2641 - val_mean_squared_error: 0.3030 - 67s/epoch - 245ms/step
Epoch 10/100
273/273 - 66s - loss: 0.0822 - accuracy: 0.3020 - mean_squared_error: 0.3136 - val_loss: 0.0793 - val_accuracy: 0.3397 - val_mean_squared_error: 0.3313 - 66s/epoch - 240ms/step
Epoch 11/100
273/273 - 66s - loss: 0.0834 - accuracy: 0.3590 - mean_squared_error: 0.3465 - val_loss: 0.0846 - val_accuracy: 0.2631 - val_mean_squared_error: 0.3542 - 66s/epoch - 242ms/step
Epoch 12/100
273/273 - 65s - loss: 0.0808 - accuracy: 0.3511 - mean_squared_error: 0.3111 - val_loss: 0.0912 - val_accuracy: 0.2429 - val_mean_squared_error: 0.3221 - 65s/epoch - 237ms/step
Epoch 13/100
273/273 - 70s - loss: 0.0809 - accuracy: 0.3210 - mean_squared_error: 0.3001 - val_loss: 0.0983 - val_accuracy: 0.2792 - val_mean_squared_error: 0.3018 - 70s/epoch - 256ms/step
Epoch 14/100
273/273 - 68s - loss: 0.0807 - accuracy: 0.2709 - mean_squared_error: 0.3110 - val_loss: 0.0902 - val_accuracy: 0.3085 - val_mean_squared_error: 0.2988 - 68s/epoch - 249ms/step
Epoch 15/100
273/273 - 67s - loss: 0.0806 - accuracy: 0.3207 - mean_squared_error: 0.3108 - val_loss: 0.0982 - val_accuracy: 0.4627 - val_mean_squared_error: 0.2939 - 67s/epoch - 247ms/step
Epoch 16/100
273/273 - 68s - loss: 0.0811 - accuracy: 0.3217 - mean_squared_error: 0.2925 - val_loss: 0.0775 - val_accuracy: 0.2238 - val_mean_squared_error: 0.2593 - 68s/epoch - 248ms/step
Epoch 17/100
273/273 - 68s - loss: 0.0806 - accuracy: 0.3171 - mean_squared_error: 0.2882 - val_loss: 0.0840 - val_accuracy: 0.4042 - val_mean_squared_error: 0.2716 - 68s/epoch - 248ms/step
Epoch 18/100
273/273 - 67s - loss: 0.0831 - accuracy: 0.3476 - mean_squared_error: 0.2829 - val_loss: 0.0822 - val_accuracy: 0.2762 - val_mean_squared_error: 0.3096 - 67s/epoch - 246ms/step
Epoch 19/100
273/273 - 68s - loss: 0.0811 - accuracy: 0.3253 - mean_squared_error: 0.3177 - val_loss: 0.0813 - val_accuracy: 0.2812 - val_mean_squared_error: 0.2865 - 68s/epoch - 248ms/step
Epoch 20/100
273/273 - 65s - loss: 0.0813 - accuracy: 0.3339 - mean_squared_error: 0.3078 - val_loss: 0.0896 - val_accuracy: 0.3982 - val_mean_squared_error: 0.3227 - 65s/epoch - 240ms/step
Epoch 21/100
273/273 - 67s - loss: 0.0798 - accuracy: 0.2990 - mean_squared_error: 0.2797 - val_loss: 0.0723 - val_accuracy: 0.4435 - val_mean_squared_error: 0.2854 - 67s/epoch - 247ms/step
Epoch 22/100
273/273 - 70s - loss: 0.0823 - accuracy: 0.3044 - mean_squared_error: 0.2927 - val_loss: 0.0826 - val_accuracy: 0.4113 - val_mean_squared_error: 0.2869 - 70s/epoch - 257ms/step
Epoch 23/100
273/273 - 70s - loss: 0.0818 - accuracy: 0.3108 - mean_squared_error: 0.3490 - val_loss: 0.0806 - val_accuracy: 0.3196 - val_mean_squared_error: 0.2953 - 70s/epoch - 255ms/step
Epoch 24/100
273/273 - 68s - loss: 0.0791 - accuracy: 0.3273 - mean_squared_error: 0.4019 - val_loss: 0.0875 - val_accuracy: 0.2056 - val_mean_squared_error: 0.4079 - 68s/epoch - 248ms/step
Epoch 25/100
273/273 - 68s - loss: 0.0869 - accuracy: 0.3093 - mean_squared_error: 0.3866 - val_loss: 0.0748 - val_accuracy: 0.2571 - val_mean_squared_error: 0.4652 - 68s/epoch - 249ms/step
Epoch 26/100
273/273 - 68s - loss: 0.0842 - accuracy: 0.3728 - mean_squared_error: 0.3923 - val_loss: 0.0856 - val_accuracy: 0.3649 - val_mean_squared_error: 0.3979 - 68s/epoch - 248ms/step
Epoch 27/100
273/273 - 68s - loss: 0.0779 - accuracy: 0.3253 - mean_squared_error: 0.4202 - val_loss: 0.0750 - val_accuracy: 0.3871 - val_mean_squared_error: 0.4807 - 68s/epoch - 248ms/step
Epoch 28/100
273/273 - 67s - loss: 0.0816 - accuracy: 0.3151 - mean_squared_error: 0.4091 - val_loss: 0.0801 - val_accuracy: 0.3679 - val_mean_squared_error: 0.3602 - 67s/epoch - 247ms/step
Epoch 29/100
273/273 - 68s - loss: 0.0855 - accuracy: 0.3490 - mean_squared_error: 0.3735 - val_loss: 0.0808 - val_accuracy: 0.3266 - val_mean_squared_error: 0.4481 - 68s/epoch - 249ms/step
Epoch 30/100
273/273 - 66s - loss: 0.0842 - accuracy: 0.3510 - mean_squared_error: 0.3991 - val_loss: 0.0944 - val_accuracy: 0.2278 - val_mean_squared_error: 0.3828 - 66s/epoch - 242ms/step
Epoch 31/100
273/273 - 68s - loss: 0.0797 - accuracy: 0.2812 - mean_squared_error: 0.4308 - val_loss: 0.0862 - val_accuracy: 0.2016 - val_mean_squared_error: 0.4053 - 68s/epoch - 250ms/step
Epoch 32/100
273/273 - 68s - loss: 0.0835 - accuracy: 0.2999 - mean_squared_error: 0.4168 - val_loss: 0.0790 - val_accuracy: 0.3226 - val_mean_squared_error: 0.4258 - 68s/epoch - 250ms/step
Epoch 33/100
273/273 - 66s - loss: 0.0800 - accuracy: 0.3487 - mean_squared_error: 0.4104 - val_loss: 0.0915 - val_accuracy: 0.2883 - val_mean_squared_error: 0.3887 - 66s/epoch - 241ms/step
Epoch 34/100
273/273 - 67s - loss: 0.0794 - accuracy: 0.3421 - mean_squared_error: 0.4041 - val_loss: 0.0830 - val_accuracy: 0.3417 - val_mean_squared_error: 0.3764 - 67s/epoch - 245ms/step
Epoch 35/100
273/273 - 67s - loss: 0.0810 - accuracy: 0.3046 - mean_squared_error: 0.3886 - val_loss: 0.0749 - val_accuracy: 0.3488 - val_mean_squared_error: 0.3845 - 67s/epoch - 246ms/step
Epoch 36/100
273/273 - 67s - loss: 0.0792 - accuracy: 0.3613 - mean_squared_error: 0.3903 - val_loss: 0.0895 - val_accuracy: 0.3881 - val_mean_squared_error: 0.3866 - 67s/epoch - 244ms/step
Epoch 37/100
273/273 - 66s - loss: 0.0787 - accuracy: 0.3217 - mean_squared_error: 0.3952 - val_loss: 0.0856 - val_accuracy: 0.3397 - val_mean_squared_error: 0.4128 - 66s/epoch - 243ms/step
Epoch 38/100
273/273 - 68s - loss: 0.0845 - accuracy: 0.3481 - mean_squared_error: 0.4383 - val_loss: 0.0886 - val_accuracy: 0.3155 - val_mean_squared_error: 0.4778 - 68s/epoch - 249ms/step
Epoch 39/100
273/273 - 69s - loss: 0.0827 - accuracy: 0.3576 - mean_squared_error: 0.4391 - val_loss: 0.0883 - val_accuracy: 0.3347 - val_mean_squared_error: 0.4370 - 69s/epoch - 254ms/step
Epoch 40/100
273/273 - 66s - loss: 0.0828 - accuracy: 0.3853 - mean_squared_error: 0.4198 - val_loss: 0.0809 - val_accuracy: 0.3115 - val_mean_squared_error: 0.3953 - 66s/epoch - 242ms/step
Epoch 41/100
273/273 - 66s - loss: 0.0847 - accuracy: 0.3341 - mean_squared_error: 0.4444 - val_loss: 0.0788 - val_accuracy: 0.3337 - val_mean_squared_error: 0.4387 - 66s/epoch - 240ms/step
Epoch 42/100
273/273 - 66s - loss: 0.0837 - accuracy: 0.3360 - mean_squared_error: 0.4427 - val_loss: 0.0922 - val_accuracy: 0.4395 - val_mean_squared_error: 0.4054 - 66s/epoch - 243ms/step
Epoch 43/100
273/273 - 69s - loss: 0.0813 - accuracy: 0.3117 - mean_squared_error: 0.4282 - val_loss: 0.0783 - val_accuracy: 0.2470 - val_mean_squared_error: 0.4211 - 69s/epoch - 252ms/step
Epoch 44/100
273/273 - 69s - loss: 0.0771 - accuracy: 0.3130 - mean_squared_error: 0.4716 - val_loss: 0.0863 - val_accuracy: 0.3054 - val_mean_squared_error: 0.4369 - 69s/epoch - 252ms/step
Epoch 45/100
273/273 - 70s - loss: 0.0798 - accuracy: 0.2974 - mean_squared_error: 0.4418 - val_loss: 0.0881 - val_accuracy: 0.3861 - val_mean_squared_error: 0.4598 - 70s/epoch - 255ms/step
Epoch 46/100
273/273 - 69s - loss: 0.0819 - accuracy: 0.3082 - mean_squared_error: 0.4665 - val_loss: 0.0878 - val_accuracy: 0.2873 - val_mean_squared_error: 0.4811 - 69s/epoch - 253ms/step
Epoch 47/100
273/273 - 69s - loss: 0.0810 - accuracy: 0.3117 - mean_squared_error: 0.4765 - val_loss: 0.0907 - val_accuracy: 0.3266 - val_mean_squared_error: 0.4390 - 69s/epoch - 252ms/step
Epoch 48/100
273/273 - 69s - loss: 0.0811 - accuracy: 0.3419 - mean_squared_error: 0.4811 - val_loss: 0.0893 - val_accuracy: 0.3780 - val_mean_squared_error: 0.4522 - 69s/epoch - 252ms/step
Epoch 49/100
273/273 - 69s - loss: 0.0844 - accuracy: 0.3415 - mean_squared_error: 0.5074 - val_loss: 0.0916 - val_accuracy: 0.2308 - val_mean_squared_error: 0.5031 - 69s/epoch - 252ms/step
Epoch 50/100
273/273 - 69s - loss: 0.0830 - accuracy: 0.3122 - mean_squared_error: 0.5305 - val_loss: 0.0775 - val_accuracy: 0.4869 - val_mean_squared_error: 0.4662 - 69s/epoch - 252ms/step
Epoch 51/100
273/273 - 66s - loss: 0.0816 - accuracy: 0.3086 - mean_squared_error: 0.5590 - val_loss: 0.0845 - val_accuracy: 0.3891 - val_mean_squared_error: 0.5714 - 66s/epoch - 242ms/step
Epoch 52/100
273/273 - 65s - loss: 0.0813 - accuracy: 0.2878 - mean_squared_error: 0.5622 - val_loss: 0.0794 - val_accuracy: 0.4173 - val_mean_squared_error: 0.5600 - 65s/epoch - 240ms/step
Epoch 53/100
273/273 - 68s - loss: 0.0826 - accuracy: 0.3282 - mean_squared_error: 0.5032 - val_loss: 0.0969 - val_accuracy: 0.3679 - val_mean_squared_error: 0.4433 - 68s/epoch - 251ms/step
Epoch 54/100
273/273 - 69s - loss: 0.0822 - accuracy: 0.3131 - mean_squared_error: 0.5052 - val_loss: 0.0851 - val_accuracy: 0.3659 - val_mean_squared_error: 0.5018 - 69s/epoch - 251ms/step
Epoch 55/100
273/273 - 69s - loss: 0.0783 - accuracy: 0.3266 - mean_squared_error: 0.5425 - val_loss: 0.0756 - val_accuracy: 0.2954 - val_mean_squared_error: 0.5283 - 69s/epoch - 252ms/step
Epoch 56/100
273/273 - 69s - loss: 0.0822 - accuracy: 0.3187 - mean_squared_error: 0.5473 - val_loss: 0.0855 - val_accuracy: 0.3992 - val_mean_squared_error: 0.5327 - 69s/epoch - 251ms/step
Epoch 57/100
273/273 - 66s - loss: 0.0815 - accuracy: 0.2930 - mean_squared_error: 0.5352 - val_loss: 0.0842 - val_accuracy: 0.2369 - val_mean_squared_error: 0.5614 - 66s/epoch - 241ms/step
Epoch 58/100
273/273 - 66s - loss: 0.0847 - accuracy: 0.3367 - mean_squared_error: 0.5222 - val_loss: 0.0891 - val_accuracy: 0.4425 - val_mean_squared_error: 0.5191 - 66s/epoch - 243ms/step
Epoch 59/100
273/273 - 67s - loss: 0.0857 - accuracy: 0.3394 - mean_squared_error: 0.5306 - val_loss: 0.0867 - val_accuracy: 0.4022 - val_mean_squared_error: 0.4647 - 67s/epoch - 245ms/step
Epoch 60/100
273/273 - 67s - loss: 0.0798 - accuracy: 0.3001 - mean_squared_error: 0.5402 - val_loss: 0.0803 - val_accuracy: 0.2490 - val_mean_squared_error: 0.5714 - 67s/epoch - 245ms/step
Epoch 61/100
273/273 - 67s - loss: 0.0854 - accuracy: 0.3742 - mean_squared_error: 0.5399 - val_loss: 0.0832 - val_accuracy: 0.3296 - val_mean_squared_error: 0.5433 - 67s/epoch - 244ms/step
Epoch 62/100
273/273 - 69s - loss: 0.0776 - accuracy: 0.3385 - mean_squared_error: 0.5210 - val_loss: 0.0735 - val_accuracy: 0.2893 - val_mean_squared_error: 0.5180 - 69s/epoch - 252ms/step
Epoch 63/100
273/273 - 70s - loss: 0.0895 - accuracy: 0.3878 - mean_squared_error: 0.5494 - val_loss: 0.0788 - val_accuracy: 0.4052 - val_mean_squared_error: 0.5412 - 70s/epoch - 255ms/step
Epoch 64/100
273/273 - 68s - loss: 0.0798 - accuracy: 0.3360 - mean_squared_error: 0.5509 - val_loss: 0.0726 - val_accuracy: 0.3458 - val_mean_squared_error: 0.5421 - 68s/epoch - 249ms/step
Epoch 65/100
273/273 - 68s - loss: 0.0812 - accuracy: 0.3685 - mean_squared_error: 0.5589 - val_loss: 0.0819 - val_accuracy: 0.3175 - val_mean_squared_error: 0.5840 - 68s/epoch - 248ms/step
Epoch 66/100
273/273 - 69s - loss: 0.0832 - accuracy: 0.3149 - mean_squared_error: 0.5618 - val_loss: 0.0922 - val_accuracy: 0.3458 - val_mean_squared_error: 0.6057 - 69s/epoch - 251ms/step
Epoch 67/100
273/273 - 65s - loss: 0.0856 - accuracy: 0.3654 - mean_squared_error: 0.5459 - val_loss: 0.0899 - val_accuracy: 0.4244 - val_mean_squared_error: 0.5118 - 65s/epoch - 237ms/step
Epoch 68/100
273/273 - 64s - loss: 0.0800 - accuracy: 0.3330 - mean_squared_error: 0.5303 - val_loss: 0.0840 - val_accuracy: 0.3196 - val_mean_squared_error: 0.5646 - 64s/epoch - 236ms/step
Epoch 69/100
273/273 - 66s - loss: 0.0828 - accuracy: 0.3702 - mean_squared_error: 0.5504 - val_loss: 0.0844 - val_accuracy: 0.3720 - val_mean_squared_error: 0.5278 - 66s/epoch - 241ms/step
Epoch 70/100
273/273 - 64s - loss: 0.0829 - accuracy: 0.3236 - mean_squared_error: 0.5684 - val_loss: 0.0785 - val_accuracy: 0.3115 - val_mean_squared_error: 0.5586 - 64s/epoch - 235ms/step
Epoch 71/100
273/273 - 68s - loss: 0.0830 - accuracy: 0.3317 - mean_squared_error: 0.5600 - val_loss: 0.0713 - val_accuracy: 0.3760 - val_mean_squared_error: 0.5082 - 68s/epoch - 249ms/step
Epoch 72/100
273/273 - 67s - loss: 0.0841 - accuracy: 0.3620 - mean_squared_error: 0.5431 - val_loss: 0.0810 - val_accuracy: 0.3135 - val_mean_squared_error: 0.5600 - 67s/epoch - 247ms/step
Epoch 73/100
273/273 - 68s - loss: 0.0823 - accuracy: 0.3038 - mean_squared_error: 0.5390 - val_loss: 0.0859 - val_accuracy: 0.3992 - val_mean_squared_error: 0.5053 - 68s/epoch - 248ms/step
Epoch 74/100
273/273 - 66s - loss: 0.0815 - accuracy: 0.3234 - mean_squared_error: 0.5100 - val_loss: 0.0811 - val_accuracy: 0.3075 - val_mean_squared_error: 0.5191 - 66s/epoch - 243ms/step
Epoch 75/100
273/273 - 68s - loss: 0.0832 - accuracy: 0.3239 - mean_squared_error: 0.5033 - val_loss: 0.0896 - val_accuracy: 0.3266 - val_mean_squared_error: 0.4943 - 68s/epoch - 248ms/step
Epoch 76/100
273/273 - 68s - loss: 0.0837 - accuracy: 0.3149 - mean_squared_error: 0.5118 - val_loss: 0.0907 - val_accuracy: 0.3438 - val_mean_squared_error: 0.4645 - 68s/epoch - 248ms/step
Epoch 77/100
273/273 - 68s - loss: 0.0808 - accuracy: 0.2934 - mean_squared_error: 0.5126 - val_loss: 0.0828 - val_accuracy: 0.2298 - val_mean_squared_error: 0.5049 - 68s/epoch - 248ms/step
Epoch 78/100
273/273 - 68s - loss: 0.0791 - accuracy: 0.3199 - mean_squared_error: 0.4995 - val_loss: 0.0830 - val_accuracy: 0.3952 - val_mean_squared_error: 0.5041 - 68s/epoch - 248ms/step
Epoch 79/100
273/273 - 70s - loss: 0.0845 - accuracy: 0.3065 - mean_squared_error: 0.4579 - val_loss: 0.0860 - val_accuracy: 0.4143 - val_mean_squared_error: 0.4520 - 70s/epoch - 256ms/step
Epoch 80/100
273/273 - 68s - loss: 0.0837 - accuracy: 0.3632 - mean_squared_error: 0.4372 - val_loss: 0.0792 - val_accuracy: 0.4234 - val_mean_squared_error: 0.3879 - 68s/epoch - 248ms/step
Epoch 81/100
273/273 - 65s - loss: 0.0804 - accuracy: 0.3458 - mean_squared_error: 0.4197 - val_loss: 0.0796 - val_accuracy: 0.3065 - val_mean_squared_error: 0.4626 - 65s/epoch - 239ms/step
Epoch 82/100
273/273 - 65s - loss: 0.0821 - accuracy: 0.3280 - mean_squared_error: 0.4628 - val_loss: 0.0811 - val_accuracy: 0.4375 - val_mean_squared_error: 0.4512 - 65s/epoch - 238ms/step
Epoch 83/100
273/273 - 66s - loss: 0.0812 - accuracy: 0.3195 - mean_squared_error: 0.4369 - val_loss: 0.0918 - val_accuracy: 0.4113 - val_mean_squared_error: 0.4136 - 66s/epoch - 241ms/step
Epoch 84/100
273/273 - 66s - loss: 0.0874 - accuracy: 0.3827 - mean_squared_error: 0.3768 - val_loss: 0.0872 - val_accuracy: 0.3306 - val_mean_squared_error: 0.3799 - 66s/epoch - 242ms/step
Epoch 85/100
273/273 - 66s - loss: 0.0799 - accuracy: 0.3178 - mean_squared_error: 0.3895 - val_loss: 0.0908 - val_accuracy: 0.4546 - val_mean_squared_error: 0.3746 - 66s/epoch - 241ms/step
Epoch 86/100
273/273 - 66s - loss: 0.0821 - accuracy: 0.3138 - mean_squared_error: 0.3769 - val_loss: 0.0831 - val_accuracy: 0.3831 - val_mean_squared_error: 0.3499 - 66s/epoch - 241ms/step
Epoch 87/100
273/273 - 66s - loss: 0.0817 - accuracy: 0.3017 - mean_squared_error: 0.3517 - val_loss: 0.0803 - val_accuracy: 0.2903 - val_mean_squared_error: 0.3260 - 66s/epoch - 242ms/step
Epoch 88/100
273/273 - 68s - loss: 0.0851 - accuracy: 0.3726 - mean_squared_error: 0.3442 - val_loss: 0.0873 - val_accuracy: 0.3810 - val_mean_squared_error: 0.3218 - 68s/epoch - 248ms/step
Epoch 89/100
273/273 - 68s - loss: 0.0822 - accuracy: 0.3415 - mean_squared_error: 0.3927 - val_loss: 0.0875 - val_accuracy: 0.2802 - val_mean_squared_error: 0.3760 - 68s/epoch - 248ms/step
Epoch 90/100
273/273 - 68s - loss: 0.0825 - accuracy: 0.3400 - mean_squared_error: 0.3888 - val_loss: 0.0936 - val_accuracy: 0.3508 - val_mean_squared_error: 0.3949 - 68s/epoch - 251ms/step
Epoch 91/100
273/273 - 68s - loss: 0.0817 - accuracy: 0.3693 - mean_squared_error: 0.4171 - val_loss: 0.0806 - val_accuracy: 0.3327 - val_mean_squared_error: 0.3734 - 68s/epoch - 249ms/step
Epoch 92/100
273/273 - 66s - loss: 0.0820 - accuracy: 0.3043 - mean_squared_error: 0.4136 - val_loss: 0.0850 - val_accuracy: 0.2863 - val_mean_squared_error: 0.4096 - 66s/epoch - 241ms/step
Epoch 93/100
273/273 - 68s - loss: 0.0851 - accuracy: 0.3719 - mean_squared_error: 0.3885 - val_loss: 0.0937 - val_accuracy: 0.4718 - val_mean_squared_error: 0.3396 - 68s/epoch - 247ms/step
Epoch 94/100
273/273 - 64s - loss: 0.0848 - accuracy: 0.3321 - mean_squared_error: 0.3536 - val_loss: 0.0909 - val_accuracy: 0.3458 - val_mean_squared_error: 0.3353 - 64s/epoch - 236ms/step
Epoch 95/100
273/273 - 68s - loss: 0.0849 - accuracy: 0.3286 - mean_squared_error: 0.3680 - val_loss: 0.0782 - val_accuracy: 0.2944 - val_mean_squared_error: 0.3905 - 68s/epoch - 250ms/step
Epoch 96/100
273/273 - 67s - loss: 0.0842 - accuracy: 0.3718 - mean_squared_error: 0.3529 - val_loss: 0.0883 - val_accuracy: 0.4274 - val_mean_squared_error: 0.3325 - 67s/epoch - 246ms/step
Epoch 97/100
273/273 - 66s - loss: 0.0864 - accuracy: 0.3346 - mean_squared_error: 0.3629 - val_loss: 0.0883 - val_accuracy: 0.2379 - val_mean_squared_error: 0.3571 - 66s/epoch - 243ms/step
Epoch 98/100
273/273 - 67s - loss: 0.0858 - accuracy: 0.3636 - mean_squared_error: 0.3205 - val_loss: 0.0798 - val_accuracy: 0.2298 - val_mean_squared_error: 0.2818 - 67s/epoch - 244ms/step
Epoch 99/100
Terminated

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213433: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:44 2023
Job was executed on host(s) <4*n-62-20-11>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 09:01:15 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 09:01:15 2023
Terminated at Thu Jan 19 10:51:58 2023
Results reported at Thu Jan 19 10:51:58 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/RMSprop_square_abs_min_individual_loss_00005%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "RMSprop(learning_rate=0.0005)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "square_abs_min_individual_loss" "black_background_500x500.csv" 2 "RMSprop_square_abs_min_individual_loss_00005" "iter3"

    
------------------------------------------------------------

Exited with exit code 143.

Resource usage summary:

    CPU time :                                   8179.00 sec.
    Max Memory :                                 2973 MB
    Average Memory :                             2832.10 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17507.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   6644 sec.
    Turnaround time :                            39494 sec.

The output (if any) is above this job summary.

