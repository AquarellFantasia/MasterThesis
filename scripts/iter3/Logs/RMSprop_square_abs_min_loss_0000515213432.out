Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 09:00:10.715480: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 09:00:13.011671: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 09:00:13.012382: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 09:00:13.012394: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 09:00:18.486809: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 09:00:19.186922: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:15:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  square_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_square_abs_min_loss_00005
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 09:00:21.993552: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 73s - loss: 0.0651 - accuracy: 0.3152 - mean_squared_error: 0.2909 - val_loss: 0.0723 - val_accuracy: 0.2923 - val_mean_squared_error: 0.2600 - 73s/epoch - 268ms/step
Epoch 2/100
273/273 - 66s - loss: 0.0679 - accuracy: 0.3190 - mean_squared_error: 0.3288 - val_loss: 0.0722 - val_accuracy: 0.3891 - val_mean_squared_error: 0.3267 - 66s/epoch - 240ms/step
Epoch 3/100
273/273 - 66s - loss: 0.0677 - accuracy: 0.3333 - mean_squared_error: 0.3426 - val_loss: 0.0735 - val_accuracy: 0.3992 - val_mean_squared_error: 0.3310 - 66s/epoch - 243ms/step
Epoch 4/100
273/273 - 67s - loss: 0.0647 - accuracy: 0.3205 - mean_squared_error: 0.3480 - val_loss: 0.0618 - val_accuracy: 0.4083 - val_mean_squared_error: 0.3346 - 67s/epoch - 244ms/step
Epoch 5/100
273/273 - 67s - loss: 0.0668 - accuracy: 0.3336 - mean_squared_error: 0.3459 - val_loss: 0.0768 - val_accuracy: 0.3196 - val_mean_squared_error: 0.3718 - 67s/epoch - 246ms/step
Epoch 6/100
273/273 - 66s - loss: 0.0682 - accuracy: 0.3420 - mean_squared_error: 0.3774 - val_loss: 0.0814 - val_accuracy: 0.2329 - val_mean_squared_error: 0.3619 - 66s/epoch - 241ms/step
Epoch 7/100
273/273 - 66s - loss: 0.0695 - accuracy: 0.3167 - mean_squared_error: 0.3795 - val_loss: 0.0679 - val_accuracy: 0.3407 - val_mean_squared_error: 0.4331 - 66s/epoch - 242ms/step
Epoch 8/100
273/273 - 66s - loss: 0.0678 - accuracy: 0.3526 - mean_squared_error: 0.4401 - val_loss: 0.0707 - val_accuracy: 0.2964 - val_mean_squared_error: 0.4185 - 66s/epoch - 242ms/step
Epoch 9/100
273/273 - 64s - loss: 0.0701 - accuracy: 0.3502 - mean_squared_error: 0.3802 - val_loss: 0.0716 - val_accuracy: 0.2681 - val_mean_squared_error: 0.3535 - 64s/epoch - 236ms/step
Epoch 10/100
273/273 - 69s - loss: 0.0677 - accuracy: 0.3459 - mean_squared_error: 0.3598 - val_loss: 0.0669 - val_accuracy: 0.3276 - val_mean_squared_error: 0.3360 - 69s/epoch - 252ms/step
Epoch 11/100
273/273 - 65s - loss: 0.0662 - accuracy: 0.3312 - mean_squared_error: 0.3198 - val_loss: 0.0691 - val_accuracy: 0.3952 - val_mean_squared_error: 0.3509 - 65s/epoch - 237ms/step
Epoch 12/100
273/273 - 66s - loss: 0.0731 - accuracy: 0.3253 - mean_squared_error: 0.3286 - val_loss: 0.0742 - val_accuracy: 0.3669 - val_mean_squared_error: 0.3063 - 66s/epoch - 243ms/step
Epoch 13/100
273/273 - 66s - loss: 0.0674 - accuracy: 0.3051 - mean_squared_error: 0.3507 - val_loss: 0.0667 - val_accuracy: 0.3216 - val_mean_squared_error: 0.3284 - 66s/epoch - 242ms/step
Epoch 14/100
273/273 - 65s - loss: 0.0668 - accuracy: 0.3512 - mean_squared_error: 0.3494 - val_loss: 0.0777 - val_accuracy: 0.2984 - val_mean_squared_error: 0.3342 - 65s/epoch - 239ms/step
Epoch 15/100
273/273 - 65s - loss: 0.0662 - accuracy: 0.3733 - mean_squared_error: 0.3823 - val_loss: 0.0675 - val_accuracy: 0.3417 - val_mean_squared_error: 0.3943 - 65s/epoch - 237ms/step
Epoch 16/100
273/273 - 65s - loss: 0.0699 - accuracy: 0.3500 - mean_squared_error: 0.3934 - val_loss: 0.0691 - val_accuracy: 0.2712 - val_mean_squared_error: 0.4222 - 65s/epoch - 237ms/step
Epoch 17/100
273/273 - 64s - loss: 0.0670 - accuracy: 0.3361 - mean_squared_error: 0.3504 - val_loss: 0.0723 - val_accuracy: 0.4012 - val_mean_squared_error: 0.3477 - 64s/epoch - 235ms/step
Epoch 18/100
273/273 - 65s - loss: 0.0664 - accuracy: 0.2949 - mean_squared_error: 0.3698 - val_loss: 0.0668 - val_accuracy: 0.2409 - val_mean_squared_error: 0.3760 - 65s/epoch - 237ms/step
Epoch 19/100
273/273 - 65s - loss: 0.0686 - accuracy: 0.3330 - mean_squared_error: 0.3708 - val_loss: 0.0728 - val_accuracy: 0.2732 - val_mean_squared_error: 0.3598 - 65s/epoch - 238ms/step
Epoch 20/100
273/273 - 62s - loss: 0.0696 - accuracy: 0.3314 - mean_squared_error: 0.3472 - val_loss: 0.0638 - val_accuracy: 0.3367 - val_mean_squared_error: 0.3321 - 62s/epoch - 227ms/step
Epoch 21/100
273/273 - 62s - loss: 0.0679 - accuracy: 0.3122 - mean_squared_error: 0.3675 - val_loss: 0.0745 - val_accuracy: 0.3226 - val_mean_squared_error: 0.3795 - 62s/epoch - 226ms/step
Epoch 22/100
273/273 - 65s - loss: 0.0709 - accuracy: 0.3391 - mean_squared_error: 0.3473 - val_loss: 0.0747 - val_accuracy: 0.4103 - val_mean_squared_error: 0.2948 - 65s/epoch - 237ms/step
Epoch 23/100
273/273 - 66s - loss: 0.0680 - accuracy: 0.3278 - mean_squared_error: 0.3504 - val_loss: 0.0645 - val_accuracy: 0.2843 - val_mean_squared_error: 0.3392 - 66s/epoch - 242ms/step
Epoch 24/100
273/273 - 66s - loss: 0.0661 - accuracy: 0.2807 - mean_squared_error: 0.3149 - val_loss: 0.0689 - val_accuracy: 0.3327 - val_mean_squared_error: 0.3068 - 66s/epoch - 241ms/step
Epoch 25/100
273/273 - 66s - loss: 0.0637 - accuracy: 0.3191 - mean_squared_error: 0.3170 - val_loss: 0.0746 - val_accuracy: 0.4224 - val_mean_squared_error: 0.2941 - 66s/epoch - 241ms/step
Epoch 26/100
273/273 - 67s - loss: 0.0627 - accuracy: 0.3064 - mean_squared_error: 0.3295 - val_loss: 0.0666 - val_accuracy: 0.2067 - val_mean_squared_error: 0.3703 - 67s/epoch - 244ms/step
Epoch 27/100
273/273 - 66s - loss: 0.0653 - accuracy: 0.2783 - mean_squared_error: 0.3256 - val_loss: 0.0660 - val_accuracy: 0.3296 - val_mean_squared_error: 0.3285 - 66s/epoch - 242ms/step
Epoch 28/100
273/273 - 65s - loss: 0.0686 - accuracy: 0.3851 - mean_squared_error: 0.3288 - val_loss: 0.0794 - val_accuracy: 0.3760 - val_mean_squared_error: 0.2839 - 65s/epoch - 239ms/step
Epoch 29/100
273/273 - 67s - loss: 0.0703 - accuracy: 0.3460 - mean_squared_error: 0.3202 - val_loss: 0.0698 - val_accuracy: 0.3054 - val_mean_squared_error: 0.2859 - 67s/epoch - 246ms/step
Epoch 30/100
273/273 - 62s - loss: 0.0718 - accuracy: 0.3172 - mean_squared_error: 0.3133 - val_loss: 0.0709 - val_accuracy: 0.4143 - val_mean_squared_error: 0.2868 - 62s/epoch - 227ms/step
Epoch 31/100
273/273 - 63s - loss: 0.0672 - accuracy: 0.3403 - mean_squared_error: 0.3387 - val_loss: 0.0725 - val_accuracy: 0.4032 - val_mean_squared_error: 0.3544 - 63s/epoch - 232ms/step
Epoch 32/100
273/273 - 63s - loss: 0.0665 - accuracy: 0.3377 - mean_squared_error: 0.3674 - val_loss: 0.0620 - val_accuracy: 0.2460 - val_mean_squared_error: 0.3323 - 63s/epoch - 231ms/step
Epoch 33/100
273/273 - 65s - loss: 0.0631 - accuracy: 0.2965 - mean_squared_error: 0.3554 - val_loss: 0.0601 - val_accuracy: 0.2268 - val_mean_squared_error: 0.3779 - 65s/epoch - 238ms/step
Epoch 34/100
273/273 - 65s - loss: 0.0683 - accuracy: 0.3225 - mean_squared_error: 0.3645 - val_loss: 0.0690 - val_accuracy: 0.4143 - val_mean_squared_error: 0.3894 - 65s/epoch - 239ms/step
Epoch 35/100
273/273 - 65s - loss: 0.0691 - accuracy: 0.3489 - mean_squared_error: 0.3750 - val_loss: 0.0649 - val_accuracy: 0.4294 - val_mean_squared_error: 0.3816 - 65s/epoch - 238ms/step
Epoch 36/100
273/273 - 62s - loss: 0.0682 - accuracy: 0.3575 - mean_squared_error: 0.4030 - val_loss: 0.0819 - val_accuracy: 0.4284 - val_mean_squared_error: 0.3622 - 62s/epoch - 227ms/step
Epoch 37/100
273/273 - 63s - loss: 0.0644 - accuracy: 0.2924 - mean_squared_error: 0.4421 - val_loss: 0.0690 - val_accuracy: 0.3478 - val_mean_squared_error: 0.4107 - 63s/epoch - 232ms/step
Epoch 38/100
273/273 - 65s - loss: 0.0706 - accuracy: 0.3560 - mean_squared_error: 0.3916 - val_loss: 0.0666 - val_accuracy: 0.3518 - val_mean_squared_error: 0.3682 - 65s/epoch - 239ms/step
Epoch 39/100
273/273 - 65s - loss: 0.0681 - accuracy: 0.2503 - mean_squared_error: 0.3992 - val_loss: 0.0630 - val_accuracy: 0.1683 - val_mean_squared_error: 0.3596 - 65s/epoch - 239ms/step
Epoch 40/100
273/273 - 65s - loss: 0.0649 - accuracy: 0.3283 - mean_squared_error: 0.4086 - val_loss: 0.0653 - val_accuracy: 0.3024 - val_mean_squared_error: 0.3741 - 65s/epoch - 239ms/step
Epoch 41/100
273/273 - 66s - loss: 0.0698 - accuracy: 0.3561 - mean_squared_error: 0.3917 - val_loss: 0.0587 - val_accuracy: 0.3407 - val_mean_squared_error: 0.3794 - 66s/epoch - 240ms/step
Epoch 42/100
273/273 - 66s - loss: 0.0715 - accuracy: 0.3300 - mean_squared_error: 0.3306 - val_loss: 0.0729 - val_accuracy: 0.3165 - val_mean_squared_error: 0.2763 - 66s/epoch - 242ms/step
Epoch 43/100
273/273 - 66s - loss: 0.0663 - accuracy: 0.3354 - mean_squared_error: 0.3361 - val_loss: 0.0794 - val_accuracy: 0.4254 - val_mean_squared_error: 0.3225 - 66s/epoch - 242ms/step
Epoch 44/100
273/273 - 64s - loss: 0.0673 - accuracy: 0.3381 - mean_squared_error: 0.3181 - val_loss: 0.0839 - val_accuracy: 0.3296 - val_mean_squared_error: 0.3452 - 64s/epoch - 236ms/step
Epoch 45/100
273/273 - 64s - loss: 0.0666 - accuracy: 0.3452 - mean_squared_error: 0.3358 - val_loss: 0.0686 - val_accuracy: 0.2833 - val_mean_squared_error: 0.3378 - 64s/epoch - 236ms/step
Epoch 46/100
273/273 - 65s - loss: 0.0667 - accuracy: 0.2954 - mean_squared_error: 0.3620 - val_loss: 0.0741 - val_accuracy: 0.2510 - val_mean_squared_error: 0.3654 - 65s/epoch - 239ms/step
Epoch 47/100
273/273 - 65s - loss: 0.0647 - accuracy: 0.3156 - mean_squared_error: 0.3792 - val_loss: 0.0616 - val_accuracy: 0.3054 - val_mean_squared_error: 0.3816 - 65s/epoch - 239ms/step
Epoch 48/100
273/273 - 65s - loss: 0.0648 - accuracy: 0.3541 - mean_squared_error: 0.3729 - val_loss: 0.0657 - val_accuracy: 0.2863 - val_mean_squared_error: 0.3500 - 65s/epoch - 239ms/step
Epoch 49/100
273/273 - 65s - loss: 0.0704 - accuracy: 0.3531 - mean_squared_error: 0.3461 - val_loss: 0.0704 - val_accuracy: 0.3810 - val_mean_squared_error: 0.3274 - 65s/epoch - 238ms/step
Epoch 50/100
273/273 - 65s - loss: 0.0674 - accuracy: 0.3051 - mean_squared_error: 0.3379 - val_loss: 0.0711 - val_accuracy: 0.4506 - val_mean_squared_error: 0.3095 - 65s/epoch - 239ms/step
Epoch 51/100
273/273 - 65s - loss: 0.0714 - accuracy: 0.3075 - mean_squared_error: 0.3096 - val_loss: 0.0682 - val_accuracy: 0.3054 - val_mean_squared_error: 0.2899 - 65s/epoch - 239ms/step
Epoch 52/100
273/273 - 65s - loss: 0.0612 - accuracy: 0.2960 - mean_squared_error: 0.2857 - val_loss: 0.0707 - val_accuracy: 0.3155 - val_mean_squared_error: 0.2701 - 65s/epoch - 239ms/step
Epoch 53/100
273/273 - 63s - loss: 0.0677 - accuracy: 0.2914 - mean_squared_error: 0.2838 - val_loss: 0.0722 - val_accuracy: 0.3528 - val_mean_squared_error: 0.3108 - 63s/epoch - 232ms/step
Epoch 54/100
273/273 - 65s - loss: 0.0630 - accuracy: 0.2715 - mean_squared_error: 0.3326 - val_loss: 0.0856 - val_accuracy: 0.3659 - val_mean_squared_error: 0.3538 - 65s/epoch - 239ms/step
Epoch 55/100
273/273 - 65s - loss: 0.0700 - accuracy: 0.3440 - mean_squared_error: 0.3524 - val_loss: 0.0798 - val_accuracy: 0.4335 - val_mean_squared_error: 0.3361 - 65s/epoch - 240ms/step
Epoch 56/100
273/273 - 65s - loss: 0.0653 - accuracy: 0.2863 - mean_squared_error: 0.3449 - val_loss: 0.0733 - val_accuracy: 0.3155 - val_mean_squared_error: 0.3299 - 65s/epoch - 240ms/step
Epoch 57/100
273/273 - 65s - loss: 0.0692 - accuracy: 0.3713 - mean_squared_error: 0.3339 - val_loss: 0.0759 - val_accuracy: 0.3014 - val_mean_squared_error: 0.3364 - 65s/epoch - 240ms/step
Epoch 58/100
273/273 - 65s - loss: 0.0686 - accuracy: 0.3304 - mean_squared_error: 0.3096 - val_loss: 0.0733 - val_accuracy: 0.3286 - val_mean_squared_error: 0.3004 - 65s/epoch - 238ms/step
Epoch 59/100
273/273 - 66s - loss: 0.0659 - accuracy: 0.3261 - mean_squared_error: 0.3168 - val_loss: 0.0619 - val_accuracy: 0.3619 - val_mean_squared_error: 0.2598 - 66s/epoch - 243ms/step
Epoch 60/100
273/273 - 66s - loss: 0.0647 - accuracy: 0.3088 - mean_squared_error: 0.3259 - val_loss: 0.0774 - val_accuracy: 0.3377 - val_mean_squared_error: 0.3013 - 66s/epoch - 242ms/step
Epoch 61/100
273/273 - 66s - loss: 0.0740 - accuracy: 0.3750 - mean_squared_error: 0.3234 - val_loss: 0.0659 - val_accuracy: 0.2823 - val_mean_squared_error: 0.3371 - 66s/epoch - 240ms/step
Epoch 62/100
273/273 - 64s - loss: 0.0712 - accuracy: 0.3427 - mean_squared_error: 0.2959 - val_loss: 0.0817 - val_accuracy: 0.3216 - val_mean_squared_error: 0.2917 - 64s/epoch - 236ms/step
Epoch 63/100
273/273 - 65s - loss: 0.0708 - accuracy: 0.3378 - mean_squared_error: 0.3019 - val_loss: 0.0757 - val_accuracy: 0.3367 - val_mean_squared_error: 0.3130 - 65s/epoch - 237ms/step
Epoch 64/100
273/273 - 64s - loss: 0.0667 - accuracy: 0.3155 - mean_squared_error: 0.3137 - val_loss: 0.0796 - val_accuracy: 0.3518 - val_mean_squared_error: 0.2811 - 64s/epoch - 235ms/step
Epoch 65/100
273/273 - 63s - loss: 0.0687 - accuracy: 0.3459 - mean_squared_error: 0.2879 - val_loss: 0.0665 - val_accuracy: 0.3609 - val_mean_squared_error: 0.2682 - 63s/epoch - 231ms/step
Epoch 66/100
273/273 - 65s - loss: 0.0684 - accuracy: 0.3474 - mean_squared_error: 0.2824 - val_loss: 0.0715 - val_accuracy: 0.4798 - val_mean_squared_error: 0.2831 - 65s/epoch - 238ms/step
Epoch 67/100
273/273 - 65s - loss: 0.0687 - accuracy: 0.3444 - mean_squared_error: 0.2406 - val_loss: 0.0736 - val_accuracy: 0.4022 - val_mean_squared_error: 0.2199 - 65s/epoch - 239ms/step
Epoch 68/100
273/273 - 65s - loss: 0.0680 - accuracy: 0.3541 - mean_squared_error: 0.2248 - val_loss: 0.0754 - val_accuracy: 0.3145 - val_mean_squared_error: 0.2155 - 65s/epoch - 239ms/step
Epoch 69/100
273/273 - 68s - loss: 0.0696 - accuracy: 0.3379 - mean_squared_error: 0.2405 - val_loss: 0.0733 - val_accuracy: 0.3760 - val_mean_squared_error: 0.1720 - 68s/epoch - 247ms/step
Epoch 70/100
273/273 - 65s - loss: 0.0667 - accuracy: 0.3483 - mean_squared_error: 0.2478 - val_loss: 0.0693 - val_accuracy: 0.3478 - val_mean_squared_error: 0.2368 - 65s/epoch - 238ms/step
Epoch 71/100
273/273 - 65s - loss: 0.0649 - accuracy: 0.2965 - mean_squared_error: 0.2660 - val_loss: 0.0631 - val_accuracy: 0.3438 - val_mean_squared_error: 0.2719 - 65s/epoch - 239ms/step
Epoch 72/100
273/273 - 66s - loss: 0.0679 - accuracy: 0.3122 - mean_squared_error: 0.2861 - val_loss: 0.0651 - val_accuracy: 0.2792 - val_mean_squared_error: 0.2707 - 66s/epoch - 242ms/step
Epoch 73/100
273/273 - 65s - loss: 0.0668 - accuracy: 0.2978 - mean_squared_error: 0.2978 - val_loss: 0.0674 - val_accuracy: 0.4073 - val_mean_squared_error: 0.2920 - 65s/epoch - 238ms/step
Epoch 74/100
273/273 - 65s - loss: 0.0739 - accuracy: 0.3511 - mean_squared_error: 0.3186 - val_loss: 0.0791 - val_accuracy: 0.3054 - val_mean_squared_error: 0.3132 - 65s/epoch - 238ms/step
Epoch 75/100
273/273 - 68s - loss: 0.0680 - accuracy: 0.3183 - mean_squared_error: 0.3288 - val_loss: 0.0641 - val_accuracy: 0.3579 - val_mean_squared_error: 0.3388 - 68s/epoch - 249ms/step
Epoch 76/100
273/273 - 64s - loss: 0.0657 - accuracy: 0.3016 - mean_squared_error: 0.3482 - val_loss: 0.0762 - val_accuracy: 0.3659 - val_mean_squared_error: 0.3433 - 64s/epoch - 234ms/step
Epoch 77/100
273/273 - 65s - loss: 0.0684 - accuracy: 0.3688 - mean_squared_error: 0.3446 - val_loss: 0.0676 - val_accuracy: 0.2440 - val_mean_squared_error: 0.3531 - 65s/epoch - 240ms/step
Epoch 78/100
273/273 - 65s - loss: 0.0688 - accuracy: 0.3712 - mean_squared_error: 0.3385 - val_loss: 0.0618 - val_accuracy: 0.3790 - val_mean_squared_error: 0.3639 - 65s/epoch - 239ms/step
Epoch 79/100
273/273 - 65s - loss: 0.0697 - accuracy: 0.3122 - mean_squared_error: 0.3284 - val_loss: 0.0631 - val_accuracy: 0.2379 - val_mean_squared_error: 0.3514 - 65s/epoch - 239ms/step
Epoch 80/100
273/273 - 64s - loss: 0.0705 - accuracy: 0.3504 - mean_squared_error: 0.3073 - val_loss: 0.0747 - val_accuracy: 0.3750 - val_mean_squared_error: 0.3156 - 64s/epoch - 235ms/step
Epoch 81/100
273/273 - 65s - loss: 0.0690 - accuracy: 0.3393 - mean_squared_error: 0.3030 - val_loss: 0.0818 - val_accuracy: 0.3387 - val_mean_squared_error: 0.2864 - 65s/epoch - 239ms/step
Epoch 82/100
273/273 - 65s - loss: 0.0694 - accuracy: 0.3269 - mean_squared_error: 0.3430 - val_loss: 0.0683 - val_accuracy: 0.3468 - val_mean_squared_error: 0.3756 - 65s/epoch - 239ms/step
Epoch 83/100
273/273 - 65s - loss: 0.0648 - accuracy: 0.3003 - mean_squared_error: 0.3611 - val_loss: 0.0789 - val_accuracy: 0.3427 - val_mean_squared_error: 0.3575 - 65s/epoch - 240ms/step
Epoch 84/100
273/273 - 66s - loss: 0.0678 - accuracy: 0.3673 - mean_squared_error: 0.3823 - val_loss: 0.0779 - val_accuracy: 0.3982 - val_mean_squared_error: 0.4019 - 66s/epoch - 242ms/step
Epoch 85/100
273/273 - 68s - loss: 0.0648 - accuracy: 0.2913 - mean_squared_error: 0.4190 - val_loss: 0.0642 - val_accuracy: 0.3024 - val_mean_squared_error: 0.4299 - 68s/epoch - 248ms/step
Epoch 86/100
273/273 - 68s - loss: 0.0717 - accuracy: 0.3133 - mean_squared_error: 0.4187 - val_loss: 0.0734 - val_accuracy: 0.3750 - val_mean_squared_error: 0.3859 - 68s/epoch - 249ms/step
Epoch 87/100
273/273 - 68s - loss: 0.0688 - accuracy: 0.3439 - mean_squared_error: 0.3943 - val_loss: 0.0726 - val_accuracy: 0.3165 - val_mean_squared_error: 0.3216 - 68s/epoch - 250ms/step
Epoch 88/100
273/273 - 67s - loss: 0.0653 - accuracy: 0.2871 - mean_squared_error: 0.3808 - val_loss: 0.0742 - val_accuracy: 0.3750 - val_mean_squared_error: 0.4100 - 67s/epoch - 244ms/step
Epoch 89/100
273/273 - 66s - loss: 0.0661 - accuracy: 0.3092 - mean_squared_error: 0.3976 - val_loss: 0.0779 - val_accuracy: 0.3851 - val_mean_squared_error: 0.4102 - 66s/epoch - 243ms/step
Epoch 90/100
273/273 - 66s - loss: 0.0654 - accuracy: 0.3168 - mean_squared_error: 0.4054 - val_loss: 0.0717 - val_accuracy: 0.3841 - val_mean_squared_error: 0.3778 - 66s/epoch - 243ms/step
Epoch 91/100
273/273 - 68s - loss: 0.0629 - accuracy: 0.3028 - mean_squared_error: 0.4010 - val_loss: 0.0767 - val_accuracy: 0.3206 - val_mean_squared_error: 0.3925 - 68s/epoch - 250ms/step
Epoch 92/100
273/273 - 65s - loss: 0.0696 - accuracy: 0.3378 - mean_squared_error: 0.4307 - val_loss: 0.0701 - val_accuracy: 0.3548 - val_mean_squared_error: 0.4520 - 65s/epoch - 238ms/step
Epoch 93/100
273/273 - 67s - loss: 0.0689 - accuracy: 0.3427 - mean_squared_error: 0.4725 - val_loss: 0.0622 - val_accuracy: 0.3155 - val_mean_squared_error: 0.4504 - 67s/epoch - 244ms/step
Epoch 94/100
273/273 - 69s - loss: 0.0672 - accuracy: 0.3090 - mean_squared_error: 0.4601 - val_loss: 0.0627 - val_accuracy: 0.2500 - val_mean_squared_error: 0.5239 - 69s/epoch - 253ms/step
Epoch 95/100
273/273 - 68s - loss: 0.0740 - accuracy: 0.3488 - mean_squared_error: 0.4612 - val_loss: 0.0711 - val_accuracy: 0.3720 - val_mean_squared_error: 0.4790 - 68s/epoch - 249ms/step
Epoch 96/100
273/273 - 66s - loss: 0.0666 - accuracy: 0.3052 - mean_squared_error: 0.4854 - val_loss: 0.0745 - val_accuracy: 0.2812 - val_mean_squared_error: 0.4923 - 66s/epoch - 243ms/step
Epoch 97/100
273/273 - 65s - loss: 0.0695 - accuracy: 0.3747 - mean_squared_error: 0.4970 - val_loss: 0.0638 - val_accuracy: 0.2722 - val_mean_squared_error: 0.5513 - 65s/epoch - 237ms/step
Epoch 98/100
273/273 - 68s - loss: 0.0710 - accuracy: 0.3418 - mean_squared_error: 0.4933 - val_loss: 0.0609 - val_accuracy: 0.2611 - val_mean_squared_error: 0.5120 - 68s/epoch - 250ms/step
Epoch 99/100
273/273 - 63s - loss: 0.0704 - accuracy: 0.3443 - mean_squared_error: 0.5007 - val_loss: 0.0703 - val_accuracy: 0.4345 - val_mean_squared_error: 0.4510 - 63s/epoch - 232ms/step
Epoch 100/100
273/273 - 66s - loss: 0.0666 - accuracy: 0.3394 - mean_squared_error: 0.5114 - val_loss: 0.0696 - val_accuracy: 0.4446 - val_mean_squared_error: 0.4931 - 66s/epoch - 242ms/step
Traceback (most recent call last):
  File "/zhome/ab/7/153983/project/trainModelIter2.py", line 238, in <module>
    plt.savefig("{}/Graphs/{}_Image_{}.png".format(out_path, random_id_str, unique_name))
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/pyplot.py", line 944, in savefig
    res = fig.savefig(*args, **kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/figure.py", line 3277, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backend_bases.py", line 2338, in print_figure
    result = print_method(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backend_bases.py", line 2204, in <lambda>
    print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/_api/deprecation.py", line 410, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py", line 520, in print_png
    self._print_pil(filename_or_obj, "png", pil_kwargs, metadata)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py", line 467, in _print_pil
    mpl.image.imsave(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/image.py", line 1656, in imsave
    image.save(fname, **pil_kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/PIL/Image.py", line 2317, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: 'iter3/Graphs/5138b66e97cf11ed85f8b883034fb9c2_Image_RMSprop_square_abs_min_loss_00005.png'

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213432: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:44 2023
Job was executed on host(s) <4*n-62-20-11>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 09:00:05 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 09:00:05 2023
Terminated at Thu Jan 19 10:49:33 2023
Results reported at Thu Jan 19 10:49:33 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/RMSprop_square_abs_min_loss_00005%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "RMSprop(learning_rate=0.0005)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "square_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_square_abs_min_loss_00005" "iter3"

    
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   8147.33 sec.
    Max Memory :                                 3029 MB
    Average Memory :                             2899.30 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17451.00 MB
    Max Swap :                                   1 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   6570 sec.
    Turnaround time :                            39349 sec.

The output (if any) is above this job summary.

