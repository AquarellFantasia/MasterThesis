Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 05:07:55.352118: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 05:07:56.847864: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 05:07:56.848522: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 05:07:56.848535: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 05:07:59.958924: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 05:08:00.701368: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:3a:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  Adam(learning_rate=0.005, amsgrad=False)
Metrics:  ["accuracy", tf.keras.metrics.MeanSquaredError(name="mean_squared_error", dtype=None)]
Loss function name:  square_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  Adam_square_abs_min_loss_0005_amsgrad_false
Output folder:  iter3
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 05:08:03.710185: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 90s - loss: 0.0651 - accuracy: 0.3083 - mean_squared_error: 0.3243 - val_loss: 0.0780 - val_accuracy: 0.3558 - val_mean_squared_error: 0.2718 - 90s/epoch - 331ms/step
Epoch 2/100
273/273 - 83s - loss: 0.0626 - accuracy: 0.3159 - mean_squared_error: 0.3892 - val_loss: 0.0725 - val_accuracy: 0.4042 - val_mean_squared_error: 0.4089 - 83s/epoch - 304ms/step
Epoch 3/100
273/273 - 80s - loss: 0.0629 - accuracy: 0.2751 - mean_squared_error: 0.4244 - val_loss: 0.0757 - val_accuracy: 0.3528 - val_mean_squared_error: 0.3965 - 80s/epoch - 293ms/step
Epoch 4/100
273/273 - 85s - loss: 0.0650 - accuracy: 0.2993 - mean_squared_error: 0.4519 - val_loss: 0.0704 - val_accuracy: 0.3982 - val_mean_squared_error: 0.3831 - 85s/epoch - 310ms/step
Epoch 5/100
273/273 - 84s - loss: 0.0661 - accuracy: 0.3086 - mean_squared_error: 0.5276 - val_loss: 0.0744 - val_accuracy: 0.2571 - val_mean_squared_error: 0.5500 - 84s/epoch - 307ms/step
Epoch 6/100
273/273 - 80s - loss: 0.0602 - accuracy: 0.2988 - mean_squared_error: 0.5280 - val_loss: 0.0665 - val_accuracy: 0.3065 - val_mean_squared_error: 0.5066 - 80s/epoch - 292ms/step
Epoch 7/100
273/273 - 82s - loss: 0.0679 - accuracy: 0.3426 - mean_squared_error: 0.5922 - val_loss: 0.0658 - val_accuracy: 0.3327 - val_mean_squared_error: 0.6431 - 82s/epoch - 299ms/step
Epoch 8/100
273/273 - 85s - loss: 0.0629 - accuracy: 0.3551 - mean_squared_error: 0.6370 - val_loss: 0.0693 - val_accuracy: 0.3125 - val_mean_squared_error: 0.5638 - 85s/epoch - 311ms/step
Epoch 9/100
273/273 - 82s - loss: 0.0683 - accuracy: 0.3229 - mean_squared_error: 0.4451 - val_loss: 0.0689 - val_accuracy: 0.3397 - val_mean_squared_error: 0.4285 - 82s/epoch - 300ms/step
Epoch 10/100
273/273 - 79s - loss: 0.0665 - accuracy: 0.3876 - mean_squared_error: 0.5367 - val_loss: 0.0698 - val_accuracy: 0.1794 - val_mean_squared_error: 0.6125 - 79s/epoch - 289ms/step
Epoch 11/100
273/273 - 78s - loss: 0.0671 - accuracy: 0.3554 - mean_squared_error: 0.5112 - val_loss: 0.0644 - val_accuracy: 0.3438 - val_mean_squared_error: 0.5500 - 78s/epoch - 286ms/step
Epoch 12/100
273/273 - 78s - loss: 0.0671 - accuracy: 0.3609 - mean_squared_error: 0.4487 - val_loss: 0.0734 - val_accuracy: 0.2702 - val_mean_squared_error: 0.3647 - 78s/epoch - 287ms/step
Epoch 13/100
273/273 - 78s - loss: 0.0652 - accuracy: 0.3585 - mean_squared_error: 0.4052 - val_loss: 0.0736 - val_accuracy: 0.2863 - val_mean_squared_error: 0.4069 - 78s/epoch - 287ms/step
Epoch 14/100
273/273 - 78s - loss: 0.0669 - accuracy: 0.3663 - mean_squared_error: 0.4193 - val_loss: 0.0790 - val_accuracy: 0.3054 - val_mean_squared_error: 0.5215 - 78s/epoch - 284ms/step
Epoch 15/100
273/273 - 76s - loss: 0.0650 - accuracy: 0.2896 - mean_squared_error: 0.4398 - val_loss: 0.0710 - val_accuracy: 0.4375 - val_mean_squared_error: 0.3722 - 76s/epoch - 279ms/step
Epoch 16/100
273/273 - 78s - loss: 0.0685 - accuracy: 0.3219 - mean_squared_error: 0.4634 - val_loss: 0.0696 - val_accuracy: 0.2712 - val_mean_squared_error: 0.4890 - 78s/epoch - 285ms/step
Epoch 17/100
273/273 - 81s - loss: 0.0638 - accuracy: 0.3238 - mean_squared_error: 0.3647 - val_loss: 0.0669 - val_accuracy: 0.4093 - val_mean_squared_error: 0.3341 - 81s/epoch - 297ms/step
Epoch 18/100
273/273 - 78s - loss: 0.0661 - accuracy: 0.3395 - mean_squared_error: 0.3947 - val_loss: 0.0737 - val_accuracy: 0.2984 - val_mean_squared_error: 0.3945 - 78s/epoch - 286ms/step
Epoch 19/100
273/273 - 81s - loss: 0.0659 - accuracy: 0.2521 - mean_squared_error: 0.4234 - val_loss: 0.0648 - val_accuracy: 0.3397 - val_mean_squared_error: 0.4113 - 81s/epoch - 297ms/step
Epoch 20/100
273/273 - 81s - loss: 0.0674 - accuracy: 0.3499 - mean_squared_error: 0.3919 - val_loss: 0.0771 - val_accuracy: 0.2923 - val_mean_squared_error: 0.4017 - 81s/epoch - 296ms/step
Epoch 21/100
273/273 - 78s - loss: 0.0692 - accuracy: 0.3444 - mean_squared_error: 0.4214 - val_loss: 0.0612 - val_accuracy: 0.3579 - val_mean_squared_error: 0.4563 - 78s/epoch - 286ms/step
Epoch 22/100
273/273 - 79s - loss: 0.0659 - accuracy: 0.3591 - mean_squared_error: 0.6084 - val_loss: 0.0793 - val_accuracy: 0.4042 - val_mean_squared_error: 0.6672 - 79s/epoch - 291ms/step
Epoch 23/100
273/273 - 79s - loss: 0.0681 - accuracy: 0.3494 - mean_squared_error: 0.6966 - val_loss: 0.0711 - val_accuracy: 0.3054 - val_mean_squared_error: 0.6516 - 79s/epoch - 289ms/step
Epoch 24/100
273/273 - 79s - loss: 0.0666 - accuracy: 0.3228 - mean_squared_error: 0.6234 - val_loss: 0.0701 - val_accuracy: 0.3075 - val_mean_squared_error: 0.6321 - 79s/epoch - 291ms/step
Epoch 25/100
273/273 - 80s - loss: 0.0629 - accuracy: 0.3324 - mean_squared_error: 0.6222 - val_loss: 0.0782 - val_accuracy: 0.2974 - val_mean_squared_error: 0.5963 - 80s/epoch - 293ms/step
Epoch 26/100
273/273 - 78s - loss: 0.0680 - accuracy: 0.3415 - mean_squared_error: 0.5858 - val_loss: 0.0718 - val_accuracy: 0.2772 - val_mean_squared_error: 0.5498 - 78s/epoch - 286ms/step
Epoch 27/100
273/273 - 81s - loss: 0.0632 - accuracy: 0.3220 - mean_squared_error: 0.5026 - val_loss: 0.0667 - val_accuracy: 0.3357 - val_mean_squared_error: 0.4957 - 81s/epoch - 297ms/step
Epoch 28/100
273/273 - 77s - loss: 0.0685 - accuracy: 0.3108 - mean_squared_error: 0.5531 - val_loss: 0.0697 - val_accuracy: 0.2702 - val_mean_squared_error: 0.6198 - 77s/epoch - 281ms/step
Epoch 29/100
273/273 - 80s - loss: 0.0664 - accuracy: 0.3059 - mean_squared_error: 0.5778 - val_loss: 0.0722 - val_accuracy: 0.3599 - val_mean_squared_error: 0.6519 - 80s/epoch - 292ms/step
Epoch 30/100
273/273 - 78s - loss: 0.0664 - accuracy: 0.3671 - mean_squared_error: 0.5886 - val_loss: 0.0646 - val_accuracy: 0.4456 - val_mean_squared_error: 0.5857 - 78s/epoch - 287ms/step
Epoch 31/100
273/273 - 81s - loss: 0.0654 - accuracy: 0.3468 - mean_squared_error: 0.4743 - val_loss: 0.0682 - val_accuracy: 0.3800 - val_mean_squared_error: 0.4262 - 81s/epoch - 297ms/step
Epoch 32/100
273/273 - 80s - loss: 0.0672 - accuracy: 0.3662 - mean_squared_error: 0.3136 - val_loss: 0.0789 - val_accuracy: 0.2470 - val_mean_squared_error: 0.3194 - 80s/epoch - 293ms/step
Epoch 33/100
273/273 - 77s - loss: 0.0685 - accuracy: 0.3535 - mean_squared_error: 0.2960 - val_loss: 0.0671 - val_accuracy: 0.2097 - val_mean_squared_error: 0.3334 - 77s/epoch - 283ms/step
Epoch 34/100
273/273 - 76s - loss: 0.0651 - accuracy: 0.3166 - mean_squared_error: 0.3809 - val_loss: 0.0647 - val_accuracy: 0.3236 - val_mean_squared_error: 0.4535 - 76s/epoch - 279ms/step
Epoch 35/100
273/273 - 78s - loss: 0.0655 - accuracy: 0.3337 - mean_squared_error: 0.4198 - val_loss: 0.0719 - val_accuracy: 0.3518 - val_mean_squared_error: 0.4441 - 78s/epoch - 287ms/step
Epoch 36/100
273/273 - 81s - loss: 0.0657 - accuracy: 0.3337 - mean_squared_error: 0.5655 - val_loss: 0.0592 - val_accuracy: 0.2692 - val_mean_squared_error: 0.5949 - 81s/epoch - 297ms/step
Epoch 37/100
273/273 - 77s - loss: 0.0681 - accuracy: 0.3401 - mean_squared_error: 0.4780 - val_loss: 0.0670 - val_accuracy: 0.3871 - val_mean_squared_error: 0.4260 - 77s/epoch - 282ms/step
Epoch 38/100
273/273 - 80s - loss: 0.0613 - accuracy: 0.3875 - mean_squared_error: 0.2826 - val_loss: 0.0741 - val_accuracy: 0.3165 - val_mean_squared_error: 0.2769 - 80s/epoch - 292ms/step
Epoch 39/100
273/273 - 78s - loss: 0.0668 - accuracy: 0.3478 - mean_squared_error: 0.2713 - val_loss: 0.0620 - val_accuracy: 0.3105 - val_mean_squared_error: 0.2819 - 78s/epoch - 286ms/step
Epoch 40/100
273/273 - 81s - loss: 0.0637 - accuracy: 0.3004 - mean_squared_error: 0.3068 - val_loss: 0.0673 - val_accuracy: 0.3155 - val_mean_squared_error: 0.2982 - 81s/epoch - 296ms/step
Epoch 41/100
273/273 - 81s - loss: 0.0666 - accuracy: 0.3328 - mean_squared_error: 0.3299 - val_loss: 0.0707 - val_accuracy: 0.3569 - val_mean_squared_error: 0.3245 - 81s/epoch - 297ms/step
Epoch 42/100
273/273 - 80s - loss: 0.0617 - accuracy: 0.3316 - mean_squared_error: 0.3026 - val_loss: 0.0789 - val_accuracy: 0.3810 - val_mean_squared_error: 0.2363 - 80s/epoch - 293ms/step
Epoch 43/100
273/273 - 80s - loss: 0.0649 - accuracy: 0.3241 - mean_squared_error: 0.3459 - val_loss: 0.0796 - val_accuracy: 0.3589 - val_mean_squared_error: 0.3576 - 80s/epoch - 292ms/step
Epoch 44/100
273/273 - 81s - loss: 0.0664 - accuracy: 0.3138 - mean_squared_error: 0.4851 - val_loss: 0.0833 - val_accuracy: 0.4627 - val_mean_squared_error: 0.5073 - 81s/epoch - 297ms/step
Epoch 45/100
273/273 - 81s - loss: 0.0638 - accuracy: 0.2870 - mean_squared_error: 0.5454 - val_loss: 0.0692 - val_accuracy: 0.2157 - val_mean_squared_error: 0.5322 - 81s/epoch - 298ms/step
Epoch 46/100
273/273 - 80s - loss: 0.0664 - accuracy: 0.2769 - mean_squared_error: 0.5261 - val_loss: 0.0679 - val_accuracy: 0.3458 - val_mean_squared_error: 0.5059 - 80s/epoch - 293ms/step
Epoch 47/100
273/273 - 81s - loss: 0.0638 - accuracy: 0.2834 - mean_squared_error: 0.5939 - val_loss: 0.0761 - val_accuracy: 0.2409 - val_mean_squared_error: 0.5944 - 81s/epoch - 295ms/step
Epoch 48/100
273/273 - 78s - loss: 0.0647 - accuracy: 0.3966 - mean_squared_error: 0.4735 - val_loss: 0.0752 - val_accuracy: 0.3367 - val_mean_squared_error: 0.4351 - 78s/epoch - 285ms/step
Epoch 49/100
273/273 - 78s - loss: 0.0670 - accuracy: 0.3798 - mean_squared_error: 0.5231 - val_loss: 0.0757 - val_accuracy: 0.3538 - val_mean_squared_error: 0.5741 - 78s/epoch - 285ms/step
Epoch 50/100
273/273 - 79s - loss: 0.0637 - accuracy: 0.3848 - mean_squared_error: 0.4214 - val_loss: 0.0834 - val_accuracy: 0.2802 - val_mean_squared_error: 0.3476 - 79s/epoch - 290ms/step
Epoch 51/100
273/273 - 81s - loss: 0.0641 - accuracy: 0.3777 - mean_squared_error: 0.3033 - val_loss: 0.0668 - val_accuracy: 0.3931 - val_mean_squared_error: 0.3075 - 81s/epoch - 298ms/step
Epoch 52/100
273/273 - 80s - loss: 0.0693 - accuracy: 0.3132 - mean_squared_error: 0.3834 - val_loss: 0.0723 - val_accuracy: 0.2147 - val_mean_squared_error: 0.4205 - 80s/epoch - 293ms/step
Epoch 53/100
273/273 - 81s - loss: 0.0642 - accuracy: 0.3411 - mean_squared_error: 0.4345 - val_loss: 0.0716 - val_accuracy: 0.3196 - val_mean_squared_error: 0.4198 - 81s/epoch - 298ms/step
Epoch 54/100
273/273 - 78s - loss: 0.0632 - accuracy: 0.2814 - mean_squared_error: 0.5066 - val_loss: 0.0693 - val_accuracy: 0.4103 - val_mean_squared_error: 0.4816 - 78s/epoch - 284ms/step
Epoch 55/100
273/273 - 82s - loss: 0.0656 - accuracy: 0.3520 - mean_squared_error: 0.4475 - val_loss: 0.0695 - val_accuracy: 0.5030 - val_mean_squared_error: 0.3334 - 82s/epoch - 301ms/step
Epoch 56/100
273/273 - 78s - loss: 0.0654 - accuracy: 0.2726 - mean_squared_error: 0.4977 - val_loss: 0.0729 - val_accuracy: 0.3800 - val_mean_squared_error: 0.4656 - 78s/epoch - 287ms/step
Epoch 57/100
273/273 - 75s - loss: 0.0677 - accuracy: 0.3658 - mean_squared_error: 0.4474 - val_loss: 0.0785 - val_accuracy: 0.2722 - val_mean_squared_error: 0.4130 - 75s/epoch - 273ms/step
Epoch 58/100
273/273 - 76s - loss: 0.0669 - accuracy: 0.2904 - mean_squared_error: 0.4616 - val_loss: 0.0787 - val_accuracy: 0.4587 - val_mean_squared_error: 0.3987 - 76s/epoch - 278ms/step
Epoch 59/100
273/273 - 78s - loss: 0.0677 - accuracy: 0.3554 - mean_squared_error: 0.5221 - val_loss: 0.0593 - val_accuracy: 0.2903 - val_mean_squared_error: 0.5773 - 78s/epoch - 286ms/step
Epoch 60/100
273/273 - 77s - loss: 0.0647 - accuracy: 0.3262 - mean_squared_error: 0.6675 - val_loss: 0.0756 - val_accuracy: 0.3972 - val_mean_squared_error: 0.6358 - 77s/epoch - 282ms/step
Epoch 61/100
273/273 - 80s - loss: 0.0675 - accuracy: 0.3092 - mean_squared_error: 0.6595 - val_loss: 0.0634 - val_accuracy: 0.3347 - val_mean_squared_error: 0.6735 - 80s/epoch - 295ms/step
Epoch 62/100
273/273 - 75s - loss: 0.0650 - accuracy: 0.3180 - mean_squared_error: 0.6327 - val_loss: 0.0845 - val_accuracy: 0.3921 - val_mean_squared_error: 0.6403 - 75s/epoch - 274ms/step
Epoch 63/100
273/273 - 74s - loss: 0.0692 - accuracy: 0.3451 - mean_squared_error: 0.5828 - val_loss: 0.0665 - val_accuracy: 0.3004 - val_mean_squared_error: 0.5282 - 74s/epoch - 271ms/step
Epoch 64/100
273/273 - 79s - loss: 0.0673 - accuracy: 0.3235 - mean_squared_error: 0.5373 - val_loss: 0.0629 - val_accuracy: 0.3770 - val_mean_squared_error: 0.5278 - 79s/epoch - 291ms/step
Epoch 65/100
273/273 - 72s - loss: 0.0629 - accuracy: 0.3244 - mean_squared_error: 0.5457 - val_loss: 0.0745 - val_accuracy: 0.2722 - val_mean_squared_error: 0.5080 - 72s/epoch - 265ms/step
Epoch 66/100
273/273 - 77s - loss: 0.0654 - accuracy: 0.3196 - mean_squared_error: 0.5247 - val_loss: 0.0736 - val_accuracy: 0.2712 - val_mean_squared_error: 0.5808 - 77s/epoch - 281ms/step
Epoch 67/100
273/273 - 83s - loss: 0.0673 - accuracy: 0.3108 - mean_squared_error: 0.6565 - val_loss: 0.0683 - val_accuracy: 0.3075 - val_mean_squared_error: 0.7751 - 83s/epoch - 303ms/step
Epoch 68/100
273/273 - 81s - loss: 0.0656 - accuracy: 0.3205 - mean_squared_error: 0.7195 - val_loss: 0.0747 - val_accuracy: 0.3448 - val_mean_squared_error: 0.6488 - 81s/epoch - 295ms/step
Epoch 69/100
273/273 - 79s - loss: 0.0677 - accuracy: 0.3276 - mean_squared_error: 0.6035 - val_loss: 0.0642 - val_accuracy: 0.2933 - val_mean_squared_error: 0.6124 - 79s/epoch - 290ms/step
Epoch 70/100
273/273 - 78s - loss: 0.0638 - accuracy: 0.3302 - mean_squared_error: 0.4967 - val_loss: 0.0759 - val_accuracy: 0.3246 - val_mean_squared_error: 0.4663 - 78s/epoch - 285ms/step
Epoch 71/100
273/273 - 79s - loss: 0.0672 - accuracy: 0.3716 - mean_squared_error: 0.5840 - val_loss: 0.0671 - val_accuracy: 0.2742 - val_mean_squared_error: 0.6867 - 79s/epoch - 289ms/step
Epoch 72/100
273/273 - 80s - loss: 0.0639 - accuracy: 0.3055 - mean_squared_error: 0.6938 - val_loss: 0.0859 - val_accuracy: 0.3427 - val_mean_squared_error: 0.6103 - 80s/epoch - 292ms/step
Epoch 73/100
273/273 - 84s - loss: 0.0642 - accuracy: 0.2796 - mean_squared_error: 0.6722 - val_loss: 0.0804 - val_accuracy: 0.4163 - val_mean_squared_error: 0.5871 - 84s/epoch - 309ms/step
Epoch 74/100
273/273 - 79s - loss: 0.0656 - accuracy: 0.3080 - mean_squared_error: 0.4793 - val_loss: 0.0742 - val_accuracy: 0.3337 - val_mean_squared_error: 0.3861 - 79s/epoch - 291ms/step
Epoch 75/100
273/273 - 79s - loss: 0.0679 - accuracy: 0.3357 - mean_squared_error: 0.5050 - val_loss: 0.0783 - val_accuracy: 0.2107 - val_mean_squared_error: 0.4858 - 79s/epoch - 290ms/step
Epoch 76/100
273/273 - 81s - loss: 0.0653 - accuracy: 0.3140 - mean_squared_error: 0.6336 - val_loss: 0.0714 - val_accuracy: 0.5030 - val_mean_squared_error: 0.6925 - 81s/epoch - 296ms/step
Epoch 77/100
273/273 - 78s - loss: 0.0639 - accuracy: 0.2887 - mean_squared_error: 0.9202 - val_loss: 0.0792 - val_accuracy: 0.3659 - val_mean_squared_error: 0.8751 - 78s/epoch - 287ms/step
Epoch 78/100
273/273 - 83s - loss: 0.0673 - accuracy: 0.3244 - mean_squared_error: 0.8547 - val_loss: 0.0680 - val_accuracy: 0.4526 - val_mean_squared_error: 0.6718 - 83s/epoch - 305ms/step
Epoch 79/100
273/273 - 78s - loss: 0.0671 - accuracy: 0.3332 - mean_squared_error: 0.7603 - val_loss: 0.0682 - val_accuracy: 0.3306 - val_mean_squared_error: 0.7033 - 78s/epoch - 284ms/step
Epoch 80/100
273/273 - 81s - loss: 0.0642 - accuracy: 0.3016 - mean_squared_error: 0.6742 - val_loss: 0.0712 - val_accuracy: 0.3357 - val_mean_squared_error: 0.6638 - 81s/epoch - 298ms/step
Epoch 81/100
273/273 - 77s - loss: 0.0653 - accuracy: 0.3370 - mean_squared_error: 0.7830 - val_loss: 0.0728 - val_accuracy: 0.3690 - val_mean_squared_error: 0.7843 - 77s/epoch - 281ms/step
Epoch 82/100
273/273 - 79s - loss: 0.0666 - accuracy: 0.3185 - mean_squared_error: 0.7370 - val_loss: 0.0728 - val_accuracy: 0.3810 - val_mean_squared_error: 0.6067 - 79s/epoch - 288ms/step
Epoch 83/100
273/273 - 79s - loss: 0.0690 - accuracy: 0.3171 - mean_squared_error: 0.6067 - val_loss: 0.0767 - val_accuracy: 0.2490 - val_mean_squared_error: 0.6142 - 79s/epoch - 288ms/step
Epoch 84/100
273/273 - 83s - loss: 0.0656 - accuracy: 0.2952 - mean_squared_error: 0.4546 - val_loss: 0.0588 - val_accuracy: 0.4496 - val_mean_squared_error: 0.3326 - 83s/epoch - 303ms/step
Epoch 85/100
273/273 - 83s - loss: 0.0650 - accuracy: 0.3163 - mean_squared_error: 0.5038 - val_loss: 0.0669 - val_accuracy: 0.2550 - val_mean_squared_error: 0.5610 - 83s/epoch - 303ms/step
Epoch 86/100
273/273 - 83s - loss: 0.0631 - accuracy: 0.2624 - mean_squared_error: 0.4610 - val_loss: 0.0665 - val_accuracy: 0.3558 - val_mean_squared_error: 0.4327 - 83s/epoch - 303ms/step
Epoch 87/100
273/273 - 77s - loss: 0.0670 - accuracy: 0.3496 - mean_squared_error: 0.4817 - val_loss: 0.0760 - val_accuracy: 0.3569 - val_mean_squared_error: 0.5036 - 77s/epoch - 281ms/step
Epoch 88/100
273/273 - 79s - loss: 0.0671 - accuracy: 0.3078 - mean_squared_error: 0.5520 - val_loss: 0.0847 - val_accuracy: 0.3629 - val_mean_squared_error: 0.5296 - 79s/epoch - 289ms/step
Epoch 89/100
273/273 - 74s - loss: 0.0618 - accuracy: 0.3055 - mean_squared_error: 0.5330 - val_loss: 0.0636 - val_accuracy: 0.2802 - val_mean_squared_error: 0.6072 - 74s/epoch - 269ms/step
Epoch 90/100
User defined signal 2

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15213425: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Wed Jan 18 23:53:42 2023
Job was executed on host(s) <4*n-62-20-12>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 05:07:52 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 05:07:52 2023
Terminated at Thu Jan 19 07:06:59 2023
Results reported at Thu Jan 19 07:06:59 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 2:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter3/Logs/Adam_square_abs_min_loss_0005_amsgrad_false%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "Adam(learning_rate=0.005, amsgrad=False)" "[\"accuracy\", tf.keras.metrics.MeanSquaredError(name=\"mean_squared_error\", dtype=None)]" "square_abs_min_loss" "black_background_500x500.csv" 2 "Adam_square_abs_min_loss_0005_amsgrad_false" "iter3"

    
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   8585.00 sec.
    Max Memory :                                 2914 MB
    Average Memory :                             2833.87 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17566.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   7214 sec.
    Turnaround time :                            25997 sec.

The output (if any) is above this job summary.

