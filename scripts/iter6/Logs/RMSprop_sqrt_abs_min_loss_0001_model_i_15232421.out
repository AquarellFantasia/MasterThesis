Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-25 10:07:59.569510: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-25 10:08:02.061501: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-25 10:08:02.062284: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-25 10:08:02.062297: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-25 10:08:06.348671: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-25 10:08:07.576380: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:58:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.001)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_0001_model_i_
Output folder:  iter6
Model name:  load_model_i
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(32, activation="sigmoid")(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-25 10:08:11.970571: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 202s - loss: 0.4602 - sqrt_abs_min_loss: 0.4602 - accuracy: 0.3136 - val_loss: 0.4849 - val_sqrt_abs_min_loss: 0.4849 - val_accuracy: 0.2923 - 202s/epoch - 740ms/step
Epoch 2/100
273/273 - 177s - loss: 0.4727 - sqrt_abs_min_loss: 0.4727 - accuracy: 0.2930 - val_loss: 0.4443 - val_sqrt_abs_min_loss: 0.4443 - val_accuracy: 0.3690 - 177s/epoch - 648ms/step
Epoch 3/100
273/273 - 177s - loss: 0.4720 - sqrt_abs_min_loss: 0.4720 - accuracy: 0.3423 - val_loss: 0.4851 - val_sqrt_abs_min_loss: 0.4851 - val_accuracy: 0.2288 - 177s/epoch - 647ms/step
Epoch 4/100
273/273 - 177s - loss: 0.4650 - sqrt_abs_min_loss: 0.4650 - accuracy: 0.3541 - val_loss: 0.4524 - val_sqrt_abs_min_loss: 0.4524 - val_accuracy: 0.2510 - 177s/epoch - 647ms/step
Epoch 5/100
273/273 - 177s - loss: 0.4613 - sqrt_abs_min_loss: 0.4613 - accuracy: 0.3019 - val_loss: 0.4719 - val_sqrt_abs_min_loss: 0.4719 - val_accuracy: 0.3538 - 177s/epoch - 647ms/step
Epoch 6/100
273/273 - 176s - loss: 0.4650 - sqrt_abs_min_loss: 0.4650 - accuracy: 0.3067 - val_loss: 0.4979 - val_sqrt_abs_min_loss: 0.4979 - val_accuracy: 0.4385 - 176s/epoch - 646ms/step
Epoch 7/100
273/273 - 177s - loss: 0.4632 - sqrt_abs_min_loss: 0.4632 - accuracy: 0.3120 - val_loss: 0.4577 - val_sqrt_abs_min_loss: 0.4577 - val_accuracy: 0.3558 - 177s/epoch - 647ms/step
Epoch 8/100
273/273 - 177s - loss: 0.4658 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.3420 - val_loss: 0.4764 - val_sqrt_abs_min_loss: 0.4764 - val_accuracy: 0.4516 - 177s/epoch - 647ms/step
Epoch 9/100
273/273 - 176s - loss: 0.4673 - sqrt_abs_min_loss: 0.4673 - accuracy: 0.3526 - val_loss: 0.4591 - val_sqrt_abs_min_loss: 0.4591 - val_accuracy: 0.4425 - 176s/epoch - 646ms/step
Epoch 10/100
273/273 - 176s - loss: 0.4679 - sqrt_abs_min_loss: 0.4679 - accuracy: 0.3622 - val_loss: 0.4889 - val_sqrt_abs_min_loss: 0.4889 - val_accuracy: 0.3841 - 176s/epoch - 646ms/step
Epoch 11/100
273/273 - 177s - loss: 0.4569 - sqrt_abs_min_loss: 0.4569 - accuracy: 0.3046 - val_loss: 0.4593 - val_sqrt_abs_min_loss: 0.4593 - val_accuracy: 0.3095 - 177s/epoch - 647ms/step
Epoch 12/100
273/273 - 176s - loss: 0.4579 - sqrt_abs_min_loss: 0.4579 - accuracy: 0.3466 - val_loss: 0.4761 - val_sqrt_abs_min_loss: 0.4761 - val_accuracy: 0.2510 - 176s/epoch - 646ms/step
Epoch 13/100
273/273 - 177s - loss: 0.4622 - sqrt_abs_min_loss: 0.4622 - accuracy: 0.2753 - val_loss: 0.4939 - val_sqrt_abs_min_loss: 0.4939 - val_accuracy: 0.4052 - 177s/epoch - 647ms/step
Epoch 14/100
273/273 - 177s - loss: 0.4666 - sqrt_abs_min_loss: 0.4666 - accuracy: 0.3679 - val_loss: 0.4504 - val_sqrt_abs_min_loss: 0.4504 - val_accuracy: 0.3024 - 177s/epoch - 647ms/step
Epoch 15/100
273/273 - 177s - loss: 0.4569 - sqrt_abs_min_loss: 0.4569 - accuracy: 0.3585 - val_loss: 0.4647 - val_sqrt_abs_min_loss: 0.4647 - val_accuracy: 0.2853 - 177s/epoch - 647ms/step
Epoch 16/100
273/273 - 177s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3660 - val_loss: 0.4794 - val_sqrt_abs_min_loss: 0.4794 - val_accuracy: 0.3538 - 177s/epoch - 647ms/step
Epoch 17/100
273/273 - 177s - loss: 0.4658 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.3234 - val_loss: 0.4561 - val_sqrt_abs_min_loss: 0.4561 - val_accuracy: 0.2692 - 177s/epoch - 647ms/step
Epoch 18/100
273/273 - 176s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.3416 - val_loss: 0.4653 - val_sqrt_abs_min_loss: 0.4653 - val_accuracy: 0.2631 - 176s/epoch - 646ms/step
Epoch 19/100
273/273 - 176s - loss: 0.4729 - sqrt_abs_min_loss: 0.4729 - accuracy: 0.3238 - val_loss: 0.4769 - val_sqrt_abs_min_loss: 0.4769 - val_accuracy: 0.2974 - 176s/epoch - 646ms/step
Epoch 20/100
273/273 - 176s - loss: 0.4599 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3072 - val_loss: 0.4637 - val_sqrt_abs_min_loss: 0.4637 - val_accuracy: 0.3216 - 176s/epoch - 646ms/step
Epoch 21/100
273/273 - 177s - loss: 0.4604 - sqrt_abs_min_loss: 0.4604 - accuracy: 0.3449 - val_loss: 0.4703 - val_sqrt_abs_min_loss: 0.4703 - val_accuracy: 0.3427 - 177s/epoch - 647ms/step
Epoch 22/100
273/273 - 176s - loss: 0.4659 - sqrt_abs_min_loss: 0.4659 - accuracy: 0.3520 - val_loss: 0.4850 - val_sqrt_abs_min_loss: 0.4850 - val_accuracy: 0.2611 - 176s/epoch - 646ms/step
Epoch 23/100
273/273 - 176s - loss: 0.4598 - sqrt_abs_min_loss: 0.4598 - accuracy: 0.3457 - val_loss: 0.4679 - val_sqrt_abs_min_loss: 0.4679 - val_accuracy: 0.1855 - 176s/epoch - 646ms/step
Epoch 24/100
273/273 - 176s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3254 - val_loss: 0.4770 - val_sqrt_abs_min_loss: 0.4770 - val_accuracy: 0.4446 - 176s/epoch - 646ms/step
Epoch 25/100
273/273 - 176s - loss: 0.4660 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3103 - val_loss: 0.4680 - val_sqrt_abs_min_loss: 0.4680 - val_accuracy: 0.3175 - 176s/epoch - 646ms/step
Epoch 26/100
273/273 - 176s - loss: 0.4597 - sqrt_abs_min_loss: 0.4597 - accuracy: 0.3495 - val_loss: 0.4789 - val_sqrt_abs_min_loss: 0.4789 - val_accuracy: 0.3125 - 176s/epoch - 646ms/step
Epoch 27/100
273/273 - 176s - loss: 0.4651 - sqrt_abs_min_loss: 0.4651 - accuracy: 0.3206 - val_loss: 0.4815 - val_sqrt_abs_min_loss: 0.4815 - val_accuracy: 0.3891 - 176s/epoch - 646ms/step
Epoch 28/100
273/273 - 176s - loss: 0.4657 - sqrt_abs_min_loss: 0.4657 - accuracy: 0.3449 - val_loss: 0.4748 - val_sqrt_abs_min_loss: 0.4748 - val_accuracy: 0.3337 - 176s/epoch - 646ms/step
Epoch 29/100
273/273 - 177s - loss: 0.4693 - sqrt_abs_min_loss: 0.4693 - accuracy: 0.3740 - val_loss: 0.4866 - val_sqrt_abs_min_loss: 0.4866 - val_accuracy: 0.4869 - 177s/epoch - 647ms/step
Epoch 30/100
273/273 - 176s - loss: 0.4603 - sqrt_abs_min_loss: 0.4603 - accuracy: 0.3205 - val_loss: 0.4544 - val_sqrt_abs_min_loss: 0.4544 - val_accuracy: 0.4536 - 176s/epoch - 645ms/step
Epoch 31/100
273/273 - 176s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.3911 - val_loss: 0.4821 - val_sqrt_abs_min_loss: 0.4821 - val_accuracy: 0.3065 - 176s/epoch - 645ms/step
Epoch 32/100
273/273 - 176s - loss: 0.4694 - sqrt_abs_min_loss: 0.4694 - accuracy: 0.3394 - val_loss: 0.4593 - val_sqrt_abs_min_loss: 0.4593 - val_accuracy: 0.2692 - 176s/epoch - 646ms/step
Epoch 33/100
273/273 - 176s - loss: 0.4612 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3116 - val_loss: 0.4530 - val_sqrt_abs_min_loss: 0.4530 - val_accuracy: 0.3649 - 176s/epoch - 646ms/step
Epoch 34/100
273/273 - 176s - loss: 0.4681 - sqrt_abs_min_loss: 0.4681 - accuracy: 0.3320 - val_loss: 0.4704 - val_sqrt_abs_min_loss: 0.4704 - val_accuracy: 0.4214 - 176s/epoch - 646ms/step
Epoch 35/100
273/273 - 176s - loss: 0.4629 - sqrt_abs_min_loss: 0.4629 - accuracy: 0.3368 - val_loss: 0.4900 - val_sqrt_abs_min_loss: 0.4900 - val_accuracy: 0.3065 - 176s/epoch - 646ms/step
Epoch 36/100
273/273 - 176s - loss: 0.4624 - sqrt_abs_min_loss: 0.4624 - accuracy: 0.3393 - val_loss: 0.4715 - val_sqrt_abs_min_loss: 0.4715 - val_accuracy: 0.3558 - 176s/epoch - 646ms/step
Epoch 37/100
273/273 - 176s - loss: 0.4641 - sqrt_abs_min_loss: 0.4641 - accuracy: 0.3285 - val_loss: 0.4347 - val_sqrt_abs_min_loss: 0.4347 - val_accuracy: 0.2923 - 176s/epoch - 646ms/step
Epoch 38/100
273/273 - 176s - loss: 0.4591 - sqrt_abs_min_loss: 0.4591 - accuracy: 0.3608 - val_loss: 0.4750 - val_sqrt_abs_min_loss: 0.4750 - val_accuracy: 0.2480 - 176s/epoch - 646ms/step
Epoch 39/100
273/273 - 176s - loss: 0.4585 - sqrt_abs_min_loss: 0.4585 - accuracy: 0.2903 - val_loss: 0.4983 - val_sqrt_abs_min_loss: 0.4983 - val_accuracy: 0.3690 - 176s/epoch - 645ms/step
Epoch 40/100
273/273 - 176s - loss: 0.4559 - sqrt_abs_min_loss: 0.4559 - accuracy: 0.3326 - val_loss: 0.4842 - val_sqrt_abs_min_loss: 0.4842 - val_accuracy: 0.4657 - 176s/epoch - 645ms/step
Epoch 41/100
273/273 - 177s - loss: 0.4654 - sqrt_abs_min_loss: 0.4654 - accuracy: 0.3070 - val_loss: 0.4970 - val_sqrt_abs_min_loss: 0.4970 - val_accuracy: 0.4224 - 177s/epoch - 647ms/step
Epoch 42/100
273/273 - 176s - loss: 0.4699 - sqrt_abs_min_loss: 0.4699 - accuracy: 0.3141 - val_loss: 0.4720 - val_sqrt_abs_min_loss: 0.4720 - val_accuracy: 0.3740 - 176s/epoch - 646ms/step
Epoch 43/100
273/273 - 176s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.3045 - val_loss: 0.4609 - val_sqrt_abs_min_loss: 0.4609 - val_accuracy: 0.3619 - 176s/epoch - 646ms/step
Epoch 44/100
273/273 - 177s - loss: 0.4628 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.3653 - val_loss: 0.4630 - val_sqrt_abs_min_loss: 0.4630 - val_accuracy: 0.3458 - 177s/epoch - 647ms/step
Epoch 45/100
273/273 - 176s - loss: 0.4618 - sqrt_abs_min_loss: 0.4618 - accuracy: 0.2904 - val_loss: 0.4397 - val_sqrt_abs_min_loss: 0.4397 - val_accuracy: 0.3518 - 176s/epoch - 646ms/step
Epoch 46/100
273/273 - 176s - loss: 0.4679 - sqrt_abs_min_loss: 0.4679 - accuracy: 0.3678 - val_loss: 0.4703 - val_sqrt_abs_min_loss: 0.4703 - val_accuracy: 0.4375 - 176s/epoch - 646ms/step
Epoch 47/100
273/273 - 176s - loss: 0.4610 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.3186 - val_loss: 0.4695 - val_sqrt_abs_min_loss: 0.4695 - val_accuracy: 0.2812 - 176s/epoch - 646ms/step
Epoch 48/100
273/273 - 177s - loss: 0.4675 - sqrt_abs_min_loss: 0.4675 - accuracy: 0.3336 - val_loss: 0.4643 - val_sqrt_abs_min_loss: 0.4643 - val_accuracy: 0.2419 - 177s/epoch - 647ms/step
Epoch 49/100
273/273 - 176s - loss: 0.4644 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.2898 - val_loss: 0.4599 - val_sqrt_abs_min_loss: 0.4599 - val_accuracy: 0.2681 - 176s/epoch - 646ms/step
Epoch 50/100
273/273 - 177s - loss: 0.4659 - sqrt_abs_min_loss: 0.4659 - accuracy: 0.3191 - val_loss: 0.4783 - val_sqrt_abs_min_loss: 0.4783 - val_accuracy: 0.3962 - 177s/epoch - 647ms/step
Epoch 51/100
273/273 - 176s - loss: 0.4552 - sqrt_abs_min_loss: 0.4552 - accuracy: 0.3218 - val_loss: 0.4880 - val_sqrt_abs_min_loss: 0.4880 - val_accuracy: 0.3911 - 176s/epoch - 646ms/step
Epoch 52/100
273/273 - 176s - loss: 0.4624 - sqrt_abs_min_loss: 0.4624 - accuracy: 0.3233 - val_loss: 0.4797 - val_sqrt_abs_min_loss: 0.4797 - val_accuracy: 0.4042 - 176s/epoch - 645ms/step
Epoch 53/100
273/273 - 177s - loss: 0.4563 - sqrt_abs_min_loss: 0.4563 - accuracy: 0.3258 - val_loss: 0.4748 - val_sqrt_abs_min_loss: 0.4748 - val_accuracy: 0.3266 - 177s/epoch - 647ms/step
Epoch 54/100
273/273 - 176s - loss: 0.4601 - sqrt_abs_min_loss: 0.4601 - accuracy: 0.3094 - val_loss: 0.4694 - val_sqrt_abs_min_loss: 0.4694 - val_accuracy: 0.2903 - 176s/epoch - 647ms/step
Epoch 55/100
273/273 - 176s - loss: 0.4590 - sqrt_abs_min_loss: 0.4590 - accuracy: 0.3698 - val_loss: 0.4672 - val_sqrt_abs_min_loss: 0.4672 - val_accuracy: 0.3327 - 176s/epoch - 646ms/step
Epoch 56/100
273/273 - 176s - loss: 0.4694 - sqrt_abs_min_loss: 0.4694 - accuracy: 0.3197 - val_loss: 0.4846 - val_sqrt_abs_min_loss: 0.4846 - val_accuracy: 0.3448 - 176s/epoch - 646ms/step
Epoch 57/100
273/273 - 176s - loss: 0.4631 - sqrt_abs_min_loss: 0.4631 - accuracy: 0.3524 - val_loss: 0.4457 - val_sqrt_abs_min_loss: 0.4457 - val_accuracy: 0.2802 - 176s/epoch - 646ms/step
Epoch 58/100
273/273 - 176s - loss: 0.4654 - sqrt_abs_min_loss: 0.4654 - accuracy: 0.3411 - val_loss: 0.4571 - val_sqrt_abs_min_loss: 0.4571 - val_accuracy: 0.3619 - 176s/epoch - 646ms/step
Epoch 59/100
273/273 - 176s - loss: 0.4564 - sqrt_abs_min_loss: 0.4564 - accuracy: 0.3249 - val_loss: 0.4760 - val_sqrt_abs_min_loss: 0.4760 - val_accuracy: 0.1885 - 176s/epoch - 646ms/step
Epoch 60/100
273/273 - 176s - loss: 0.4593 - sqrt_abs_min_loss: 0.4593 - accuracy: 0.3144 - val_loss: 0.4724 - val_sqrt_abs_min_loss: 0.4724 - val_accuracy: 0.3649 - 176s/epoch - 646ms/step
Epoch 61/100
273/273 - 176s - loss: 0.4697 - sqrt_abs_min_loss: 0.4697 - accuracy: 0.3618 - val_loss: 0.4421 - val_sqrt_abs_min_loss: 0.4421 - val_accuracy: 0.2641 - 176s/epoch - 646ms/step
Epoch 62/100
273/273 - 176s - loss: 0.4660 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3075 - val_loss: 0.4674 - val_sqrt_abs_min_loss: 0.4674 - val_accuracy: 0.3196 - 176s/epoch - 646ms/step
Epoch 63/100
273/273 - 176s - loss: 0.4660 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3214 - val_loss: 0.4623 - val_sqrt_abs_min_loss: 0.4623 - val_accuracy: 0.4516 - 176s/epoch - 646ms/step
Epoch 64/100
273/273 - 176s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.2918 - val_loss: 0.4896 - val_sqrt_abs_min_loss: 0.4896 - val_accuracy: 0.3881 - 176s/epoch - 645ms/step
Epoch 65/100
273/273 - 176s - loss: 0.4692 - sqrt_abs_min_loss: 0.4692 - accuracy: 0.3197 - val_loss: 0.4621 - val_sqrt_abs_min_loss: 0.4621 - val_accuracy: 0.2913 - 176s/epoch - 646ms/step
Epoch 66/100
273/273 - 176s - loss: 0.4637 - sqrt_abs_min_loss: 0.4637 - accuracy: 0.3380 - val_loss: 0.4533 - val_sqrt_abs_min_loss: 0.4533 - val_accuracy: 0.2298 - 176s/epoch - 645ms/step
Epoch 67/100
273/273 - 176s - loss: 0.4618 - sqrt_abs_min_loss: 0.4618 - accuracy: 0.2728 - val_loss: 0.4642 - val_sqrt_abs_min_loss: 0.4642 - val_accuracy: 0.2812 - 176s/epoch - 646ms/step
Epoch 68/100
273/273 - 177s - loss: 0.4695 - sqrt_abs_min_loss: 0.4695 - accuracy: 0.3434 - val_loss: 0.4732 - val_sqrt_abs_min_loss: 0.4732 - val_accuracy: 0.3054 - 177s/epoch - 647ms/step
Epoch 69/100
273/273 - 176s - loss: 0.4678 - sqrt_abs_min_loss: 0.4678 - accuracy: 0.3069 - val_loss: 0.4613 - val_sqrt_abs_min_loss: 0.4613 - val_accuracy: 0.2147 - 176s/epoch - 646ms/step
Epoch 70/100
273/273 - 177s - loss: 0.4580 - sqrt_abs_min_loss: 0.4580 - accuracy: 0.3231 - val_loss: 0.4893 - val_sqrt_abs_min_loss: 0.4893 - val_accuracy: 0.3276 - 177s/epoch - 647ms/step
Epoch 71/100
273/273 - 176s - loss: 0.4649 - sqrt_abs_min_loss: 0.4649 - accuracy: 0.3213 - val_loss: 0.5057 - val_sqrt_abs_min_loss: 0.5057 - val_accuracy: 0.2500 - 176s/epoch - 646ms/step
Epoch 72/100
273/273 - 176s - loss: 0.4591 - sqrt_abs_min_loss: 0.4591 - accuracy: 0.3124 - val_loss: 0.4622 - val_sqrt_abs_min_loss: 0.4622 - val_accuracy: 0.2752 - 176s/epoch - 646ms/step
Epoch 73/100
273/273 - 177s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.2937 - val_loss: 0.4604 - val_sqrt_abs_min_loss: 0.4604 - val_accuracy: 0.2812 - 177s/epoch - 647ms/step
Epoch 74/100
273/273 - 176s - loss: 0.4688 - sqrt_abs_min_loss: 0.4688 - accuracy: 0.3686 - val_loss: 0.4725 - val_sqrt_abs_min_loss: 0.4725 - val_accuracy: 0.3810 - 176s/epoch - 645ms/step
Epoch 75/100
273/273 - 176s - loss: 0.4641 - sqrt_abs_min_loss: 0.4641 - accuracy: 0.3306 - val_loss: 0.4558 - val_sqrt_abs_min_loss: 0.4558 - val_accuracy: 0.3458 - 176s/epoch - 645ms/step
Epoch 76/100
273/273 - 176s - loss: 0.4671 - sqrt_abs_min_loss: 0.4671 - accuracy: 0.3099 - val_loss: 0.4502 - val_sqrt_abs_min_loss: 0.4502 - val_accuracy: 0.3881 - 176s/epoch - 645ms/step
Epoch 77/100
273/273 - 176s - loss: 0.4676 - sqrt_abs_min_loss: 0.4676 - accuracy: 0.3015 - val_loss: 0.4890 - val_sqrt_abs_min_loss: 0.4890 - val_accuracy: 0.2560 - 176s/epoch - 646ms/step
Epoch 78/100
273/273 - 177s - loss: 0.4577 - sqrt_abs_min_loss: 0.4577 - accuracy: 0.2807 - val_loss: 0.4833 - val_sqrt_abs_min_loss: 0.4833 - val_accuracy: 0.2974 - 177s/epoch - 647ms/step
Epoch 79/100
273/273 - 176s - loss: 0.4662 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3310 - val_loss: 0.4571 - val_sqrt_abs_min_loss: 0.4571 - val_accuracy: 0.2268 - 176s/epoch - 645ms/step
Epoch 80/100
273/273 - 176s - loss: 0.4573 - sqrt_abs_min_loss: 0.4573 - accuracy: 0.3555 - val_loss: 0.4784 - val_sqrt_abs_min_loss: 0.4784 - val_accuracy: 0.3982 - 176s/epoch - 646ms/step
Epoch 81/100
273/273 - 177s - loss: 0.4669 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3502 - val_loss: 0.4795 - val_sqrt_abs_min_loss: 0.4795 - val_accuracy: 0.3206 - 177s/epoch - 647ms/step
Epoch 82/100
273/273 - 176s - loss: 0.4671 - sqrt_abs_min_loss: 0.4671 - accuracy: 0.2800 - val_loss: 0.4838 - val_sqrt_abs_min_loss: 0.4838 - val_accuracy: 0.2782 - 176s/epoch - 645ms/step
Epoch 83/100
273/273 - 176s - loss: 0.4590 - sqrt_abs_min_loss: 0.4590 - accuracy: 0.3114 - val_loss: 0.4830 - val_sqrt_abs_min_loss: 0.4830 - val_accuracy: 0.3730 - 176s/epoch - 645ms/step
Epoch 84/100
273/273 - 176s - loss: 0.4642 - sqrt_abs_min_loss: 0.4642 - accuracy: 0.2881 - val_loss: 0.4697 - val_sqrt_abs_min_loss: 0.4697 - val_accuracy: 0.2873 - 176s/epoch - 646ms/step
Epoch 85/100
273/273 - 176s - loss: 0.4639 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.2945 - val_loss: 0.4553 - val_sqrt_abs_min_loss: 0.4553 - val_accuracy: 0.3276 - 176s/epoch - 646ms/step
Epoch 86/100
273/273 - 176s - loss: 0.4630 - sqrt_abs_min_loss: 0.4630 - accuracy: 0.3545 - val_loss: 0.4652 - val_sqrt_abs_min_loss: 0.4652 - val_accuracy: 0.2843 - 176s/epoch - 646ms/step
Epoch 87/100
273/273 - 177s - loss: 0.4662 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3109 - val_loss: 0.4585 - val_sqrt_abs_min_loss: 0.4585 - val_accuracy: 0.3599 - 177s/epoch - 647ms/step
Epoch 88/100
273/273 - 176s - loss: 0.4557 - sqrt_abs_min_loss: 0.4557 - accuracy: 0.3093 - val_loss: 0.4853 - val_sqrt_abs_min_loss: 0.4853 - val_accuracy: 0.3286 - 176s/epoch - 645ms/step
Epoch 89/100
273/273 - 176s - loss: 0.4624 - sqrt_abs_min_loss: 0.4624 - accuracy: 0.3237 - val_loss: 0.4758 - val_sqrt_abs_min_loss: 0.4758 - val_accuracy: 0.3538 - 176s/epoch - 645ms/step
Epoch 90/100
273/273 - 176s - loss: 0.4673 - sqrt_abs_min_loss: 0.4673 - accuracy: 0.3879 - val_loss: 0.4711 - val_sqrt_abs_min_loss: 0.4711 - val_accuracy: 0.4264 - 176s/epoch - 645ms/step
Epoch 91/100
273/273 - 176s - loss: 0.4670 - sqrt_abs_min_loss: 0.4670 - accuracy: 0.3500 - val_loss: 0.4705 - val_sqrt_abs_min_loss: 0.4705 - val_accuracy: 0.4425 - 176s/epoch - 646ms/step
Epoch 92/100
273/273 - 176s - loss: 0.4662 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3233 - val_loss: 0.4771 - val_sqrt_abs_min_loss: 0.4771 - val_accuracy: 0.3125 - 176s/epoch - 646ms/step
Epoch 93/100
273/273 - 176s - loss: 0.4660 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3197 - val_loss: 0.4713 - val_sqrt_abs_min_loss: 0.4713 - val_accuracy: 0.3377 - 176s/epoch - 646ms/step
Epoch 94/100
273/273 - 176s - loss: 0.4585 - sqrt_abs_min_loss: 0.4585 - accuracy: 0.3459 - val_loss: 0.4656 - val_sqrt_abs_min_loss: 0.4656 - val_accuracy: 0.3095 - 176s/epoch - 645ms/step
Epoch 95/100
273/273 - 176s - loss: 0.4669 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3056 - val_loss: 0.4681 - val_sqrt_abs_min_loss: 0.4681 - val_accuracy: 0.3155 - 176s/epoch - 645ms/step
Epoch 96/100
273/273 - 176s - loss: 0.4639 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.3545 - val_loss: 0.4572 - val_sqrt_abs_min_loss: 0.4572 - val_accuracy: 0.3065 - 176s/epoch - 646ms/step
Epoch 97/100
273/273 - 176s - loss: 0.4696 - sqrt_abs_min_loss: 0.4696 - accuracy: 0.3650 - val_loss: 0.4727 - val_sqrt_abs_min_loss: 0.4727 - val_accuracy: 0.3710 - 176s/epoch - 646ms/step
Epoch 98/100
273/273 - 177s - loss: 0.4577 - sqrt_abs_min_loss: 0.4577 - accuracy: 0.2998 - val_loss: 0.4592 - val_sqrt_abs_min_loss: 0.4592 - val_accuracy: 0.4284 - 177s/epoch - 647ms/step
Epoch 99/100
273/273 - 176s - loss: 0.4731 - sqrt_abs_min_loss: 0.4731 - accuracy: 0.3368 - val_loss: 0.4640 - val_sqrt_abs_min_loss: 0.4640 - val_accuracy: 0.2792 - 176s/epoch - 646ms/step
Epoch 100/100
273/273 - 176s - loss: 0.4626 - sqrt_abs_min_loss: 0.4626 - accuracy: 0.3530 - val_loss: 0.4560 - val_sqrt_abs_min_loss: 0.4560 - val_accuracy: 0.5081 - 176s/epoch - 645ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 829ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[ 26.78618   94.81388  116.859695]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 9s - loss: 0.4573 - sqrt_abs_min_loss: 0.4573 - accuracy: 0.4062 2/31 [>.............................] - ETA: 6s - loss: 0.4584 - sqrt_abs_min_loss: 0.4584 - accuracy: 0.4062 3/31 [=>............................] - ETA: 6s - loss: 0.4605 - sqrt_abs_min_loss: 0.4605 - accuracy: 0.4167 4/31 [==>...........................] - ETA: 5s - loss: 0.4607 - sqrt_abs_min_loss: 0.4607 - accuracy: 0.4219 5/31 [===>..........................] - ETA: 5s - loss: 0.4618 - sqrt_abs_min_loss: 0.4618 - accuracy: 0.4250 6/31 [====>.........................] - ETA: 5s - loss: 0.4634 - sqrt_abs_min_loss: 0.4634 - accuracy: 0.4271 7/31 [=====>........................] - ETA: 5s - loss: 0.4650 - sqrt_abs_min_loss: 0.4650 - accuracy: 0.4286 8/31 [======>.......................] - ETA: 4s - loss: 0.4665 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.4297 9/31 [=======>......................] - ETA: 4s - loss: 0.4686 - sqrt_abs_min_loss: 0.4686 - accuracy: 0.427110/31 [========>.....................] - ETA: 4s - loss: 0.4699 - sqrt_abs_min_loss: 0.4699 - accuracy: 0.425011/31 [=========>....................] - ETA: 4s - loss: 0.4715 - sqrt_abs_min_loss: 0.4715 - accuracy: 0.423312/31 [==========>...................] - ETA: 4s - loss: 0.4731 - sqrt_abs_min_loss: 0.4731 - accuracy: 0.421913/31 [===========>..................] - ETA: 3s - loss: 0.4742 - sqrt_abs_min_loss: 0.4742 - accuracy: 0.420714/31 [============>.................] - ETA: 3s - loss: 0.4752 - sqrt_abs_min_loss: 0.4752 - accuracy: 0.419615/31 [=============>................] - ETA: 3s - loss: 0.4763 - sqrt_abs_min_loss: 0.4763 - accuracy: 0.418716/31 [==============>...............] - ETA: 3s - loss: 0.4772 - sqrt_abs_min_loss: 0.4772 - accuracy: 0.416017/31 [===============>..............] - ETA: 2s - loss: 0.4781 - sqrt_abs_min_loss: 0.4781 - accuracy: 0.415418/31 [================>.............] - ETA: 2s - loss: 0.4785 - sqrt_abs_min_loss: 0.4785 - accuracy: 0.416719/31 [=================>............] - ETA: 2s - loss: 0.4787 - sqrt_abs_min_loss: 0.4787 - accuracy: 0.416120/31 [==================>...........] - ETA: 2s - loss: 0.4787 - sqrt_abs_min_loss: 0.4787 - accuracy: 0.415621/31 [===================>..........] - ETA: 2s - loss: 0.4791 - sqrt_abs_min_loss: 0.4791 - accuracy: 0.415222/31 [====================>.........] - ETA: 1s - loss: 0.4797 - sqrt_abs_min_loss: 0.4797 - accuracy: 0.414823/31 [=====================>........] - ETA: 1s - loss: 0.4803 - sqrt_abs_min_loss: 0.4803 - accuracy: 0.413024/31 [======================>.......] - ETA: 1s - loss: 0.4809 - sqrt_abs_min_loss: 0.4809 - accuracy: 0.412825/31 [=======================>......] - ETA: 1s - loss: 0.4815 - sqrt_abs_min_loss: 0.4815 - accuracy: 0.411226/31 [========================>.....] - ETA: 1s - loss: 0.4821 - sqrt_abs_min_loss: 0.4821 - accuracy: 0.409927/31 [=========================>....] - ETA: 0s - loss: 0.4823 - sqrt_abs_min_loss: 0.4823 - accuracy: 0.408628/31 [==========================>...] - ETA: 0s - loss: 0.4825 - sqrt_abs_min_loss: 0.4825 - accuracy: 0.407429/31 [===========================>..] - ETA: 0s - loss: 0.4828 - sqrt_abs_min_loss: 0.4828 - accuracy: 0.405230/31 [============================>.] - ETA: 0s - loss: 0.4831 - sqrt_abs_min_loss: 0.4831 - accuracy: 0.403131/31 [==============================] - ETA: 0s - loss: 0.4833 - sqrt_abs_min_loss: 0.4833 - accuracy: 0.401231/31 [==============================] - 7s 212ms/step - loss: 0.4833 - sqrt_abs_min_loss: 0.4833 - accuracy: 0.4012
test loss, test acc: [0.4832507371902466, 0.4832507371902466, 0.40120968222618103]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232421: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:55 2023
Job was executed on host(s) <4*n-62-20-16>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Wed Jan 25 10:07:55 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Wed Jan 25 10:07:55 2023
Terminated at Wed Jan 25 15:02:44 2023
Results reported at Wed Jan 25 15:02:44 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_0001_model_i_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.001)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_0001_model_i_" "iter6" "load_model_i"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   22214.03 sec.
    Max Memory :                                 3037 MB
    Average Memory :                             2918.22 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17443.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17689 sec.
    Turnaround time :                            268189 sec.

The output (if any) is above this job summary.

