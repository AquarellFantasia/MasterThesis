Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-23 23:42:45.207018: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 23:42:46.719471: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 23:42:46.720105: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 23:42:46.720125: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-23 23:42:49.902198: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 23:42:50.611010: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:15:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_00005_model_j_
Output folder:  iter6
Model name:  load_model_j
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(32, activation="sigmoid", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-23 23:42:54.382259: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 192s - loss: 26.0715 - sqrt_abs_min_loss: 0.4598 - accuracy: 0.3142 - val_loss: 1.0459 - val_sqrt_abs_min_loss: 0.4935 - val_accuracy: 0.2923 - 192s/epoch - 703ms/step
Epoch 2/100
273/273 - 192s - loss: 0.9584 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3354 - val_loss: 0.9501 - val_sqrt_abs_min_loss: 0.4555 - val_accuracy: 0.3337 - 192s/epoch - 704ms/step
Epoch 3/100
273/273 - 171s - loss: 0.9594 - sqrt_abs_min_loss: 0.4646 - accuracy: 0.3016 - val_loss: 0.9588 - val_sqrt_abs_min_loss: 0.4636 - val_accuracy: 0.3397 - 171s/epoch - 627ms/step
Epoch 4/100
273/273 - 171s - loss: 0.9560 - sqrt_abs_min_loss: 0.4611 - accuracy: 0.3241 - val_loss: 0.9685 - val_sqrt_abs_min_loss: 0.4740 - val_accuracy: 0.2984 - 171s/epoch - 627ms/step
Epoch 5/100
273/273 - 171s - loss: 0.9525 - sqrt_abs_min_loss: 0.4576 - accuracy: 0.3125 - val_loss: 0.9678 - val_sqrt_abs_min_loss: 0.4726 - val_accuracy: 0.3710 - 171s/epoch - 627ms/step
Epoch 6/100
273/273 - 171s - loss: 0.9586 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.2991 - val_loss: 0.9834 - val_sqrt_abs_min_loss: 0.4889 - val_accuracy: 0.2157 - 171s/epoch - 626ms/step
Epoch 7/100
273/273 - 171s - loss: 0.9615 - sqrt_abs_min_loss: 0.4667 - accuracy: 0.2993 - val_loss: 0.9615 - val_sqrt_abs_min_loss: 0.4662 - val_accuracy: 0.3296 - 171s/epoch - 626ms/step
Epoch 8/100
273/273 - 172s - loss: 0.9577 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.2990 - val_loss: 0.9788 - val_sqrt_abs_min_loss: 0.4844 - val_accuracy: 0.3972 - 172s/epoch - 629ms/step
Epoch 9/100
273/273 - 171s - loss: 0.9521 - sqrt_abs_min_loss: 0.4573 - accuracy: 0.3264 - val_loss: 0.9716 - val_sqrt_abs_min_loss: 0.4764 - val_accuracy: 0.3317 - 171s/epoch - 627ms/step
Epoch 10/100
273/273 - 172s - loss: 0.9637 - sqrt_abs_min_loss: 0.4689 - accuracy: 0.3642 - val_loss: 0.9671 - val_sqrt_abs_min_loss: 0.4727 - val_accuracy: 0.3377 - 172s/epoch - 628ms/step
Epoch 11/100
273/273 - 171s - loss: 0.9554 - sqrt_abs_min_loss: 0.4606 - accuracy: 0.2995 - val_loss: 0.9560 - val_sqrt_abs_min_loss: 0.4607 - val_accuracy: 0.3921 - 171s/epoch - 627ms/step
Epoch 12/100
273/273 - 172s - loss: 0.9669 - sqrt_abs_min_loss: 0.4721 - accuracy: 0.2881 - val_loss: 0.9822 - val_sqrt_abs_min_loss: 0.4878 - val_accuracy: 0.2651 - 172s/epoch - 628ms/step
Epoch 13/100
273/273 - 171s - loss: 0.9583 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3678 - val_loss: 0.9725 - val_sqrt_abs_min_loss: 0.4772 - val_accuracy: 0.3196 - 171s/epoch - 625ms/step
Epoch 14/100
273/273 - 171s - loss: 0.9598 - sqrt_abs_min_loss: 0.4650 - accuracy: 0.3131 - val_loss: 0.9622 - val_sqrt_abs_min_loss: 0.4677 - val_accuracy: 0.2833 - 171s/epoch - 626ms/step
Epoch 15/100
273/273 - 171s - loss: 0.9652 - sqrt_abs_min_loss: 0.4704 - accuracy: 0.3336 - val_loss: 0.9791 - val_sqrt_abs_min_loss: 0.4839 - val_accuracy: 0.3165 - 171s/epoch - 627ms/step
Epoch 16/100
273/273 - 172s - loss: 0.9585 - sqrt_abs_min_loss: 0.4637 - accuracy: 0.3583 - val_loss: 0.9696 - val_sqrt_abs_min_loss: 0.4751 - val_accuracy: 0.4405 - 172s/epoch - 630ms/step
Epoch 17/100
273/273 - 172s - loss: 0.9589 - sqrt_abs_min_loss: 0.4640 - accuracy: 0.3102 - val_loss: 1.0022 - val_sqrt_abs_min_loss: 0.5071 - val_accuracy: 0.3135 - 172s/epoch - 630ms/step
Epoch 18/100
273/273 - 171s - loss: 0.9479 - sqrt_abs_min_loss: 0.4530 - accuracy: 0.3528 - val_loss: 0.9743 - val_sqrt_abs_min_loss: 0.4799 - val_accuracy: 0.2964 - 171s/epoch - 628ms/step
Epoch 19/100
273/273 - 171s - loss: 0.9560 - sqrt_abs_min_loss: 0.4611 - accuracy: 0.3617 - val_loss: 0.9663 - val_sqrt_abs_min_loss: 0.4711 - val_accuracy: 0.3216 - 171s/epoch - 626ms/step
Epoch 20/100
273/273 - 170s - loss: 0.9590 - sqrt_abs_min_loss: 0.4642 - accuracy: 0.3317 - val_loss: 0.9681 - val_sqrt_abs_min_loss: 0.4736 - val_accuracy: 0.4022 - 170s/epoch - 625ms/step
Epoch 21/100
273/273 - 171s - loss: 0.9570 - sqrt_abs_min_loss: 0.4621 - accuracy: 0.2869 - val_loss: 0.9839 - val_sqrt_abs_min_loss: 0.4887 - val_accuracy: 0.3226 - 171s/epoch - 626ms/step
Epoch 22/100
273/273 - 171s - loss: 0.9575 - sqrt_abs_min_loss: 0.4627 - accuracy: 0.3280 - val_loss: 0.9874 - val_sqrt_abs_min_loss: 0.4929 - val_accuracy: 0.4738 - 171s/epoch - 628ms/step
Epoch 23/100
273/273 - 172s - loss: 0.9554 - sqrt_abs_min_loss: 0.4606 - accuracy: 0.3391 - val_loss: 0.9720 - val_sqrt_abs_min_loss: 0.4768 - val_accuracy: 0.2954 - 172s/epoch - 628ms/step
Epoch 24/100
273/273 - 171s - loss: 0.9510 - sqrt_abs_min_loss: 0.4562 - accuracy: 0.3405 - val_loss: 0.9685 - val_sqrt_abs_min_loss: 0.4740 - val_accuracy: 0.2389 - 171s/epoch - 627ms/step
Epoch 25/100
273/273 - 172s - loss: 0.9668 - sqrt_abs_min_loss: 0.4719 - accuracy: 0.3386 - val_loss: 0.9695 - val_sqrt_abs_min_loss: 0.4742 - val_accuracy: 0.3125 - 172s/epoch - 629ms/step
Epoch 26/100
273/273 - 171s - loss: 0.9532 - sqrt_abs_min_loss: 0.4584 - accuracy: 0.3326 - val_loss: 0.9733 - val_sqrt_abs_min_loss: 0.4788 - val_accuracy: 0.2681 - 171s/epoch - 627ms/step
Epoch 27/100
273/273 - 171s - loss: 0.9651 - sqrt_abs_min_loss: 0.4703 - accuracy: 0.3211 - val_loss: 0.9707 - val_sqrt_abs_min_loss: 0.4755 - val_accuracy: 0.2601 - 171s/epoch - 628ms/step
Epoch 28/100
273/273 - 172s - loss: 0.9582 - sqrt_abs_min_loss: 0.4634 - accuracy: 0.3259 - val_loss: 0.9625 - val_sqrt_abs_min_loss: 0.4680 - val_accuracy: 0.2137 - 172s/epoch - 628ms/step
Epoch 29/100
273/273 - 172s - loss: 0.9637 - sqrt_abs_min_loss: 0.4688 - accuracy: 0.3031 - val_loss: 0.9768 - val_sqrt_abs_min_loss: 0.4816 - val_accuracy: 0.3065 - 172s/epoch - 630ms/step
Epoch 30/100
273/273 - 171s - loss: 0.9548 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3126 - val_loss: 0.9781 - val_sqrt_abs_min_loss: 0.4837 - val_accuracy: 0.3458 - 171s/epoch - 628ms/step
Epoch 31/100
273/273 - 172s - loss: 0.9573 - sqrt_abs_min_loss: 0.4625 - accuracy: 0.3396 - val_loss: 0.9759 - val_sqrt_abs_min_loss: 0.4807 - val_accuracy: 0.5192 - 172s/epoch - 629ms/step
Epoch 32/100
273/273 - 178s - loss: 0.9624 - sqrt_abs_min_loss: 0.4676 - accuracy: 0.3144 - val_loss: 1.0059 - val_sqrt_abs_min_loss: 0.5115 - val_accuracy: 0.4103 - 178s/epoch - 653ms/step
Epoch 33/100
273/273 - 169s - loss: 0.9573 - sqrt_abs_min_loss: 0.4625 - accuracy: 0.3110 - val_loss: 0.9689 - val_sqrt_abs_min_loss: 0.4737 - val_accuracy: 0.3619 - 169s/epoch - 619ms/step
Epoch 34/100
273/273 - 169s - loss: 0.9643 - sqrt_abs_min_loss: 0.4695 - accuracy: 0.3112 - val_loss: 0.9777 - val_sqrt_abs_min_loss: 0.4832 - val_accuracy: 0.4738 - 169s/epoch - 621ms/step
Epoch 35/100
273/273 - 169s - loss: 0.9545 - sqrt_abs_min_loss: 0.4597 - accuracy: 0.3162 - val_loss: 0.9656 - val_sqrt_abs_min_loss: 0.4704 - val_accuracy: 0.2480 - 169s/epoch - 620ms/step
Epoch 36/100
273/273 - 170s - loss: 0.9675 - sqrt_abs_min_loss: 0.4727 - accuracy: 0.3163 - val_loss: 0.9553 - val_sqrt_abs_min_loss: 0.4608 - val_accuracy: 0.3760 - 170s/epoch - 621ms/step
Epoch 37/100
273/273 - 170s - loss: 0.9550 - sqrt_abs_min_loss: 0.4602 - accuracy: 0.3439 - val_loss: 0.9538 - val_sqrt_abs_min_loss: 0.4585 - val_accuracy: 0.3508 - 170s/epoch - 621ms/step
Epoch 38/100
273/273 - 170s - loss: 0.9625 - sqrt_abs_min_loss: 0.4676 - accuracy: 0.3298 - val_loss: 0.9562 - val_sqrt_abs_min_loss: 0.4617 - val_accuracy: 0.3306 - 170s/epoch - 622ms/step
Epoch 39/100
273/273 - 170s - loss: 0.9493 - sqrt_abs_min_loss: 0.4544 - accuracy: 0.3210 - val_loss: 0.9740 - val_sqrt_abs_min_loss: 0.4788 - val_accuracy: 0.2712 - 170s/epoch - 621ms/step
Epoch 40/100
273/273 - 170s - loss: 0.9659 - sqrt_abs_min_loss: 0.4711 - accuracy: 0.3227 - val_loss: 0.9706 - val_sqrt_abs_min_loss: 0.4762 - val_accuracy: 0.3629 - 170s/epoch - 621ms/step
Epoch 41/100
273/273 - 170s - loss: 0.9592 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.3482 - val_loss: 0.9677 - val_sqrt_abs_min_loss: 0.4724 - val_accuracy: 0.3891 - 170s/epoch - 623ms/step
Epoch 42/100
273/273 - 170s - loss: 0.9529 - sqrt_abs_min_loss: 0.4581 - accuracy: 0.2309 - val_loss: 0.9319 - val_sqrt_abs_min_loss: 0.4375 - val_accuracy: 0.2923 - 170s/epoch - 624ms/step
Epoch 43/100
273/273 - 171s - loss: 0.9645 - sqrt_abs_min_loss: 0.4696 - accuracy: 0.2983 - val_loss: 0.9672 - val_sqrt_abs_min_loss: 0.4719 - val_accuracy: 0.2823 - 171s/epoch - 625ms/step
Epoch 44/100
273/273 - 170s - loss: 0.9547 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3134 - val_loss: 0.9898 - val_sqrt_abs_min_loss: 0.4954 - val_accuracy: 0.3397 - 170s/epoch - 622ms/step
Epoch 45/100
273/273 - 170s - loss: 0.9492 - sqrt_abs_min_loss: 0.4544 - accuracy: 0.2851 - val_loss: 0.9769 - val_sqrt_abs_min_loss: 0.4817 - val_accuracy: 0.3317 - 170s/epoch - 622ms/step
Epoch 46/100
273/273 - 170s - loss: 0.9543 - sqrt_abs_min_loss: 0.4595 - accuracy: 0.3369 - val_loss: 0.9666 - val_sqrt_abs_min_loss: 0.4722 - val_accuracy: 0.2873 - 170s/epoch - 624ms/step
Epoch 47/100
273/273 - 170s - loss: 0.9635 - sqrt_abs_min_loss: 0.4686 - accuracy: 0.3274 - val_loss: 0.9368 - val_sqrt_abs_min_loss: 0.4416 - val_accuracy: 0.3286 - 170s/epoch - 623ms/step
Epoch 48/100
273/273 - 170s - loss: 0.9626 - sqrt_abs_min_loss: 0.4678 - accuracy: 0.3134 - val_loss: 0.9825 - val_sqrt_abs_min_loss: 0.4880 - val_accuracy: 0.2954 - 170s/epoch - 623ms/step
Epoch 49/100
273/273 - 171s - loss: 0.9550 - sqrt_abs_min_loss: 0.4602 - accuracy: 0.3158 - val_loss: 0.9699 - val_sqrt_abs_min_loss: 0.4747 - val_accuracy: 0.2903 - 171s/epoch - 626ms/step
Epoch 50/100
273/273 - 171s - loss: 0.9609 - sqrt_abs_min_loss: 0.4661 - accuracy: 0.3051 - val_loss: 0.9943 - val_sqrt_abs_min_loss: 0.4999 - val_accuracy: 0.4224 - 171s/epoch - 626ms/step
Epoch 51/100
273/273 - 171s - loss: 0.9606 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.3342 - val_loss: 0.9991 - val_sqrt_abs_min_loss: 0.5038 - val_accuracy: 0.3498 - 171s/epoch - 626ms/step
Epoch 52/100
273/273 - 171s - loss: 0.9562 - sqrt_abs_min_loss: 0.4614 - accuracy: 0.3123 - val_loss: 0.9701 - val_sqrt_abs_min_loss: 0.4756 - val_accuracy: 0.3861 - 171s/epoch - 627ms/step
Epoch 53/100
273/273 - 171s - loss: 0.9487 - sqrt_abs_min_loss: 0.4538 - accuracy: 0.3394 - val_loss: 0.9862 - val_sqrt_abs_min_loss: 0.4910 - val_accuracy: 0.3810 - 171s/epoch - 627ms/step
Epoch 54/100
273/273 - 171s - loss: 0.9530 - sqrt_abs_min_loss: 0.4582 - accuracy: 0.3688 - val_loss: 0.9778 - val_sqrt_abs_min_loss: 0.4834 - val_accuracy: 0.2409 - 171s/epoch - 628ms/step
Epoch 55/100
273/273 - 172s - loss: 0.9682 - sqrt_abs_min_loss: 0.4733 - accuracy: 0.3234 - val_loss: 0.9579 - val_sqrt_abs_min_loss: 0.4627 - val_accuracy: 0.4254 - 172s/epoch - 628ms/step
Epoch 56/100
273/273 - 171s - loss: 0.9616 - sqrt_abs_min_loss: 0.4668 - accuracy: 0.2927 - val_loss: 0.9475 - val_sqrt_abs_min_loss: 0.4530 - val_accuracy: 0.2248 - 171s/epoch - 625ms/step
Epoch 57/100
273/273 - 171s - loss: 0.9621 - sqrt_abs_min_loss: 0.4672 - accuracy: 0.3243 - val_loss: 0.9764 - val_sqrt_abs_min_loss: 0.4812 - val_accuracy: 0.3266 - 171s/epoch - 627ms/step
Epoch 58/100
273/273 - 171s - loss: 0.9589 - sqrt_abs_min_loss: 0.4641 - accuracy: 0.3241 - val_loss: 0.9823 - val_sqrt_abs_min_loss: 0.4879 - val_accuracy: 0.1966 - 171s/epoch - 625ms/step
Epoch 59/100
273/273 - 171s - loss: 0.9480 - sqrt_abs_min_loss: 0.4531 - accuracy: 0.3547 - val_loss: 0.9730 - val_sqrt_abs_min_loss: 0.4777 - val_accuracy: 0.4234 - 171s/epoch - 626ms/step
Epoch 60/100
273/273 - 171s - loss: 0.9613 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.3123 - val_loss: 0.9615 - val_sqrt_abs_min_loss: 0.4670 - val_accuracy: 0.2923 - 171s/epoch - 628ms/step
Epoch 61/100
273/273 - 172s - loss: 0.9603 - sqrt_abs_min_loss: 0.4655 - accuracy: 0.3312 - val_loss: 0.9326 - val_sqrt_abs_min_loss: 0.4374 - val_accuracy: 0.1825 - 172s/epoch - 630ms/step
Epoch 62/100
273/273 - 172s - loss: 0.9542 - sqrt_abs_min_loss: 0.4593 - accuracy: 0.3090 - val_loss: 0.9867 - val_sqrt_abs_min_loss: 0.4923 - val_accuracy: 0.4083 - 172s/epoch - 629ms/step
Epoch 63/100
273/273 - 171s - loss: 0.9616 - sqrt_abs_min_loss: 0.4668 - accuracy: 0.3122 - val_loss: 0.9586 - val_sqrt_abs_min_loss: 0.4634 - val_accuracy: 0.4274 - 171s/epoch - 628ms/step
Epoch 64/100
273/273 - 171s - loss: 0.9547 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3288 - val_loss: 0.9574 - val_sqrt_abs_min_loss: 0.4629 - val_accuracy: 0.2742 - 171s/epoch - 628ms/step
Epoch 65/100
273/273 - 170s - loss: 0.9503 - sqrt_abs_min_loss: 0.4554 - accuracy: 0.3244 - val_loss: 0.9917 - val_sqrt_abs_min_loss: 0.4965 - val_accuracy: 0.3821 - 170s/epoch - 622ms/step
Epoch 66/100
273/273 - 171s - loss: 0.9595 - sqrt_abs_min_loss: 0.4646 - accuracy: 0.3367 - val_loss: 0.9763 - val_sqrt_abs_min_loss: 0.4819 - val_accuracy: 0.3649 - 171s/epoch - 628ms/step
Epoch 67/100
273/273 - 171s - loss: 0.9619 - sqrt_abs_min_loss: 0.4671 - accuracy: 0.2697 - val_loss: 0.9471 - val_sqrt_abs_min_loss: 0.4518 - val_accuracy: 0.4274 - 171s/epoch - 625ms/step
Epoch 68/100
273/273 - 171s - loss: 0.9565 - sqrt_abs_min_loss: 0.4616 - accuracy: 0.3505 - val_loss: 1.0107 - val_sqrt_abs_min_loss: 0.5162 - val_accuracy: 0.4808 - 171s/epoch - 627ms/step
Epoch 69/100
273/273 - 171s - loss: 0.9614 - sqrt_abs_min_loss: 0.4666 - accuracy: 0.2952 - val_loss: 0.9622 - val_sqrt_abs_min_loss: 0.4670 - val_accuracy: 0.2077 - 171s/epoch - 627ms/step
Epoch 70/100
273/273 - 171s - loss: 0.9550 - sqrt_abs_min_loss: 0.4602 - accuracy: 0.3214 - val_loss: 0.9493 - val_sqrt_abs_min_loss: 0.4548 - val_accuracy: 0.2248 - 171s/epoch - 626ms/step
Epoch 71/100
273/273 - 171s - loss: 0.9528 - sqrt_abs_min_loss: 0.4580 - accuracy: 0.2874 - val_loss: 0.9753 - val_sqrt_abs_min_loss: 0.4800 - val_accuracy: 0.3639 - 171s/epoch - 627ms/step
Epoch 72/100
273/273 - 171s - loss: 0.9609 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3411 - val_loss: 0.9594 - val_sqrt_abs_min_loss: 0.4650 - val_accuracy: 0.2994 - 171s/epoch - 628ms/step
Epoch 73/100
273/273 - 172s - loss: 0.9566 - sqrt_abs_min_loss: 0.4618 - accuracy: 0.3291 - val_loss: 0.9609 - val_sqrt_abs_min_loss: 0.4656 - val_accuracy: 0.2520 - 172s/epoch - 630ms/step
Epoch 74/100
273/273 - 170s - loss: 0.9539 - sqrt_abs_min_loss: 0.4591 - accuracy: 0.2965 - val_loss: 0.9663 - val_sqrt_abs_min_loss: 0.4719 - val_accuracy: 0.3931 - 170s/epoch - 621ms/step
Epoch 75/100
273/273 - 169s - loss: 0.9607 - sqrt_abs_min_loss: 0.4659 - accuracy: 0.3293 - val_loss: 0.9789 - val_sqrt_abs_min_loss: 0.4837 - val_accuracy: 0.4456 - 169s/epoch - 619ms/step
Epoch 76/100
273/273 - 168s - loss: 0.9639 - sqrt_abs_min_loss: 0.4691 - accuracy: 0.3731 - val_loss: 0.9726 - val_sqrt_abs_min_loss: 0.4782 - val_accuracy: 0.2954 - 168s/epoch - 617ms/step
Epoch 77/100
273/273 - 168s - loss: 0.9611 - sqrt_abs_min_loss: 0.4663 - accuracy: 0.2913 - val_loss: 0.9643 - val_sqrt_abs_min_loss: 0.4690 - val_accuracy: 0.3881 - 168s/epoch - 617ms/step
Epoch 78/100
273/273 - 167s - loss: 0.9634 - sqrt_abs_min_loss: 0.4686 - accuracy: 0.3418 - val_loss: 0.9452 - val_sqrt_abs_min_loss: 0.4508 - val_accuracy: 0.3982 - 167s/epoch - 611ms/step
Epoch 79/100
273/273 - 167s - loss: 0.9536 - sqrt_abs_min_loss: 0.4588 - accuracy: 0.3273 - val_loss: 0.9833 - val_sqrt_abs_min_loss: 0.4881 - val_accuracy: 0.4254 - 167s/epoch - 613ms/step
Epoch 80/100
273/273 - 167s - loss: 0.9592 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.3126 - val_loss: 0.9552 - val_sqrt_abs_min_loss: 0.4608 - val_accuracy: 0.3317 - 167s/epoch - 612ms/step
Epoch 81/100
273/273 - 168s - loss: 0.9671 - sqrt_abs_min_loss: 0.4723 - accuracy: 0.3135 - val_loss: 0.9587 - val_sqrt_abs_min_loss: 0.4635 - val_accuracy: 0.2812 - 168s/epoch - 615ms/step
Epoch 82/100
273/273 - 167s - loss: 0.9590 - sqrt_abs_min_loss: 0.4642 - accuracy: 0.3451 - val_loss: 0.9401 - val_sqrt_abs_min_loss: 0.4457 - val_accuracy: 0.2843 - 167s/epoch - 612ms/step
Epoch 83/100
273/273 - 167s - loss: 0.9618 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3495 - val_loss: 0.9418 - val_sqrt_abs_min_loss: 0.4466 - val_accuracy: 0.2954 - 167s/epoch - 611ms/step
Epoch 84/100
273/273 - 167s - loss: 0.9648 - sqrt_abs_min_loss: 0.4700 - accuracy: 0.3371 - val_loss: 0.9513 - val_sqrt_abs_min_loss: 0.4569 - val_accuracy: 0.3276 - 167s/epoch - 613ms/step
Epoch 85/100
273/273 - 167s - loss: 0.9583 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3459 - val_loss: 0.9643 - val_sqrt_abs_min_loss: 0.4690 - val_accuracy: 0.3337 - 167s/epoch - 611ms/step
Epoch 86/100
273/273 - 168s - loss: 0.9617 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3981 - val_loss: 0.9565 - val_sqrt_abs_min_loss: 0.4620 - val_accuracy: 0.1724 - 168s/epoch - 616ms/step
Epoch 87/100
273/273 - 168s - loss: 0.9621 - sqrt_abs_min_loss: 0.4673 - accuracy: 0.3209 - val_loss: 0.9854 - val_sqrt_abs_min_loss: 0.4902 - val_accuracy: 0.4879 - 168s/epoch - 616ms/step
Epoch 88/100
273/273 - 168s - loss: 0.9641 - sqrt_abs_min_loss: 0.4693 - accuracy: 0.3262 - val_loss: 0.9810 - val_sqrt_abs_min_loss: 0.4866 - val_accuracy: 0.3498 - 168s/epoch - 615ms/step
Epoch 89/100
273/273 - 167s - loss: 0.9625 - sqrt_abs_min_loss: 0.4677 - accuracy: 0.3411 - val_loss: 0.9769 - val_sqrt_abs_min_loss: 0.4817 - val_accuracy: 0.2349 - 167s/epoch - 611ms/step
Epoch 90/100
273/273 - 167s - loss: 0.9567 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.3191 - val_loss: 0.9717 - val_sqrt_abs_min_loss: 0.4772 - val_accuracy: 0.3438 - 167s/epoch - 611ms/step
Epoch 91/100
273/273 - 167s - loss: 0.9529 - sqrt_abs_min_loss: 0.4581 - accuracy: 0.3354 - val_loss: 0.9763 - val_sqrt_abs_min_loss: 0.4811 - val_accuracy: 0.4274 - 167s/epoch - 611ms/step
Epoch 92/100
273/273 - 167s - loss: 0.9591 - sqrt_abs_min_loss: 0.4643 - accuracy: 0.3660 - val_loss: 0.9860 - val_sqrt_abs_min_loss: 0.4916 - val_accuracy: 0.3528 - 167s/epoch - 611ms/step
Epoch 93/100
273/273 - 167s - loss: 0.9571 - sqrt_abs_min_loss: 0.4623 - accuracy: 0.3274 - val_loss: 0.9761 - val_sqrt_abs_min_loss: 0.4809 - val_accuracy: 0.2812 - 167s/epoch - 611ms/step
Epoch 94/100
273/273 - 168s - loss: 0.9649 - sqrt_abs_min_loss: 0.4701 - accuracy: 0.3581 - val_loss: 0.9597 - val_sqrt_abs_min_loss: 0.4653 - val_accuracy: 0.3145 - 168s/epoch - 616ms/step
Epoch 95/100
273/273 - 168s - loss: 0.9581 - sqrt_abs_min_loss: 0.4633 - accuracy: 0.3268 - val_loss: 0.9649 - val_sqrt_abs_min_loss: 0.4697 - val_accuracy: 0.3972 - 168s/epoch - 615ms/step
Epoch 96/100
273/273 - 168s - loss: 0.9649 - sqrt_abs_min_loss: 0.4701 - accuracy: 0.3099 - val_loss: 0.9593 - val_sqrt_abs_min_loss: 0.4649 - val_accuracy: 0.3427 - 168s/epoch - 614ms/step
Epoch 97/100
273/273 - 167s - loss: 0.9562 - sqrt_abs_min_loss: 0.4614 - accuracy: 0.3403 - val_loss: 0.9774 - val_sqrt_abs_min_loss: 0.4822 - val_accuracy: 0.3579 - 167s/epoch - 613ms/step
Epoch 98/100
273/273 - 167s - loss: 0.9628 - sqrt_abs_min_loss: 0.4680 - accuracy: 0.3119 - val_loss: 0.9712 - val_sqrt_abs_min_loss: 0.4768 - val_accuracy: 0.3377 - 167s/epoch - 611ms/step
Epoch 99/100
273/273 - 168s - loss: 0.9584 - sqrt_abs_min_loss: 0.4636 - accuracy: 0.2644 - val_loss: 0.9501 - val_sqrt_abs_min_loss: 0.4549 - val_accuracy: 0.3448 - 168s/epoch - 614ms/step
Epoch 100/100
273/273 - 167s - loss: 0.9578 - sqrt_abs_min_loss: 0.4630 - accuracy: 0.3687 - val_loss: 0.9386 - val_sqrt_abs_min_loss: 0.4442 - val_accuracy: 0.3427 - 167s/epoch - 613ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 754ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 34ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[73.6352  78.13978 65.79591]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[73.6352  78.13978 65.79591]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 10s - loss: 0.9799 - sqrt_abs_min_loss: 0.4855 - accuracy: 0.4062 2/31 [>.............................] - ETA: 6s - loss: 0.9781 - sqrt_abs_min_loss: 0.4837 - accuracy: 0.4062  3/31 [=>............................] - ETA: 6s - loss: 0.9784 - sqrt_abs_min_loss: 0.4840 - accuracy: 0.3958 4/31 [==>...........................] - ETA: 5s - loss: 0.9782 - sqrt_abs_min_loss: 0.4838 - accuracy: 0.3828 5/31 [===>..........................] - ETA: 5s - loss: 0.9776 - sqrt_abs_min_loss: 0.4832 - accuracy: 0.3750 6/31 [====>.........................] - ETA: 5s - loss: 0.9758 - sqrt_abs_min_loss: 0.4814 - accuracy: 0.3750 7/31 [=====>........................] - ETA: 5s - loss: 0.9738 - sqrt_abs_min_loss: 0.4794 - accuracy: 0.3705 8/31 [======>.......................] - ETA: 4s - loss: 0.9710 - sqrt_abs_min_loss: 0.4766 - accuracy: 0.3711 9/31 [=======>......................] - ETA: 4s - loss: 0.9687 - sqrt_abs_min_loss: 0.4743 - accuracy: 0.371510/31 [========>.....................] - ETA: 4s - loss: 0.9666 - sqrt_abs_min_loss: 0.4722 - accuracy: 0.368811/31 [=========>....................] - ETA: 4s - loss: 0.9647 - sqrt_abs_min_loss: 0.4702 - accuracy: 0.366512/31 [==========>...................] - ETA: 4s - loss: 0.9630 - sqrt_abs_min_loss: 0.4686 - accuracy: 0.364613/31 [===========>..................] - ETA: 3s - loss: 0.9616 - sqrt_abs_min_loss: 0.4672 - accuracy: 0.363014/31 [============>.................] - ETA: 3s - loss: 0.9605 - sqrt_abs_min_loss: 0.4661 - accuracy: 0.361615/31 [=============>................] - ETA: 3s - loss: 0.9595 - sqrt_abs_min_loss: 0.4651 - accuracy: 0.360416/31 [==============>...............] - ETA: 3s - loss: 0.9583 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.359417/31 [===============>..............] - ETA: 3s - loss: 0.9571 - sqrt_abs_min_loss: 0.4627 - accuracy: 0.358518/31 [================>.............] - ETA: 2s - loss: 0.9566 - sqrt_abs_min_loss: 0.4622 - accuracy: 0.355919/31 [=================>............] - ETA: 2s - loss: 0.9562 - sqrt_abs_min_loss: 0.4618 - accuracy: 0.353620/31 [==================>...........] - ETA: 2s - loss: 0.9560 - sqrt_abs_min_loss: 0.4616 - accuracy: 0.351621/31 [===================>..........] - ETA: 2s - loss: 0.9554 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.349722/31 [====================>.........] - ETA: 1s - loss: 0.9548 - sqrt_abs_min_loss: 0.4604 - accuracy: 0.346623/31 [=====================>........] - ETA: 1s - loss: 0.9542 - sqrt_abs_min_loss: 0.4598 - accuracy: 0.343824/31 [======================>.......] - ETA: 1s - loss: 0.9535 - sqrt_abs_min_loss: 0.4591 - accuracy: 0.339825/31 [=======================>......] - ETA: 1s - loss: 0.9529 - sqrt_abs_min_loss: 0.4584 - accuracy: 0.337526/31 [========================>.....] - ETA: 1s - loss: 0.9522 - sqrt_abs_min_loss: 0.4578 - accuracy: 0.335327/31 [=========================>....] - ETA: 0s - loss: 0.9516 - sqrt_abs_min_loss: 0.4572 - accuracy: 0.334528/31 [==========================>...] - ETA: 0s - loss: 0.9510 - sqrt_abs_min_loss: 0.4566 - accuracy: 0.333729/31 [===========================>..] - ETA: 0s - loss: 0.9503 - sqrt_abs_min_loss: 0.4559 - accuracy: 0.333030/31 [============================>.] - ETA: 0s - loss: 0.9497 - sqrt_abs_min_loss: 0.4553 - accuracy: 0.332331/31 [==============================] - ETA: 0s - loss: 0.9491 - sqrt_abs_min_loss: 0.4547 - accuracy: 0.331731/31 [==============================] - 7s 216ms/step - loss: 0.9491 - sqrt_abs_min_loss: 0.4547 - accuracy: 0.3317
test loss, test acc: [0.9491068124771118, 0.4546961486339569, 0.3316532373428345]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232378: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:43 2023
Job was executed on host(s) <4*n-62-20-11>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Mon Jan 23 23:42:42 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Mon Jan 23 23:42:42 2023
Terminated at Tue Jan 24 04:27:13 2023
Results reported at Tue Jan 24 04:27:13 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_00005_model_j_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.0005)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_00005_model_j_" "iter6" "load_model_j"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   22937.37 sec.
    Max Memory :                                 2977 MB
    Average Memory :                             2900.91 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17503.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17072 sec.
    Turnaround time :                            143670 sec.

The output (if any) is above this job summary.

