Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-22 23:14:51.802542: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-22 23:14:55.938890: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-22 23:14:55.939661: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-22 23:14:55.939674: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-22 23:15:00.805186: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-22 23:15:03.601712: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:16:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.002)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_0002_model_i_
Output folder:  iter6
Model name:  load_model_i
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(32, activation="sigmoid")(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-22 23:15:09.634050: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 196s - loss: 0.4668 - sqrt_abs_min_loss: 0.4668 - accuracy: 0.3079 - val_loss: 0.4838 - val_sqrt_abs_min_loss: 0.4838 - val_accuracy: 0.2923 - 196s/epoch - 720ms/step
Epoch 2/100
273/273 - 169s - loss: 0.4694 - sqrt_abs_min_loss: 0.4694 - accuracy: 0.3557 - val_loss: 0.4835 - val_sqrt_abs_min_loss: 0.4835 - val_accuracy: 0.4950 - 169s/epoch - 619ms/step
Epoch 3/100
273/273 - 169s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.3167 - val_loss: 0.4499 - val_sqrt_abs_min_loss: 0.4499 - val_accuracy: 0.2167 - 169s/epoch - 618ms/step
Epoch 4/100
273/273 - 169s - loss: 0.4641 - sqrt_abs_min_loss: 0.4641 - accuracy: 0.3323 - val_loss: 0.4688 - val_sqrt_abs_min_loss: 0.4688 - val_accuracy: 0.3135 - 169s/epoch - 620ms/step
Epoch 5/100
273/273 - 168s - loss: 0.4620 - sqrt_abs_min_loss: 0.4620 - accuracy: 0.2740 - val_loss: 0.4776 - val_sqrt_abs_min_loss: 0.4776 - val_accuracy: 0.3649 - 168s/epoch - 614ms/step
Epoch 6/100
273/273 - 168s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.3450 - val_loss: 0.4722 - val_sqrt_abs_min_loss: 0.4722 - val_accuracy: 0.4052 - 168s/epoch - 616ms/step
Epoch 7/100
273/273 - 168s - loss: 0.4705 - sqrt_abs_min_loss: 0.4705 - accuracy: 0.3464 - val_loss: 0.4826 - val_sqrt_abs_min_loss: 0.4826 - val_accuracy: 0.2681 - 168s/epoch - 615ms/step
Epoch 8/100
273/273 - 168s - loss: 0.4632 - sqrt_abs_min_loss: 0.4632 - accuracy: 0.3362 - val_loss: 0.4863 - val_sqrt_abs_min_loss: 0.4863 - val_accuracy: 0.1885 - 168s/epoch - 616ms/step
Epoch 9/100
273/273 - 168s - loss: 0.4661 - sqrt_abs_min_loss: 0.4661 - accuracy: 0.3090 - val_loss: 0.4769 - val_sqrt_abs_min_loss: 0.4769 - val_accuracy: 0.2873 - 168s/epoch - 615ms/step
Epoch 10/100
273/273 - 169s - loss: 0.4613 - sqrt_abs_min_loss: 0.4613 - accuracy: 0.3868 - val_loss: 0.4638 - val_sqrt_abs_min_loss: 0.4638 - val_accuracy: 0.4405 - 169s/epoch - 619ms/step
Epoch 11/100
273/273 - 168s - loss: 0.4657 - sqrt_abs_min_loss: 0.4657 - accuracy: 0.3273 - val_loss: 0.4927 - val_sqrt_abs_min_loss: 0.4927 - val_accuracy: 0.4103 - 168s/epoch - 615ms/step
Epoch 12/100
273/273 - 168s - loss: 0.4654 - sqrt_abs_min_loss: 0.4654 - accuracy: 0.2760 - val_loss: 0.4600 - val_sqrt_abs_min_loss: 0.4600 - val_accuracy: 0.3216 - 168s/epoch - 615ms/step
Epoch 13/100
273/273 - 169s - loss: 0.4704 - sqrt_abs_min_loss: 0.4704 - accuracy: 0.3457 - val_loss: 0.4398 - val_sqrt_abs_min_loss: 0.4398 - val_accuracy: 0.3196 - 169s/epoch - 619ms/step
Epoch 14/100
273/273 - 168s - loss: 0.4644 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.3227 - val_loss: 0.4786 - val_sqrt_abs_min_loss: 0.4786 - val_accuracy: 0.3992 - 168s/epoch - 616ms/step
Epoch 15/100
273/273 - 168s - loss: 0.4639 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.3452 - val_loss: 0.4671 - val_sqrt_abs_min_loss: 0.4671 - val_accuracy: 0.3558 - 168s/epoch - 615ms/step
Epoch 16/100
273/273 - 168s - loss: 0.4608 - sqrt_abs_min_loss: 0.4608 - accuracy: 0.3102 - val_loss: 0.4894 - val_sqrt_abs_min_loss: 0.4894 - val_accuracy: 0.3548 - 168s/epoch - 615ms/step
Epoch 17/100
273/273 - 168s - loss: 0.4667 - sqrt_abs_min_loss: 0.4667 - accuracy: 0.3167 - val_loss: 0.4583 - val_sqrt_abs_min_loss: 0.4583 - val_accuracy: 0.1895 - 168s/epoch - 615ms/step
Epoch 18/100
273/273 - 169s - loss: 0.4652 - sqrt_abs_min_loss: 0.4652 - accuracy: 0.3402 - val_loss: 0.4733 - val_sqrt_abs_min_loss: 0.4733 - val_accuracy: 0.3165 - 169s/epoch - 618ms/step
Epoch 19/100
273/273 - 168s - loss: 0.4710 - sqrt_abs_min_loss: 0.4710 - accuracy: 0.3443 - val_loss: 0.4678 - val_sqrt_abs_min_loss: 0.4678 - val_accuracy: 0.2772 - 168s/epoch - 614ms/step
Epoch 20/100
273/273 - 169s - loss: 0.4639 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.3601 - val_loss: 0.4855 - val_sqrt_abs_min_loss: 0.4855 - val_accuracy: 0.3065 - 169s/epoch - 619ms/step
Epoch 21/100
273/273 - 168s - loss: 0.4611 - sqrt_abs_min_loss: 0.4611 - accuracy: 0.3662 - val_loss: 0.4756 - val_sqrt_abs_min_loss: 0.4756 - val_accuracy: 0.3750 - 168s/epoch - 615ms/step
Epoch 22/100
273/273 - 168s - loss: 0.4632 - sqrt_abs_min_loss: 0.4632 - accuracy: 0.3478 - val_loss: 0.4630 - val_sqrt_abs_min_loss: 0.4630 - val_accuracy: 0.3448 - 168s/epoch - 614ms/step
Epoch 23/100
273/273 - 168s - loss: 0.4669 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3114 - val_loss: 0.4626 - val_sqrt_abs_min_loss: 0.4626 - val_accuracy: 0.4486 - 168s/epoch - 614ms/step
Epoch 24/100
273/273 - 169s - loss: 0.4679 - sqrt_abs_min_loss: 0.4679 - accuracy: 0.2783 - val_loss: 0.4661 - val_sqrt_abs_min_loss: 0.4661 - val_accuracy: 0.4224 - 169s/epoch - 619ms/step
Epoch 25/100
273/273 - 168s - loss: 0.4674 - sqrt_abs_min_loss: 0.4674 - accuracy: 0.3207 - val_loss: 0.4613 - val_sqrt_abs_min_loss: 0.4613 - val_accuracy: 0.3730 - 168s/epoch - 614ms/step
Epoch 26/100
273/273 - 168s - loss: 0.4663 - sqrt_abs_min_loss: 0.4663 - accuracy: 0.3571 - val_loss: 0.4980 - val_sqrt_abs_min_loss: 0.4980 - val_accuracy: 0.3659 - 168s/epoch - 616ms/step
Epoch 27/100
273/273 - 169s - loss: 0.4634 - sqrt_abs_min_loss: 0.4634 - accuracy: 0.3507 - val_loss: 0.4795 - val_sqrt_abs_min_loss: 0.4795 - val_accuracy: 0.2379 - 169s/epoch - 618ms/step
Epoch 28/100
273/273 - 168s - loss: 0.4623 - sqrt_abs_min_loss: 0.4623 - accuracy: 0.3510 - val_loss: 0.5039 - val_sqrt_abs_min_loss: 0.5039 - val_accuracy: 0.2288 - 168s/epoch - 617ms/step
Epoch 29/100
273/273 - 168s - loss: 0.4673 - sqrt_abs_min_loss: 0.4673 - accuracy: 0.3856 - val_loss: 0.4768 - val_sqrt_abs_min_loss: 0.4768 - val_accuracy: 0.4415 - 168s/epoch - 616ms/step
Epoch 30/100
273/273 - 168s - loss: 0.4657 - sqrt_abs_min_loss: 0.4657 - accuracy: 0.3552 - val_loss: 0.4743 - val_sqrt_abs_min_loss: 0.4743 - val_accuracy: 0.3014 - 168s/epoch - 616ms/step
Epoch 31/100
273/273 - 169s - loss: 0.4581 - sqrt_abs_min_loss: 0.4581 - accuracy: 0.3502 - val_loss: 0.4870 - val_sqrt_abs_min_loss: 0.4870 - val_accuracy: 0.3417 - 169s/epoch - 618ms/step
Epoch 32/100
273/273 - 168s - loss: 0.4575 - sqrt_abs_min_loss: 0.4575 - accuracy: 0.3710 - val_loss: 0.4873 - val_sqrt_abs_min_loss: 0.4873 - val_accuracy: 0.3407 - 168s/epoch - 614ms/step
Epoch 33/100
273/273 - 168s - loss: 0.4646 - sqrt_abs_min_loss: 0.4646 - accuracy: 0.3355 - val_loss: 0.4722 - val_sqrt_abs_min_loss: 0.4722 - val_accuracy: 0.4062 - 168s/epoch - 614ms/step
Epoch 34/100
273/273 - 168s - loss: 0.4649 - sqrt_abs_min_loss: 0.4649 - accuracy: 0.3555 - val_loss: 0.4668 - val_sqrt_abs_min_loss: 0.4668 - val_accuracy: 0.3599 - 168s/epoch - 615ms/step
Epoch 35/100
273/273 - 168s - loss: 0.4671 - sqrt_abs_min_loss: 0.4671 - accuracy: 0.3372 - val_loss: 0.4866 - val_sqrt_abs_min_loss: 0.4866 - val_accuracy: 0.2742 - 168s/epoch - 614ms/step
Epoch 36/100
273/273 - 167s - loss: 0.4674 - sqrt_abs_min_loss: 0.4674 - accuracy: 0.2921 - val_loss: 0.4758 - val_sqrt_abs_min_loss: 0.4758 - val_accuracy: 0.4234 - 167s/epoch - 613ms/step
Epoch 37/100
273/273 - 168s - loss: 0.4679 - sqrt_abs_min_loss: 0.4679 - accuracy: 0.3387 - val_loss: 0.4533 - val_sqrt_abs_min_loss: 0.4533 - val_accuracy: 0.3115 - 168s/epoch - 614ms/step
Epoch 38/100
273/273 - 168s - loss: 0.4678 - sqrt_abs_min_loss: 0.4678 - accuracy: 0.3425 - val_loss: 0.4581 - val_sqrt_abs_min_loss: 0.4581 - val_accuracy: 0.2823 - 168s/epoch - 615ms/step
Epoch 39/100
273/273 - 167s - loss: 0.4622 - sqrt_abs_min_loss: 0.4622 - accuracy: 0.2768 - val_loss: 0.4761 - val_sqrt_abs_min_loss: 0.4761 - val_accuracy: 0.2883 - 167s/epoch - 610ms/step
Epoch 40/100
273/273 - 167s - loss: 0.4669 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3304 - val_loss: 0.4831 - val_sqrt_abs_min_loss: 0.4831 - val_accuracy: 0.4073 - 167s/epoch - 612ms/step
Epoch 41/100
273/273 - 167s - loss: 0.4643 - sqrt_abs_min_loss: 0.4643 - accuracy: 0.3490 - val_loss: 0.4691 - val_sqrt_abs_min_loss: 0.4691 - val_accuracy: 0.2591 - 167s/epoch - 610ms/step
Epoch 42/100
273/273 - 167s - loss: 0.4612 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3190 - val_loss: 0.4677 - val_sqrt_abs_min_loss: 0.4677 - val_accuracy: 0.2954 - 167s/epoch - 610ms/step
Epoch 43/100
273/273 - 167s - loss: 0.4592 - sqrt_abs_min_loss: 0.4592 - accuracy: 0.3185 - val_loss: 0.4572 - val_sqrt_abs_min_loss: 0.4572 - val_accuracy: 0.2974 - 167s/epoch - 610ms/step
Epoch 44/100
273/273 - 167s - loss: 0.4636 - sqrt_abs_min_loss: 0.4636 - accuracy: 0.3410 - val_loss: 0.4961 - val_sqrt_abs_min_loss: 0.4961 - val_accuracy: 0.2752 - 167s/epoch - 611ms/step
Epoch 45/100
273/273 - 166s - loss: 0.4628 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.3553 - val_loss: 0.4705 - val_sqrt_abs_min_loss: 0.4705 - val_accuracy: 0.2762 - 166s/epoch - 609ms/step
Epoch 46/100
273/273 - 168s - loss: 0.4612 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3344 - val_loss: 0.4488 - val_sqrt_abs_min_loss: 0.4488 - val_accuracy: 0.2571 - 168s/epoch - 615ms/step
Epoch 47/100
273/273 - 168s - loss: 0.4662 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3278 - val_loss: 0.4671 - val_sqrt_abs_min_loss: 0.4671 - val_accuracy: 0.2863 - 168s/epoch - 616ms/step
Epoch 48/100
273/273 - 168s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.3122 - val_loss: 0.4655 - val_sqrt_abs_min_loss: 0.4655 - val_accuracy: 0.3105 - 168s/epoch - 616ms/step
Epoch 49/100
273/273 - 168s - loss: 0.4654 - sqrt_abs_min_loss: 0.4654 - accuracy: 0.3083 - val_loss: 0.4721 - val_sqrt_abs_min_loss: 0.4721 - val_accuracy: 0.4506 - 168s/epoch - 617ms/step
Epoch 50/100
273/273 - 167s - loss: 0.4666 - sqrt_abs_min_loss: 0.4666 - accuracy: 0.3798 - val_loss: 0.4539 - val_sqrt_abs_min_loss: 0.4539 - val_accuracy: 0.3075 - 167s/epoch - 614ms/step
Epoch 51/100
273/273 - 168s - loss: 0.4645 - sqrt_abs_min_loss: 0.4645 - accuracy: 0.3211 - val_loss: 0.5071 - val_sqrt_abs_min_loss: 0.5071 - val_accuracy: 0.3710 - 168s/epoch - 616ms/step
Epoch 52/100
273/273 - 169s - loss: 0.4631 - sqrt_abs_min_loss: 0.4631 - accuracy: 0.3158 - val_loss: 0.4599 - val_sqrt_abs_min_loss: 0.4599 - val_accuracy: 0.3831 - 169s/epoch - 618ms/step
Epoch 53/100
273/273 - 168s - loss: 0.4616 - sqrt_abs_min_loss: 0.4616 - accuracy: 0.3513 - val_loss: 0.4565 - val_sqrt_abs_min_loss: 0.4565 - val_accuracy: 0.3306 - 168s/epoch - 614ms/step
Epoch 54/100
273/273 - 167s - loss: 0.4610 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.2891 - val_loss: 0.4689 - val_sqrt_abs_min_loss: 0.4689 - val_accuracy: 0.4012 - 167s/epoch - 612ms/step
Epoch 55/100
273/273 - 167s - loss: 0.4655 - sqrt_abs_min_loss: 0.4655 - accuracy: 0.3526 - val_loss: 0.4490 - val_sqrt_abs_min_loss: 0.4490 - val_accuracy: 0.4567 - 167s/epoch - 612ms/step
Epoch 56/100
273/273 - 168s - loss: 0.4636 - sqrt_abs_min_loss: 0.4636 - accuracy: 0.3244 - val_loss: 0.4695 - val_sqrt_abs_min_loss: 0.4695 - val_accuracy: 0.3206 - 168s/epoch - 615ms/step
Epoch 57/100
273/273 - 168s - loss: 0.4721 - sqrt_abs_min_loss: 0.4721 - accuracy: 0.3321 - val_loss: 0.4648 - val_sqrt_abs_min_loss: 0.4648 - val_accuracy: 0.2177 - 168s/epoch - 617ms/step
Epoch 58/100
273/273 - 169s - loss: 0.4645 - sqrt_abs_min_loss: 0.4645 - accuracy: 0.3384 - val_loss: 0.4851 - val_sqrt_abs_min_loss: 0.4851 - val_accuracy: 0.3024 - 169s/epoch - 617ms/step
Epoch 59/100
273/273 - 168s - loss: 0.4689 - sqrt_abs_min_loss: 0.4689 - accuracy: 0.3551 - val_loss: 0.4812 - val_sqrt_abs_min_loss: 0.4812 - val_accuracy: 0.3196 - 168s/epoch - 616ms/step
Epoch 60/100
273/273 - 168s - loss: 0.4628 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.3183 - val_loss: 0.4663 - val_sqrt_abs_min_loss: 0.4663 - val_accuracy: 0.3548 - 168s/epoch - 615ms/step
Epoch 61/100
273/273 - 168s - loss: 0.4617 - sqrt_abs_min_loss: 0.4617 - accuracy: 0.3345 - val_loss: 0.4719 - val_sqrt_abs_min_loss: 0.4719 - val_accuracy: 0.3891 - 168s/epoch - 614ms/step
Epoch 62/100
273/273 - 167s - loss: 0.4625 - sqrt_abs_min_loss: 0.4625 - accuracy: 0.3308 - val_loss: 0.4599 - val_sqrt_abs_min_loss: 0.4599 - val_accuracy: 0.4466 - 167s/epoch - 613ms/step
Epoch 63/100
273/273 - 168s - loss: 0.4660 - sqrt_abs_min_loss: 0.4660 - accuracy: 0.3415 - val_loss: 0.4855 - val_sqrt_abs_min_loss: 0.4855 - val_accuracy: 0.2440 - 168s/epoch - 616ms/step
Epoch 64/100
273/273 - 168s - loss: 0.4586 - sqrt_abs_min_loss: 0.4586 - accuracy: 0.3523 - val_loss: 0.4878 - val_sqrt_abs_min_loss: 0.4878 - val_accuracy: 0.3286 - 168s/epoch - 616ms/step
Epoch 65/100
273/273 - 168s - loss: 0.4576 - sqrt_abs_min_loss: 0.4576 - accuracy: 0.3566 - val_loss: 0.4731 - val_sqrt_abs_min_loss: 0.4731 - val_accuracy: 0.2601 - 168s/epoch - 614ms/step
Epoch 66/100
273/273 - 168s - loss: 0.4658 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.3759 - val_loss: 0.4846 - val_sqrt_abs_min_loss: 0.4846 - val_accuracy: 0.2692 - 168s/epoch - 617ms/step
Epoch 67/100
273/273 - 169s - loss: 0.4687 - sqrt_abs_min_loss: 0.4687 - accuracy: 0.3782 - val_loss: 0.4689 - val_sqrt_abs_min_loss: 0.4689 - val_accuracy: 0.2792 - 169s/epoch - 618ms/step
Epoch 68/100
273/273 - 168s - loss: 0.4619 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.3396 - val_loss: 0.4903 - val_sqrt_abs_min_loss: 0.4903 - val_accuracy: 0.2752 - 168s/epoch - 615ms/step
Epoch 69/100
273/273 - 168s - loss: 0.4653 - sqrt_abs_min_loss: 0.4653 - accuracy: 0.3220 - val_loss: 0.4739 - val_sqrt_abs_min_loss: 0.4739 - val_accuracy: 0.4093 - 168s/epoch - 615ms/step
Epoch 70/100
273/273 - 168s - loss: 0.4656 - sqrt_abs_min_loss: 0.4656 - accuracy: 0.3151 - val_loss: 0.4787 - val_sqrt_abs_min_loss: 0.4787 - val_accuracy: 0.3619 - 168s/epoch - 614ms/step
Epoch 71/100
273/273 - 169s - loss: 0.4610 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.3370 - val_loss: 0.4702 - val_sqrt_abs_min_loss: 0.4702 - val_accuracy: 0.3780 - 169s/epoch - 620ms/step
Epoch 72/100
273/273 - 168s - loss: 0.4653 - sqrt_abs_min_loss: 0.4653 - accuracy: 0.3458 - val_loss: 0.4798 - val_sqrt_abs_min_loss: 0.4798 - val_accuracy: 0.2944 - 168s/epoch - 614ms/step
Epoch 73/100
273/273 - 168s - loss: 0.4670 - sqrt_abs_min_loss: 0.4670 - accuracy: 0.3221 - val_loss: 0.4617 - val_sqrt_abs_min_loss: 0.4617 - val_accuracy: 0.2399 - 168s/epoch - 615ms/step
Epoch 74/100
273/273 - 169s - loss: 0.4538 - sqrt_abs_min_loss: 0.4538 - accuracy: 0.2941 - val_loss: 0.4519 - val_sqrt_abs_min_loss: 0.4519 - val_accuracy: 0.2671 - 169s/epoch - 618ms/step
Epoch 75/100
273/273 - 168s - loss: 0.4581 - sqrt_abs_min_loss: 0.4581 - accuracy: 0.2993 - val_loss: 0.4618 - val_sqrt_abs_min_loss: 0.4618 - val_accuracy: 0.1976 - 168s/epoch - 615ms/step
Epoch 76/100
273/273 - 168s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.4044 - val_loss: 0.4750 - val_sqrt_abs_min_loss: 0.4750 - val_accuracy: 0.2742 - 168s/epoch - 616ms/step
Epoch 77/100
273/273 - 168s - loss: 0.4663 - sqrt_abs_min_loss: 0.4663 - accuracy: 0.3308 - val_loss: 0.4874 - val_sqrt_abs_min_loss: 0.4874 - val_accuracy: 0.2823 - 168s/epoch - 615ms/step
Epoch 78/100
273/273 - 168s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.3858 - val_loss: 0.4801 - val_sqrt_abs_min_loss: 0.4801 - val_accuracy: 0.3145 - 168s/epoch - 614ms/step
Epoch 79/100
273/273 - 168s - loss: 0.4613 - sqrt_abs_min_loss: 0.4613 - accuracy: 0.3218 - val_loss: 0.4494 - val_sqrt_abs_min_loss: 0.4494 - val_accuracy: 0.3085 - 168s/epoch - 616ms/step
Epoch 80/100
273/273 - 170s - loss: 0.4609 - sqrt_abs_min_loss: 0.4609 - accuracy: 0.3716 - val_loss: 0.4686 - val_sqrt_abs_min_loss: 0.4686 - val_accuracy: 0.3780 - 170s/epoch - 621ms/step
Epoch 81/100
273/273 - 168s - loss: 0.4625 - sqrt_abs_min_loss: 0.4625 - accuracy: 0.3312 - val_loss: 0.4819 - val_sqrt_abs_min_loss: 0.4819 - val_accuracy: 0.2359 - 168s/epoch - 617ms/step
Epoch 82/100
273/273 - 168s - loss: 0.4645 - sqrt_abs_min_loss: 0.4645 - accuracy: 0.3272 - val_loss: 0.5010 - val_sqrt_abs_min_loss: 0.5010 - val_accuracy: 0.2923 - 168s/epoch - 616ms/step
Epoch 83/100
273/273 - 169s - loss: 0.4702 - sqrt_abs_min_loss: 0.4702 - accuracy: 0.3685 - val_loss: 0.4800 - val_sqrt_abs_min_loss: 0.4800 - val_accuracy: 0.3508 - 169s/epoch - 618ms/step
Epoch 84/100
273/273 - 167s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.3070 - val_loss: 0.4770 - val_sqrt_abs_min_loss: 0.4770 - val_accuracy: 0.2732 - 167s/epoch - 613ms/step
Epoch 85/100
273/273 - 167s - loss: 0.4595 - sqrt_abs_min_loss: 0.4595 - accuracy: 0.3362 - val_loss: 0.4954 - val_sqrt_abs_min_loss: 0.4954 - val_accuracy: 0.3760 - 167s/epoch - 610ms/step
Epoch 86/100
273/273 - 168s - loss: 0.4698 - sqrt_abs_min_loss: 0.4698 - accuracy: 0.3162 - val_loss: 0.5116 - val_sqrt_abs_min_loss: 0.5116 - val_accuracy: 0.3125 - 168s/epoch - 614ms/step
Epoch 87/100
273/273 - 167s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3290 - val_loss: 0.4853 - val_sqrt_abs_min_loss: 0.4853 - val_accuracy: 0.2127 - 167s/epoch - 613ms/step
Epoch 88/100
273/273 - 167s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3516 - val_loss: 0.4512 - val_sqrt_abs_min_loss: 0.4512 - val_accuracy: 0.2490 - 167s/epoch - 613ms/step
Epoch 89/100
273/273 - 166s - loss: 0.4594 - sqrt_abs_min_loss: 0.4594 - accuracy: 0.3189 - val_loss: 0.4961 - val_sqrt_abs_min_loss: 0.4961 - val_accuracy: 0.3720 - 166s/epoch - 609ms/step
Epoch 90/100
273/273 - 167s - loss: 0.4572 - sqrt_abs_min_loss: 0.4572 - accuracy: 0.3381 - val_loss: 0.4708 - val_sqrt_abs_min_loss: 0.4708 - val_accuracy: 0.3427 - 167s/epoch - 610ms/step
Epoch 91/100
273/273 - 167s - loss: 0.4601 - sqrt_abs_min_loss: 0.4601 - accuracy: 0.3729 - val_loss: 0.4689 - val_sqrt_abs_min_loss: 0.4689 - val_accuracy: 0.1835 - 167s/epoch - 613ms/step
Epoch 92/100
273/273 - 167s - loss: 0.4601 - sqrt_abs_min_loss: 0.4601 - accuracy: 0.3265 - val_loss: 0.4686 - val_sqrt_abs_min_loss: 0.4686 - val_accuracy: 0.3619 - 167s/epoch - 613ms/step
Epoch 93/100
273/273 - 167s - loss: 0.4634 - sqrt_abs_min_loss: 0.4634 - accuracy: 0.3274 - val_loss: 0.4755 - val_sqrt_abs_min_loss: 0.4755 - val_accuracy: 0.3700 - 167s/epoch - 612ms/step
Epoch 94/100
273/273 - 170s - loss: 0.4701 - sqrt_abs_min_loss: 0.4701 - accuracy: 0.3663 - val_loss: 0.4838 - val_sqrt_abs_min_loss: 0.4838 - val_accuracy: 0.4093 - 170s/epoch - 622ms/step
Epoch 95/100
273/273 - 170s - loss: 0.4678 - sqrt_abs_min_loss: 0.4678 - accuracy: 0.3420 - val_loss: 0.4586 - val_sqrt_abs_min_loss: 0.4586 - val_accuracy: 0.2702 - 170s/epoch - 623ms/step
Epoch 96/100
273/273 - 167s - loss: 0.4635 - sqrt_abs_min_loss: 0.4635 - accuracy: 0.3639 - val_loss: 0.4929 - val_sqrt_abs_min_loss: 0.4929 - val_accuracy: 0.3327 - 167s/epoch - 613ms/step
Epoch 97/100
273/273 - 168s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.2908 - val_loss: 0.4844 - val_sqrt_abs_min_loss: 0.4844 - val_accuracy: 0.3065 - 168s/epoch - 616ms/step
Epoch 98/100
273/273 - 168s - loss: 0.4644 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.3117 - val_loss: 0.4657 - val_sqrt_abs_min_loss: 0.4657 - val_accuracy: 0.3417 - 168s/epoch - 615ms/step
Epoch 99/100
273/273 - 168s - loss: 0.4629 - sqrt_abs_min_loss: 0.4629 - accuracy: 0.3490 - val_loss: 0.4727 - val_sqrt_abs_min_loss: 0.4727 - val_accuracy: 0.2994 - 168s/epoch - 614ms/step
Epoch 100/100
273/273 - 167s - loss: 0.4697 - sqrt_abs_min_loss: 0.4697 - accuracy: 0.2930 - val_loss: 0.4939 - val_sqrt_abs_min_loss: 0.4939 - val_accuracy: 0.4294 - 167s/epoch - 610ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 804ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[-21.486654 -37.48758   35.0484  ]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 9s - loss: 0.4686 - sqrt_abs_min_loss: 0.4686 - accuracy: 0.4062 2/31 [>.............................] - ETA: 5s - loss: 0.4683 - sqrt_abs_min_loss: 0.4683 - accuracy: 0.4062 3/31 [=>............................] - ETA: 5s - loss: 0.4668 - sqrt_abs_min_loss: 0.4668 - accuracy: 0.4167 4/31 [==>...........................] - ETA: 5s - loss: 0.4657 - sqrt_abs_min_loss: 0.4657 - accuracy: 0.4219 5/31 [===>..........................] - ETA: 5s - loss: 0.4646 - sqrt_abs_min_loss: 0.4646 - accuracy: 0.4250 6/31 [====>.........................] - ETA: 4s - loss: 0.4644 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.4271 7/31 [=====>........................] - ETA: 4s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.4286 8/31 [======>.......................] - ETA: 4s - loss: 0.4633 - sqrt_abs_min_loss: 0.4633 - accuracy: 0.4297 9/31 [=======>......................] - ETA: 4s - loss: 0.4619 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.427110/31 [========>.....................] - ETA: 4s - loss: 0.4613 - sqrt_abs_min_loss: 0.4613 - accuracy: 0.425011/31 [=========>....................] - ETA: 3s - loss: 0.4608 - sqrt_abs_min_loss: 0.4608 - accuracy: 0.423312/31 [==========>...................] - ETA: 3s - loss: 0.4602 - sqrt_abs_min_loss: 0.4602 - accuracy: 0.421913/31 [===========>..................] - ETA: 3s - loss: 0.4600 - sqrt_abs_min_loss: 0.4600 - accuracy: 0.420714/31 [============>.................] - ETA: 3s - loss: 0.4598 - sqrt_abs_min_loss: 0.4598 - accuracy: 0.419615/31 [=============>................] - ETA: 3s - loss: 0.4600 - sqrt_abs_min_loss: 0.4600 - accuracy: 0.418716/31 [==============>...............] - ETA: 3s - loss: 0.4600 - sqrt_abs_min_loss: 0.4600 - accuracy: 0.416017/31 [===============>..............] - ETA: 2s - loss: 0.4603 - sqrt_abs_min_loss: 0.4603 - accuracy: 0.415418/31 [================>.............] - ETA: 2s - loss: 0.4605 - sqrt_abs_min_loss: 0.4605 - accuracy: 0.416719/31 [=================>............] - ETA: 2s - loss: 0.4604 - sqrt_abs_min_loss: 0.4604 - accuracy: 0.416120/31 [==================>...........] - ETA: 2s - loss: 0.4604 - sqrt_abs_min_loss: 0.4604 - accuracy: 0.415621/31 [===================>..........] - ETA: 2s - loss: 0.4605 - sqrt_abs_min_loss: 0.4605 - accuracy: 0.415222/31 [====================>.........] - ETA: 1s - loss: 0.4606 - sqrt_abs_min_loss: 0.4606 - accuracy: 0.414823/31 [=====================>........] - ETA: 1s - loss: 0.4607 - sqrt_abs_min_loss: 0.4607 - accuracy: 0.413024/31 [======================>.......] - ETA: 1s - loss: 0.4609 - sqrt_abs_min_loss: 0.4609 - accuracy: 0.412825/31 [=======================>......] - ETA: 1s - loss: 0.4608 - sqrt_abs_min_loss: 0.4608 - accuracy: 0.411226/31 [========================>.....] - ETA: 1s - loss: 0.4609 - sqrt_abs_min_loss: 0.4609 - accuracy: 0.409927/31 [=========================>....] - ETA: 0s - loss: 0.4611 - sqrt_abs_min_loss: 0.4611 - accuracy: 0.408628/31 [==========================>...] - ETA: 0s - loss: 0.4614 - sqrt_abs_min_loss: 0.4614 - accuracy: 0.407429/31 [===========================>..] - ETA: 0s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.405230/31 [============================>.] - ETA: 0s - loss: 0.4617 - sqrt_abs_min_loss: 0.4617 - accuracy: 0.403131/31 [==============================] - ETA: 0s - loss: 0.4619 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.401231/31 [==============================] - 6s 201ms/step - loss: 0.4619 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.4012
test loss, test acc: [0.461862713098526, 0.461862713098526, 0.40120968222618103]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232344: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:34 2023
Job was executed on host(s) <4*n-62-20-11>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Sun Jan 22 23:14:47 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Sun Jan 22 23:14:47 2023
Terminated at Mon Jan 23 03:55:36 2023
Results reported at Mon Jan 23 03:55:36 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_0002_model_i_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.002)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_0002_model_i_" "iter6" "load_model_i"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21809.60 sec.
    Max Memory :                                 3057 MB
    Average Memory :                             2945.63 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17423.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   16851 sec.
    Turnaround time :                            55382 sec.

The output (if any) is above this job summary.

