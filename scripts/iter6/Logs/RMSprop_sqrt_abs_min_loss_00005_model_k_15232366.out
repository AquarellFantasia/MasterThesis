Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-23 11:51:39.059241: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 11:51:44.398449: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 11:51:44.399608: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 11:51:44.399621: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-23 11:51:49.680183: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 11:51:52.432964: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14610 MB memory:  -> device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:af:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_00005_model_k_
Output folder:  iter6
Model name:  load_model_k
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(32, activation="sigmoid", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-23 11:51:57.922906: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 202s - loss: 2.0709 - sqrt_abs_min_loss: 0.4647 - accuracy: 0.4009 - val_loss: 0.4922 - val_sqrt_abs_min_loss: 0.4878 - val_accuracy: 0.3518 - 202s/epoch - 741ms/step
Epoch 2/100
273/273 - 175s - loss: 0.4706 - sqrt_abs_min_loss: 0.4701 - accuracy: 0.3806 - val_loss: 0.4730 - val_sqrt_abs_min_loss: 0.4726 - val_accuracy: 0.3730 - 175s/epoch - 640ms/step
Epoch 3/100
273/273 - 174s - loss: 0.4693 - sqrt_abs_min_loss: 0.4691 - accuracy: 0.3299 - val_loss: 0.4710 - val_sqrt_abs_min_loss: 0.4709 - val_accuracy: 0.3669 - 174s/epoch - 639ms/step
Epoch 4/100
273/273 - 175s - loss: 0.4618 - sqrt_abs_min_loss: 0.4616 - accuracy: 0.3470 - val_loss: 0.4667 - val_sqrt_abs_min_loss: 0.4666 - val_accuracy: 0.1694 - 175s/epoch - 639ms/step
Epoch 5/100
273/273 - 174s - loss: 0.4503 - sqrt_abs_min_loss: 0.4501 - accuracy: 0.3202 - val_loss: 0.4475 - val_sqrt_abs_min_loss: 0.4473 - val_accuracy: 0.3478 - 174s/epoch - 639ms/step
Epoch 6/100
273/273 - 174s - loss: 0.4702 - sqrt_abs_min_loss: 0.4700 - accuracy: 0.3603 - val_loss: 0.4590 - val_sqrt_abs_min_loss: 0.4589 - val_accuracy: 0.3226 - 174s/epoch - 639ms/step
Epoch 7/100
273/273 - 174s - loss: 0.4587 - sqrt_abs_min_loss: 0.4585 - accuracy: 0.3238 - val_loss: 0.4512 - val_sqrt_abs_min_loss: 0.4511 - val_accuracy: 0.4264 - 174s/epoch - 639ms/step
Epoch 8/100
273/273 - 174s - loss: 0.4558 - sqrt_abs_min_loss: 0.4555 - accuracy: 0.3985 - val_loss: 0.4805 - val_sqrt_abs_min_loss: 0.4803 - val_accuracy: 0.3518 - 174s/epoch - 638ms/step
Epoch 9/100
273/273 - 174s - loss: 0.4704 - sqrt_abs_min_loss: 0.4703 - accuracy: 0.3743 - val_loss: 0.4772 - val_sqrt_abs_min_loss: 0.4770 - val_accuracy: 0.3528 - 174s/epoch - 639ms/step
Epoch 10/100
273/273 - 174s - loss: 0.4657 - sqrt_abs_min_loss: 0.4655 - accuracy: 0.3701 - val_loss: 0.4689 - val_sqrt_abs_min_loss: 0.4688 - val_accuracy: 0.3589 - 174s/epoch - 638ms/step
Epoch 11/100
273/273 - 174s - loss: 0.4612 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.3549 - val_loss: 0.4542 - val_sqrt_abs_min_loss: 0.4541 - val_accuracy: 0.2601 - 174s/epoch - 638ms/step
Epoch 12/100
273/273 - 174s - loss: 0.4703 - sqrt_abs_min_loss: 0.4702 - accuracy: 0.3759 - val_loss: 0.4658 - val_sqrt_abs_min_loss: 0.4657 - val_accuracy: 0.4617 - 174s/epoch - 638ms/step
Epoch 13/100
273/273 - 174s - loss: 0.4637 - sqrt_abs_min_loss: 0.4636 - accuracy: 0.3288 - val_loss: 0.4913 - val_sqrt_abs_min_loss: 0.4912 - val_accuracy: 0.2933 - 174s/epoch - 637ms/step
Epoch 14/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3252 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4335 - 174s/epoch - 637ms/step
Epoch 15/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3401 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3317 - 174s/epoch - 639ms/step
Epoch 16/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3209 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3609 - 174s/epoch - 637ms/step
Epoch 17/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3462 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3942 - 174s/epoch - 637ms/step
Epoch 18/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3306 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3014 - 174s/epoch - 638ms/step
Epoch 19/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3510 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2409 - 174s/epoch - 638ms/step
Epoch 20/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2904 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2339 - 174s/epoch - 638ms/step
Epoch 21/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2995 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3095 - 174s/epoch - 638ms/step
Epoch 22/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3463 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3286 - 174s/epoch - 638ms/step
Epoch 23/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3064 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3569 - 174s/epoch - 639ms/step
Epoch 24/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.4113 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3952 - 174s/epoch - 638ms/step
Epoch 25/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3253 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2681 - 174s/epoch - 638ms/step
Epoch 26/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3563 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2248 - 174s/epoch - 639ms/step
Epoch 27/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3289 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2268 - 174s/epoch - 639ms/step
Epoch 28/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3134 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3427 - 174s/epoch - 638ms/step
Epoch 29/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3365 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3730 - 174s/epoch - 638ms/step
Epoch 30/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3076 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4889 - 174s/epoch - 638ms/step
Epoch 31/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3206 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2853 - 174s/epoch - 638ms/step
Epoch 32/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3301 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4929 - 174s/epoch - 639ms/step
Epoch 33/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3267 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3175 - 174s/epoch - 637ms/step
Epoch 34/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3235 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3720 - 174s/epoch - 637ms/step
Epoch 35/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3304 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2319 - 174s/epoch - 638ms/step
Epoch 36/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3871 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3004 - 174s/epoch - 637ms/step
Epoch 37/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3080 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3175 - 174s/epoch - 636ms/step
Epoch 38/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3154 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4002 - 174s/epoch - 638ms/step
Epoch 39/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3162 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4012 - 174s/epoch - 638ms/step
Epoch 40/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3324 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3206 - 174s/epoch - 637ms/step
Epoch 41/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3625 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4234 - 174s/epoch - 638ms/step
Epoch 42/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2750 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3881 - 174s/epoch - 638ms/step
Epoch 43/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2968 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3075 - 174s/epoch - 638ms/step
Epoch 44/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3170 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3871 - 174s/epoch - 638ms/step
Epoch 45/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3037 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3135 - 174s/epoch - 638ms/step
Epoch 46/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2642 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2984 - 174s/epoch - 637ms/step
Epoch 47/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3344 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3397 - 174s/epoch - 638ms/step
Epoch 48/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3834 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4677 - 174s/epoch - 638ms/step
Epoch 49/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2837 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3327 - 174s/epoch - 638ms/step
Epoch 50/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2952 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4113 - 174s/epoch - 638ms/step
Epoch 51/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3415 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3397 - 174s/epoch - 638ms/step
Epoch 52/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3078 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3125 - 174s/epoch - 638ms/step
Epoch 53/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3261 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 174s/epoch - 637ms/step
Epoch 54/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3212 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4173 - 174s/epoch - 637ms/step
Epoch 55/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2899 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2470 - 174s/epoch - 637ms/step
Epoch 56/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3022 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2651 - 174s/epoch - 637ms/step
Epoch 57/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3079 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2873 - 174s/epoch - 637ms/step
Epoch 58/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3408 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3921 - 174s/epoch - 638ms/step
Epoch 59/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2862 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3196 - 174s/epoch - 637ms/step
Epoch 60/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3038 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3659 - 174s/epoch - 636ms/step
Epoch 61/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3475 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2802 - 174s/epoch - 637ms/step
Epoch 62/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3429 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4133 - 174s/epoch - 636ms/step
Epoch 63/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3357 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2641 - 174s/epoch - 637ms/step
Epoch 64/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3309 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3185 - 174s/epoch - 636ms/step
Epoch 65/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3554 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3004 - 174s/epoch - 639ms/step
Epoch 66/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3131 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3831 - 174s/epoch - 638ms/step
Epoch 67/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3178 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3075 - 174s/epoch - 638ms/step
Epoch 68/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2707 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3800 - 174s/epoch - 637ms/step
Epoch 69/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3205 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 174s/epoch - 637ms/step
Epoch 70/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3230 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3659 - 174s/epoch - 636ms/step
Epoch 71/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3302 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3044 - 174s/epoch - 637ms/step
Epoch 72/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3435 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2319 - 174s/epoch - 638ms/step
Epoch 73/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3329 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2329 - 174s/epoch - 637ms/step
Epoch 74/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3006 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3145 - 174s/epoch - 637ms/step
Epoch 75/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3182 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3478 - 174s/epoch - 638ms/step
Epoch 76/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3624 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3236 - 174s/epoch - 637ms/step
Epoch 77/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3423 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3085 - 174s/epoch - 637ms/step
Epoch 78/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3346 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3054 - 174s/epoch - 638ms/step
Epoch 79/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3344 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2843 - 174s/epoch - 637ms/step
Epoch 80/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3348 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3992 - 174s/epoch - 637ms/step
Epoch 81/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3697 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3821 - 174s/epoch - 638ms/step
Epoch 82/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2867 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4667 - 174s/epoch - 637ms/step
Epoch 83/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3716 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4536 - 174s/epoch - 637ms/step
Epoch 84/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3124 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2692 - 174s/epoch - 638ms/step
Epoch 85/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3400 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3185 - 174s/epoch - 638ms/step
Epoch 86/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3427 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4062 - 174s/epoch - 638ms/step
Epoch 87/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3590 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3397 - 174s/epoch - 636ms/step
Epoch 88/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3016 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3165 - 174s/epoch - 637ms/step
Epoch 89/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3432 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3044 - 174s/epoch - 638ms/step
Epoch 90/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3363 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3690 - 174s/epoch - 637ms/step
Epoch 91/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3245 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3468 - 174s/epoch - 637ms/step
Epoch 92/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3070 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3800 - 174s/epoch - 638ms/step
Epoch 93/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3112 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2611 - 174s/epoch - 636ms/step
Epoch 94/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3244 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2702 - 174s/epoch - 637ms/step
Epoch 95/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3167 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3286 - 174s/epoch - 638ms/step
Epoch 96/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3173 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4234 - 174s/epoch - 637ms/step
Epoch 97/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3419 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3589 - 174s/epoch - 637ms/step
Epoch 98/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3293 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3548 - 174s/epoch - 638ms/step
Epoch 99/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3038 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.5353 - 174s/epoch - 637ms/step
Epoch 100/100
273/273 - 174s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3029 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3135 - 174s/epoch - 638ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 772ms/step
predicted values [[nan nan nan]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[nan nan nan]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[nan nan nan]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[nan nan nan]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[nan nan nan]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 9s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 2/31 [>.............................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 3/31 [=>............................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 4/31 [==>...........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1953 5/31 [===>..........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2000 6/31 [====>.........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1979 7/31 [=====>........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2009 8/31 [======>.......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1992 9/31 [=======>......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.201410/31 [========>.....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.206211/31 [=========>....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.210212/31 [==========>...................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.213513/31 [===========>..................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.216314/31 [============>.................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.218815/31 [=============>................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.220816/31 [==============>...............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.224617/31 [===============>..............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.226118/31 [================>.............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.227419/31 [=================>............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.230320/31 [==================>...........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.232821/31 [===================>..........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.235122/31 [====================>.........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.238623/31 [=====================>........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.243224/31 [======================>.......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.247425/31 [=======================>......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.251226/31 [========================>.....] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.254827/31 [=========================>....] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.256928/31 [==========================>...] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.258929/31 [===========================>..] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.261930/31 [============================>.] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.264631/31 [==============================] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.267131/31 [==============================] - 7s 220ms/step - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2671
test loss, test acc: [nan, nan, 0.2671371102333069]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232366: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:39 2023
Job was executed on host(s) <4*n-62-20-5>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Mon Jan 23 11:51:33 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Mon Jan 23 11:51:33 2023
Terminated at Mon Jan 23 16:42:42 2023
Results reported at Mon Jan 23 16:42:42 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_00005_model_k_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.0005)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_00005_model_k_" "iter6" "load_model_k"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21913.21 sec.
    Max Memory :                                 2464 MB
    Average Memory :                             2361.85 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               18016.00 MB
    Max Swap :                                   2 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17471 sec.
    Turnaround time :                            101403 sec.

The output (if any) is above this job summary.

