Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-24 06:38:54.617535: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-24 06:38:56.385012: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-01-24 06:39:06.438247: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-24 06:39:06.438959: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-24 06:39:06.438991: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-24 06:39:17.439461: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-24 06:39:22.456371: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:d8:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.002)
Loss function name:  smart_sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_smart_sqrt_abs_min_loss_0002_model_j_
Output folder:  iter6
Model name:  load_model_j
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        x = layers.Dense(32, activation="sigmoid", kernel_regularizer=keras.regularizers.l1(0.01))(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-24 06:39:29.141270: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 207s - loss: 9.8067 - smart_sqrt_abs_min_loss: 0.6144 - accuracy: 0.3290 - val_loss: 2.2596 - val_smart_sqrt_abs_min_loss: 0.2672 - val_accuracy: 0.3518 - 207s/epoch - 758ms/step
Epoch 2/100
273/273 - 179s - loss: 2.1740 - smart_sqrt_abs_min_loss: 0.2467 - accuracy: 0.4202 - val_loss: 2.1952 - val_smart_sqrt_abs_min_loss: 0.2829 - val_accuracy: 0.2550 - 179s/epoch - 657ms/step
Epoch 3/100
273/273 - 179s - loss: 2.1779 - smart_sqrt_abs_min_loss: 0.2559 - accuracy: 0.3425 - val_loss: 2.1923 - val_smart_sqrt_abs_min_loss: 0.2605 - val_accuracy: 0.2258 - 179s/epoch - 657ms/step
Epoch 4/100
273/273 - 179s - loss: 2.2136 - smart_sqrt_abs_min_loss: 0.2921 - accuracy: 0.3537 - val_loss: 2.5808 - val_smart_sqrt_abs_min_loss: 0.6697 - val_accuracy: 0.3821 - 179s/epoch - 657ms/step
Epoch 5/100
273/273 - 179s - loss: 2.1884 - smart_sqrt_abs_min_loss: 0.2677 - accuracy: 0.3508 - val_loss: 2.1830 - val_smart_sqrt_abs_min_loss: 0.2525 - val_accuracy: 0.4173 - 179s/epoch - 657ms/step
Epoch 6/100
273/273 - 179s - loss: 2.2111 - smart_sqrt_abs_min_loss: 0.2902 - accuracy: 0.3028 - val_loss: 2.6023 - val_smart_sqrt_abs_min_loss: 0.6912 - val_accuracy: 0.2591 - 179s/epoch - 657ms/step
Epoch 7/100
273/273 - 179s - loss: 2.2116 - smart_sqrt_abs_min_loss: 0.2908 - accuracy: 0.3570 - val_loss: 2.1809 - val_smart_sqrt_abs_min_loss: 0.2504 - val_accuracy: 0.2661 - 179s/epoch - 655ms/step
Epoch 8/100
273/273 - 179s - loss: 2.1945 - smart_sqrt_abs_min_loss: 0.2737 - accuracy: 0.3048 - val_loss: 2.1642 - val_smart_sqrt_abs_min_loss: 0.2531 - val_accuracy: 0.4183 - 179s/epoch - 657ms/step
Epoch 9/100
273/273 - 179s - loss: 2.1702 - smart_sqrt_abs_min_loss: 0.2495 - accuracy: 0.3328 - val_loss: 2.1901 - val_smart_sqrt_abs_min_loss: 0.2596 - val_accuracy: 0.3841 - 179s/epoch - 657ms/step
Epoch 10/100
273/273 - 179s - loss: 2.1664 - smart_sqrt_abs_min_loss: 0.2456 - accuracy: 0.3462 - val_loss: 2.1771 - val_smart_sqrt_abs_min_loss: 0.2660 - val_accuracy: 0.4153 - 179s/epoch - 657ms/step
Epoch 11/100
273/273 - 179s - loss: 2.1658 - smart_sqrt_abs_min_loss: 0.2450 - accuracy: 0.3467 - val_loss: 2.1650 - val_smart_sqrt_abs_min_loss: 0.2345 - val_accuracy: 0.3589 - 179s/epoch - 656ms/step
Epoch 12/100
273/273 - 179s - loss: 2.1761 - smart_sqrt_abs_min_loss: 0.2552 - accuracy: 0.3496 - val_loss: 2.1580 - val_smart_sqrt_abs_min_loss: 0.2469 - val_accuracy: 0.3488 - 179s/epoch - 656ms/step
Epoch 13/100
273/273 - 179s - loss: 2.1604 - smart_sqrt_abs_min_loss: 0.2396 - accuracy: 0.3750 - val_loss: 2.1890 - val_smart_sqrt_abs_min_loss: 0.2585 - val_accuracy: 0.3558 - 179s/epoch - 657ms/step
Epoch 14/100
273/273 - 179s - loss: 2.2006 - smart_sqrt_abs_min_loss: 0.2798 - accuracy: 0.3349 - val_loss: 2.1591 - val_smart_sqrt_abs_min_loss: 0.2480 - val_accuracy: 0.2994 - 179s/epoch - 655ms/step
Epoch 15/100
273/273 - 179s - loss: 2.1878 - smart_sqrt_abs_min_loss: 0.2670 - accuracy: 0.3528 - val_loss: 2.1658 - val_smart_sqrt_abs_min_loss: 0.2353 - val_accuracy: 0.3075 - 179s/epoch - 656ms/step
Epoch 16/100
273/273 - 179s - loss: 2.1947 - smart_sqrt_abs_min_loss: 0.2739 - accuracy: 0.3220 - val_loss: 2.1728 - val_smart_sqrt_abs_min_loss: 0.2617 - val_accuracy: 0.2782 - 179s/epoch - 656ms/step
Epoch 17/100
273/273 - 179s - loss: 2.1909 - smart_sqrt_abs_min_loss: 0.2701 - accuracy: 0.3649 - val_loss: 2.1651 - val_smart_sqrt_abs_min_loss: 0.2346 - val_accuracy: 0.3982 - 179s/epoch - 656ms/step
Epoch 18/100
273/273 - 179s - loss: 2.2241 - smart_sqrt_abs_min_loss: 0.3032 - accuracy: 0.3344 - val_loss: 2.1798 - val_smart_sqrt_abs_min_loss: 0.2687 - val_accuracy: 0.4204 - 179s/epoch - 656ms/step
Epoch 19/100
273/273 - 179s - loss: 2.2006 - smart_sqrt_abs_min_loss: 0.2799 - accuracy: 0.3487 - val_loss: 2.1885 - val_smart_sqrt_abs_min_loss: 0.2580 - val_accuracy: 0.4022 - 179s/epoch - 656ms/step
Epoch 20/100
273/273 - 179s - loss: 2.1909 - smart_sqrt_abs_min_loss: 0.2700 - accuracy: 0.3196 - val_loss: 2.1737 - val_smart_sqrt_abs_min_loss: 0.2626 - val_accuracy: 0.4143 - 179s/epoch - 656ms/step
Epoch 21/100
273/273 - 179s - loss: 2.2249 - smart_sqrt_abs_min_loss: 0.3041 - accuracy: 0.3155 - val_loss: 2.1922 - val_smart_sqrt_abs_min_loss: 0.2617 - val_accuracy: 0.4486 - 179s/epoch - 655ms/step
Epoch 22/100
273/273 - 179s - loss: 2.1766 - smart_sqrt_abs_min_loss: 0.2558 - accuracy: 0.3210 - val_loss: 2.1818 - val_smart_sqrt_abs_min_loss: 0.2707 - val_accuracy: 0.2631 - 179s/epoch - 656ms/step
Epoch 23/100
273/273 - 179s - loss: 2.2006 - smart_sqrt_abs_min_loss: 0.2798 - accuracy: 0.3328 - val_loss: 2.1639 - val_smart_sqrt_abs_min_loss: 0.2334 - val_accuracy: 0.2883 - 179s/epoch - 656ms/step
Epoch 24/100
273/273 - 179s - loss: 2.1644 - smart_sqrt_abs_min_loss: 0.2436 - accuracy: 0.3417 - val_loss: 2.1550 - val_smart_sqrt_abs_min_loss: 0.2439 - val_accuracy: 0.2046 - 179s/epoch - 656ms/step
Epoch 25/100
273/273 - 179s - loss: 2.1553 - smart_sqrt_abs_min_loss: 0.2345 - accuracy: 0.3654 - val_loss: 2.1644 - val_smart_sqrt_abs_min_loss: 0.2339 - val_accuracy: 0.3438 - 179s/epoch - 656ms/step
Epoch 26/100
273/273 - 179s - loss: 2.1793 - smart_sqrt_abs_min_loss: 0.2584 - accuracy: 0.3338 - val_loss: 2.1673 - val_smart_sqrt_abs_min_loss: 0.2562 - val_accuracy: 0.3427 - 179s/epoch - 656ms/step
Epoch 27/100
273/273 - 179s - loss: 2.1664 - smart_sqrt_abs_min_loss: 0.2457 - accuracy: 0.3851 - val_loss: 2.1638 - val_smart_sqrt_abs_min_loss: 0.2332 - val_accuracy: 0.3942 - 179s/epoch - 656ms/step
Epoch 28/100
273/273 - 179s - loss: 2.1910 - smart_sqrt_abs_min_loss: 0.2701 - accuracy: 0.3309 - val_loss: 2.1611 - val_smart_sqrt_abs_min_loss: 0.2500 - val_accuracy: 0.4083 - 179s/epoch - 656ms/step
Epoch 29/100
273/273 - 179s - loss: 2.1794 - smart_sqrt_abs_min_loss: 0.2587 - accuracy: 0.3332 - val_loss: 2.1720 - val_smart_sqrt_abs_min_loss: 0.2415 - val_accuracy: 0.5212 - 179s/epoch - 656ms/step
Epoch 30/100
273/273 - 179s - loss: 2.1630 - smart_sqrt_abs_min_loss: 0.2422 - accuracy: 0.3257 - val_loss: 2.1650 - val_smart_sqrt_abs_min_loss: 0.2539 - val_accuracy: 0.3327 - 179s/epoch - 656ms/step
Epoch 31/100
273/273 - 179s - loss: 2.1752 - smart_sqrt_abs_min_loss: 0.2544 - accuracy: 0.2995 - val_loss: 2.1905 - val_smart_sqrt_abs_min_loss: 0.2600 - val_accuracy: 0.3599 - 179s/epoch - 655ms/step
Epoch 32/100
273/273 - 179s - loss: 2.1642 - smart_sqrt_abs_min_loss: 0.2434 - accuracy: 0.3308 - val_loss: 2.1474 - val_smart_sqrt_abs_min_loss: 0.2363 - val_accuracy: 0.3034 - 179s/epoch - 655ms/step
Epoch 33/100
273/273 - 179s - loss: 2.1726 - smart_sqrt_abs_min_loss: 0.2518 - accuracy: 0.3264 - val_loss: 2.1792 - val_smart_sqrt_abs_min_loss: 0.2487 - val_accuracy: 0.1683 - 179s/epoch - 655ms/step
Epoch 34/100
273/273 - 179s - loss: 2.2040 - smart_sqrt_abs_min_loss: 0.2832 - accuracy: 0.3187 - val_loss: 2.1597 - val_smart_sqrt_abs_min_loss: 0.2486 - val_accuracy: 0.3478 - 179s/epoch - 655ms/step
Epoch 35/100
273/273 - 179s - loss: 2.1806 - smart_sqrt_abs_min_loss: 0.2599 - accuracy: 0.3359 - val_loss: 2.1711 - val_smart_sqrt_abs_min_loss: 0.2406 - val_accuracy: 0.2530 - 179s/epoch - 655ms/step
Epoch 36/100
273/273 - 179s - loss: 2.1767 - smart_sqrt_abs_min_loss: 0.2559 - accuracy: 0.3887 - val_loss: 2.2686 - val_smart_sqrt_abs_min_loss: 0.3575 - val_accuracy: 0.3911 - 179s/epoch - 655ms/step
Epoch 37/100
273/273 - 179s - loss: 2.1827 - smart_sqrt_abs_min_loss: 0.2619 - accuracy: 0.3536 - val_loss: 2.2568 - val_smart_sqrt_abs_min_loss: 0.3263 - val_accuracy: 0.2873 - 179s/epoch - 655ms/step
Epoch 38/100
273/273 - 179s - loss: 2.1800 - smart_sqrt_abs_min_loss: 0.2592 - accuracy: 0.3625 - val_loss: 2.1674 - val_smart_sqrt_abs_min_loss: 0.2563 - val_accuracy: 0.3841 - 179s/epoch - 656ms/step
Epoch 39/100
273/273 - 179s - loss: 2.1805 - smart_sqrt_abs_min_loss: 0.2598 - accuracy: 0.3377 - val_loss: 2.2530 - val_smart_sqrt_abs_min_loss: 0.3225 - val_accuracy: 0.3216 - 179s/epoch - 656ms/step
Epoch 40/100
273/273 - 179s - loss: 2.1902 - smart_sqrt_abs_min_loss: 0.2693 - accuracy: 0.3378 - val_loss: 2.1629 - val_smart_sqrt_abs_min_loss: 0.2518 - val_accuracy: 0.1623 - 179s/epoch - 654ms/step
Epoch 41/100
273/273 - 179s - loss: 2.1755 - smart_sqrt_abs_min_loss: 0.2547 - accuracy: 0.3299 - val_loss: 2.1729 - val_smart_sqrt_abs_min_loss: 0.2424 - val_accuracy: 0.3317 - 179s/epoch - 655ms/step
Epoch 42/100
273/273 - 179s - loss: 2.1846 - smart_sqrt_abs_min_loss: 0.2638 - accuracy: 0.3565 - val_loss: 2.1554 - val_smart_sqrt_abs_min_loss: 0.2443 - val_accuracy: 0.3367 - 179s/epoch - 656ms/step
Epoch 43/100
273/273 - 179s - loss: 2.1719 - smart_sqrt_abs_min_loss: 0.2512 - accuracy: 0.3707 - val_loss: 2.1860 - val_smart_sqrt_abs_min_loss: 0.2555 - val_accuracy: 0.2379 - 179s/epoch - 655ms/step
Epoch 44/100
273/273 - 179s - loss: 2.1766 - smart_sqrt_abs_min_loss: 0.2558 - accuracy: 0.3880 - val_loss: 2.1480 - val_smart_sqrt_abs_min_loss: 0.2369 - val_accuracy: 0.3115 - 179s/epoch - 656ms/step
Epoch 45/100
273/273 - 179s - loss: 2.1889 - smart_sqrt_abs_min_loss: 0.2682 - accuracy: 0.3045 - val_loss: 2.2069 - val_smart_sqrt_abs_min_loss: 0.2764 - val_accuracy: 0.2450 - 179s/epoch - 655ms/step
Epoch 46/100
273/273 - 179s - loss: 2.1861 - smart_sqrt_abs_min_loss: 0.2653 - accuracy: 0.3199 - val_loss: 2.1704 - val_smart_sqrt_abs_min_loss: 0.2593 - val_accuracy: 0.3266 - 179s/epoch - 655ms/step
Epoch 47/100
273/273 - 179s - loss: 2.1563 - smart_sqrt_abs_min_loss: 0.2355 - accuracy: 0.3576 - val_loss: 2.1975 - val_smart_sqrt_abs_min_loss: 0.2670 - val_accuracy: 0.3286 - 179s/epoch - 656ms/step
Epoch 48/100
273/273 - 179s - loss: 2.1656 - smart_sqrt_abs_min_loss: 0.2447 - accuracy: 0.3562 - val_loss: 2.1649 - val_smart_sqrt_abs_min_loss: 0.2538 - val_accuracy: 0.3659 - 179s/epoch - 657ms/step
Epoch 49/100
273/273 - 178s - loss: 2.1802 - smart_sqrt_abs_min_loss: 0.2594 - accuracy: 0.3748 - val_loss: 2.1822 - val_smart_sqrt_abs_min_loss: 0.2517 - val_accuracy: 0.3226 - 178s/epoch - 654ms/step
Epoch 50/100
273/273 - 179s - loss: 2.1916 - smart_sqrt_abs_min_loss: 0.2707 - accuracy: 0.3375 - val_loss: 2.1698 - val_smart_sqrt_abs_min_loss: 0.2587 - val_accuracy: 0.2056 - 179s/epoch - 656ms/step
Epoch 51/100
273/273 - 179s - loss: 2.1987 - smart_sqrt_abs_min_loss: 0.2779 - accuracy: 0.3394 - val_loss: 2.1518 - val_smart_sqrt_abs_min_loss: 0.2213 - val_accuracy: 0.3367 - 179s/epoch - 656ms/step
Epoch 52/100
273/273 - 179s - loss: 2.2149 - smart_sqrt_abs_min_loss: 0.2941 - accuracy: 0.3488 - val_loss: 2.1580 - val_smart_sqrt_abs_min_loss: 0.2469 - val_accuracy: 0.1613 - 179s/epoch - 655ms/step
Epoch 53/100
273/273 - 179s - loss: 2.1877 - smart_sqrt_abs_min_loss: 0.2669 - accuracy: 0.3647 - val_loss: 2.1797 - val_smart_sqrt_abs_min_loss: 0.2492 - val_accuracy: 0.4274 - 179s/epoch - 656ms/step
Epoch 54/100
273/273 - 179s - loss: 2.1991 - smart_sqrt_abs_min_loss: 0.2782 - accuracy: 0.3227 - val_loss: 2.1689 - val_smart_sqrt_abs_min_loss: 0.2578 - val_accuracy: 0.2913 - 179s/epoch - 655ms/step
Epoch 55/100
273/273 - 179s - loss: 2.1685 - smart_sqrt_abs_min_loss: 0.2477 - accuracy: 0.3171 - val_loss: 2.1938 - val_smart_sqrt_abs_min_loss: 0.2633 - val_accuracy: 0.2440 - 179s/epoch - 655ms/step
Epoch 56/100
273/273 - 179s - loss: 2.1771 - smart_sqrt_abs_min_loss: 0.2563 - accuracy: 0.3707 - val_loss: 2.1727 - val_smart_sqrt_abs_min_loss: 0.2616 - val_accuracy: 0.3317 - 179s/epoch - 656ms/step
Epoch 57/100
273/273 - 179s - loss: 2.1893 - smart_sqrt_abs_min_loss: 0.2685 - accuracy: 0.3175 - val_loss: 2.1952 - val_smart_sqrt_abs_min_loss: 0.2647 - val_accuracy: 0.4093 - 179s/epoch - 656ms/step
Epoch 58/100
273/273 - 179s - loss: 2.2111 - smart_sqrt_abs_min_loss: 0.2903 - accuracy: 0.3522 - val_loss: 2.1417 - val_smart_sqrt_abs_min_loss: 0.2306 - val_accuracy: 0.2944 - 179s/epoch - 655ms/step
Epoch 59/100
273/273 - 179s - loss: 2.1976 - smart_sqrt_abs_min_loss: 0.2768 - accuracy: 0.3210 - val_loss: 2.6026 - val_smart_sqrt_abs_min_loss: 0.6721 - val_accuracy: 0.4284 - 179s/epoch - 655ms/step
Epoch 60/100
273/273 - 179s - loss: 2.1758 - smart_sqrt_abs_min_loss: 0.2550 - accuracy: 0.3328 - val_loss: 2.1633 - val_smart_sqrt_abs_min_loss: 0.2522 - val_accuracy: 0.3185 - 179s/epoch - 655ms/step
Epoch 61/100
273/273 - 179s - loss: 2.1617 - smart_sqrt_abs_min_loss: 0.2409 - accuracy: 0.3429 - val_loss: 2.1829 - val_smart_sqrt_abs_min_loss: 0.2524 - val_accuracy: 0.2772 - 179s/epoch - 655ms/step
Epoch 62/100
273/273 - 179s - loss: 2.1719 - smart_sqrt_abs_min_loss: 0.2510 - accuracy: 0.3747 - val_loss: 2.1391 - val_smart_sqrt_abs_min_loss: 0.2280 - val_accuracy: 0.3942 - 179s/epoch - 655ms/step
Epoch 63/100
273/273 - 179s - loss: 2.1706 - smart_sqrt_abs_min_loss: 0.2498 - accuracy: 0.3447 - val_loss: 2.1304 - val_smart_sqrt_abs_min_loss: 0.1999 - val_accuracy: 0.3216 - 179s/epoch - 655ms/step
Epoch 64/100
273/273 - 179s - loss: 2.1752 - smart_sqrt_abs_min_loss: 0.2544 - accuracy: 0.3359 - val_loss: 2.1612 - val_smart_sqrt_abs_min_loss: 0.2501 - val_accuracy: 0.4698 - 179s/epoch - 655ms/step
Epoch 65/100
273/273 - 179s - loss: 2.1991 - smart_sqrt_abs_min_loss: 0.2784 - accuracy: 0.2921 - val_loss: 2.1948 - val_smart_sqrt_abs_min_loss: 0.2642 - val_accuracy: 0.2329 - 179s/epoch - 656ms/step
Epoch 66/100
273/273 - 179s - loss: 2.1667 - smart_sqrt_abs_min_loss: 0.2459 - accuracy: 0.3369 - val_loss: 2.1712 - val_smart_sqrt_abs_min_loss: 0.2601 - val_accuracy: 0.2601 - 179s/epoch - 654ms/step
Epoch 67/100
273/273 - 179s - loss: 2.1785 - smart_sqrt_abs_min_loss: 0.2577 - accuracy: 0.3443 - val_loss: 2.1863 - val_smart_sqrt_abs_min_loss: 0.2558 - val_accuracy: 0.3306 - 179s/epoch - 656ms/step
Epoch 68/100
273/273 - 179s - loss: 2.1758 - smart_sqrt_abs_min_loss: 0.2550 - accuracy: 0.3262 - val_loss: 2.1510 - val_smart_sqrt_abs_min_loss: 0.2399 - val_accuracy: 0.3286 - 179s/epoch - 655ms/step
Epoch 69/100
273/273 - 179s - loss: 2.2414 - smart_sqrt_abs_min_loss: 0.3207 - accuracy: 0.3167 - val_loss: 2.5919 - val_smart_sqrt_abs_min_loss: 0.6614 - val_accuracy: 0.4657 - 179s/epoch - 657ms/step
Epoch 70/100
273/273 - 179s - loss: 2.1887 - smart_sqrt_abs_min_loss: 0.2678 - accuracy: 0.3536 - val_loss: 2.1586 - val_smart_sqrt_abs_min_loss: 0.2475 - val_accuracy: 0.4002 - 179s/epoch - 656ms/step
Epoch 71/100
273/273 - 179s - loss: 2.1840 - smart_sqrt_abs_min_loss: 0.2633 - accuracy: 0.3436 - val_loss: 2.1782 - val_smart_sqrt_abs_min_loss: 0.2477 - val_accuracy: 0.2722 - 179s/epoch - 656ms/step
Epoch 72/100
273/273 - 179s - loss: 2.1628 - smart_sqrt_abs_min_loss: 0.2420 - accuracy: 0.3585 - val_loss: 2.1558 - val_smart_sqrt_abs_min_loss: 0.2447 - val_accuracy: 0.3256 - 179s/epoch - 655ms/step
Epoch 73/100
273/273 - 179s - loss: 2.1617 - smart_sqrt_abs_min_loss: 0.2409 - accuracy: 0.3605 - val_loss: 2.2071 - val_smart_sqrt_abs_min_loss: 0.2766 - val_accuracy: 0.3690 - 179s/epoch - 656ms/step
Epoch 74/100
273/273 - 179s - loss: 2.1968 - smart_sqrt_abs_min_loss: 0.2759 - accuracy: 0.3159 - val_loss: 2.1509 - val_smart_sqrt_abs_min_loss: 0.2398 - val_accuracy: 0.2873 - 179s/epoch - 655ms/step
Epoch 75/100
273/273 - 179s - loss: 2.1925 - smart_sqrt_abs_min_loss: 0.2718 - accuracy: 0.3546 - val_loss: 2.6079 - val_smart_sqrt_abs_min_loss: 0.6774 - val_accuracy: 0.2913 - 179s/epoch - 655ms/step
Epoch 76/100
273/273 - 179s - loss: 2.1699 - smart_sqrt_abs_min_loss: 0.2490 - accuracy: 0.3810 - val_loss: 2.1570 - val_smart_sqrt_abs_min_loss: 0.2459 - val_accuracy: 0.3427 - 179s/epoch - 655ms/step
Epoch 77/100
273/273 - 179s - loss: 2.2019 - smart_sqrt_abs_min_loss: 0.2811 - accuracy: 0.3198 - val_loss: 2.5813 - val_smart_sqrt_abs_min_loss: 0.6508 - val_accuracy: 0.4012 - 179s/epoch - 655ms/step
Epoch 78/100
273/273 - 179s - loss: 2.1865 - smart_sqrt_abs_min_loss: 0.2656 - accuracy: 0.3783 - val_loss: 2.1713 - val_smart_sqrt_abs_min_loss: 0.2602 - val_accuracy: 0.3810 - 179s/epoch - 656ms/step
Epoch 79/100
273/273 - 179s - loss: 2.1752 - smart_sqrt_abs_min_loss: 0.2544 - accuracy: 0.3481 - val_loss: 2.1970 - val_smart_sqrt_abs_min_loss: 0.2665 - val_accuracy: 0.3589 - 179s/epoch - 655ms/step
Epoch 80/100
273/273 - 179s - loss: 2.2040 - smart_sqrt_abs_min_loss: 0.2832 - accuracy: 0.3039 - val_loss: 2.1559 - val_smart_sqrt_abs_min_loss: 0.2448 - val_accuracy: 0.4304 - 179s/epoch - 655ms/step
Epoch 81/100
273/273 - 179s - loss: 2.1735 - smart_sqrt_abs_min_loss: 0.2527 - accuracy: 0.3266 - val_loss: 2.1832 - val_smart_sqrt_abs_min_loss: 0.2527 - val_accuracy: 0.2893 - 179s/epoch - 656ms/step
Epoch 82/100
273/273 - 179s - loss: 2.1735 - smart_sqrt_abs_min_loss: 0.2527 - accuracy: 0.3357 - val_loss: 2.1562 - val_smart_sqrt_abs_min_loss: 0.2451 - val_accuracy: 0.4315 - 179s/epoch - 655ms/step
Epoch 83/100
273/273 - 179s - loss: 2.2217 - smart_sqrt_abs_min_loss: 0.3009 - accuracy: 0.2973 - val_loss: 2.1806 - val_smart_sqrt_abs_min_loss: 0.2501 - val_accuracy: 0.2792 - 179s/epoch - 654ms/step
Epoch 84/100
273/273 - 179s - loss: 2.2305 - smart_sqrt_abs_min_loss: 0.3097 - accuracy: 0.3164 - val_loss: 2.1590 - val_smart_sqrt_abs_min_loss: 0.2479 - val_accuracy: 0.2823 - 179s/epoch - 656ms/step
Epoch 85/100
273/273 - 179s - loss: 2.1765 - smart_sqrt_abs_min_loss: 0.2557 - accuracy: 0.3481 - val_loss: 2.1926 - val_smart_sqrt_abs_min_loss: 0.2621 - val_accuracy: 0.3669 - 179s/epoch - 656ms/step
Epoch 86/100
273/273 - 178s - loss: 2.1796 - smart_sqrt_abs_min_loss: 0.2588 - accuracy: 0.3098 - val_loss: 2.1672 - val_smart_sqrt_abs_min_loss: 0.2561 - val_accuracy: 0.2853 - 178s/epoch - 654ms/step
Epoch 87/100
273/273 - 179s - loss: 2.1927 - smart_sqrt_abs_min_loss: 0.2719 - accuracy: 0.3128 - val_loss: 2.1865 - val_smart_sqrt_abs_min_loss: 0.2560 - val_accuracy: 0.2440 - 179s/epoch - 655ms/step
Epoch 88/100
273/273 - 179s - loss: 2.2393 - smart_sqrt_abs_min_loss: 0.3185 - accuracy: 0.3534 - val_loss: 2.1711 - val_smart_sqrt_abs_min_loss: 0.2600 - val_accuracy: 0.3982 - 179s/epoch - 655ms/step
Epoch 89/100
273/273 - 179s - loss: 2.1798 - smart_sqrt_abs_min_loss: 0.2590 - accuracy: 0.3159 - val_loss: 2.1937 - val_smart_sqrt_abs_min_loss: 0.2632 - val_accuracy: 0.2974 - 179s/epoch - 654ms/step
Epoch 90/100
273/273 - 179s - loss: 2.2006 - smart_sqrt_abs_min_loss: 0.2798 - accuracy: 0.3266 - val_loss: 2.1287 - val_smart_sqrt_abs_min_loss: 0.2176 - val_accuracy: 0.3679 - 179s/epoch - 655ms/step
Epoch 91/100
273/273 - 179s - loss: 2.1651 - smart_sqrt_abs_min_loss: 0.2444 - accuracy: 0.3758 - val_loss: 2.2033 - val_smart_sqrt_abs_min_loss: 0.2728 - val_accuracy: 0.3024 - 179s/epoch - 655ms/step
Epoch 92/100
273/273 - 179s - loss: 2.1787 - smart_sqrt_abs_min_loss: 0.2579 - accuracy: 0.3547 - val_loss: 2.1663 - val_smart_sqrt_abs_min_loss: 0.2552 - val_accuracy: 0.3800 - 179s/epoch - 655ms/step
Epoch 93/100
273/273 - 178s - loss: 2.1712 - smart_sqrt_abs_min_loss: 0.2505 - accuracy: 0.3783 - val_loss: 2.1820 - val_smart_sqrt_abs_min_loss: 0.2515 - val_accuracy: 0.3397 - 178s/epoch - 654ms/step
Epoch 94/100
273/273 - 179s - loss: 2.1674 - smart_sqrt_abs_min_loss: 0.2465 - accuracy: 0.3071 - val_loss: 2.1579 - val_smart_sqrt_abs_min_loss: 0.2468 - val_accuracy: 0.4365 - 179s/epoch - 655ms/step
Epoch 95/100
273/273 - 179s - loss: 2.1610 - smart_sqrt_abs_min_loss: 0.2403 - accuracy: 0.3848 - val_loss: 2.1732 - val_smart_sqrt_abs_min_loss: 0.2427 - val_accuracy: 0.3911 - 179s/epoch - 656ms/step
Epoch 96/100
273/273 - 179s - loss: 2.1707 - smart_sqrt_abs_min_loss: 0.2498 - accuracy: 0.3482 - val_loss: 2.1661 - val_smart_sqrt_abs_min_loss: 0.2550 - val_accuracy: 0.3256 - 179s/epoch - 656ms/step
Epoch 97/100
273/273 - 179s - loss: 2.2103 - smart_sqrt_abs_min_loss: 0.2895 - accuracy: 0.2989 - val_loss: 2.1673 - val_smart_sqrt_abs_min_loss: 0.2368 - val_accuracy: 0.3790 - 179s/epoch - 655ms/step
Epoch 98/100
273/273 - 179s - loss: 2.1749 - smart_sqrt_abs_min_loss: 0.2540 - accuracy: 0.3506 - val_loss: 2.1431 - val_smart_sqrt_abs_min_loss: 0.2320 - val_accuracy: 0.2954 - 179s/epoch - 655ms/step
Epoch 99/100
273/273 - 179s - loss: 2.1619 - smart_sqrt_abs_min_loss: 0.2411 - accuracy: 0.3589 - val_loss: 2.1602 - val_smart_sqrt_abs_min_loss: 0.2297 - val_accuracy: 0.2692 - 179s/epoch - 655ms/step
Epoch 100/100
User defined signal 2

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232387: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:45 2023
Job was executed on host(s) <4*n-62-11-14>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Tue Jan 24 06:38:48 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Tue Jan 24 06:38:48 2023
Terminated at Tue Jan 24 11:37:57 2023
Results reported at Tue Jan 24 11:37:57 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_smart_sqrt_abs_min_loss_0002_model_j_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.002)" "smart_sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_smart_sqrt_abs_min_loss_0002_model_j_" "iter6" "load_model_j"

    
------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   23278.00 sec.
    Max Memory :                                 3015 MB
    Average Memory :                             2890.58 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17465.00 MB
    Max Swap :                                   2 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   18052 sec.
    Turnaround time :                            169512 sec.

The output (if any) is above this job summary.

