Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-23 00:46:45.392044: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 00:46:48.008696: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 00:46:48.009275: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 00:46:48.009288: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-23 00:46:51.905411: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 00:46:53.061105: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:58:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_00005_model_f_
Output folder:  iter6
Model name:  load_model_f
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=16, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=16, kernel_size=7, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=16, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=16, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(128, activation="relu", kernel_regularizer=keras.regularizers.L1L2(0.01))(x)
        x = layers.Dense(16, activation="sigmoid", kernel_regularizer=keras.regularizers.L1L2(0.01))(x) 
        outputs = layers.Dense(3)(x)

        model = keras.Model(inputs=inputs, outputs=outputs)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 16)      1952      
                                                                 
 conv2d_1 (Conv2D)           (None, 484, 484, 16)      12560     
                                                                 
 max_pooling2d (MaxPooling2D  (None, 242, 242, 16)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 238, 238, 16)      6416      
                                                                 
 conv2d_3 (Conv2D)           (None, 236, 236, 16)      2320      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 118, 118, 16)     0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 116, 116, 16)      2320      
                                                                 
 conv2d_5 (Conv2D)           (None, 114, 114, 16)      2320      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 57, 57, 16)       0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 55, 55, 16)        2320      
                                                                 
 conv2d_7 (Conv2D)           (None, 53, 53, 16)        2320      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 26, 26, 16)       0         
 2D)                                                             
                                                                 
 conv2d_8 (Conv2D)           (None, 24, 24, 16)        2320      
                                                                 
 conv2d_9 (Conv2D)           (None, 22, 22, 16)        2320      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 11, 11, 16)       0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1936)              0         
                                                                 
 dense (Dense)               (None, 128)               247936    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 287,219
Trainable params: 287,219
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-23 00:46:56.843013: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 74s - loss: 8.9721 - sqrt_abs_min_loss: 0.4583 - accuracy: 0.2849 - val_loss: 1.2801 - val_sqrt_abs_min_loss: 0.4913 - val_accuracy: 0.3558 - 74s/epoch - 270ms/step
Epoch 2/100
273/273 - 68s - loss: 1.0985 - sqrt_abs_min_loss: 0.4746 - accuracy: 0.3347 - val_loss: 1.0444 - val_sqrt_abs_min_loss: 0.4536 - val_accuracy: 0.2792 - 68s/epoch - 251ms/step
Epoch 3/100
273/273 - 69s - loss: 1.0495 - sqrt_abs_min_loss: 0.4560 - accuracy: 0.3569 - val_loss: 1.0689 - val_sqrt_abs_min_loss: 0.4726 - val_accuracy: 0.4204 - 69s/epoch - 253ms/step
Epoch 4/100
273/273 - 68s - loss: 1.0659 - sqrt_abs_min_loss: 0.4708 - accuracy: 0.2968 - val_loss: 1.0823 - val_sqrt_abs_min_loss: 0.4890 - val_accuracy: 0.3528 - 68s/epoch - 251ms/step
Epoch 5/100
273/273 - 68s - loss: 1.0622 - sqrt_abs_min_loss: 0.4669 - accuracy: 0.3068 - val_loss: 1.0940 - val_sqrt_abs_min_loss: 0.4965 - val_accuracy: 0.4274 - 68s/epoch - 249ms/step
Epoch 6/100
273/273 - 68s - loss: 1.0673 - sqrt_abs_min_loss: 0.4717 - accuracy: 0.3703 - val_loss: 1.0538 - val_sqrt_abs_min_loss: 0.4603 - val_accuracy: 0.2540 - 68s/epoch - 251ms/step
Epoch 7/100
273/273 - 68s - loss: 1.0636 - sqrt_abs_min_loss: 0.4678 - accuracy: 0.3503 - val_loss: 1.0786 - val_sqrt_abs_min_loss: 0.4805 - val_accuracy: 0.4516 - 68s/epoch - 250ms/step
Epoch 8/100
273/273 - 68s - loss: 1.0638 - sqrt_abs_min_loss: 0.4680 - accuracy: 0.2917 - val_loss: 1.0617 - val_sqrt_abs_min_loss: 0.4681 - val_accuracy: 0.3962 - 68s/epoch - 248ms/step
Epoch 9/100
273/273 - 68s - loss: 1.0607 - sqrt_abs_min_loss: 0.4649 - accuracy: 0.2948 - val_loss: 1.0527 - val_sqrt_abs_min_loss: 0.4546 - val_accuracy: 0.3266 - 68s/epoch - 250ms/step
Epoch 10/100
273/273 - 66s - loss: 1.0564 - sqrt_abs_min_loss: 0.4606 - accuracy: 0.3151 - val_loss: 1.0706 - val_sqrt_abs_min_loss: 0.4768 - val_accuracy: 0.4486 - 66s/epoch - 240ms/step
Epoch 11/100
273/273 - 68s - loss: 1.0538 - sqrt_abs_min_loss: 0.4579 - accuracy: 0.3040 - val_loss: 1.0454 - val_sqrt_abs_min_loss: 0.4473 - val_accuracy: 0.3720 - 68s/epoch - 251ms/step
Epoch 12/100
273/273 - 68s - loss: 1.0596 - sqrt_abs_min_loss: 0.4637 - accuracy: 0.3040 - val_loss: 1.0500 - val_sqrt_abs_min_loss: 0.4564 - val_accuracy: 0.3286 - 68s/epoch - 250ms/step
Epoch 13/100
273/273 - 69s - loss: 1.0587 - sqrt_abs_min_loss: 0.4629 - accuracy: 0.3190 - val_loss: 1.0780 - val_sqrt_abs_min_loss: 0.4800 - val_accuracy: 0.3700 - 69s/epoch - 252ms/step
Epoch 14/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3459 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3206 - 68s/epoch - 251ms/step
Epoch 15/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3155 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3458 - 68s/epoch - 248ms/step
Epoch 16/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3418 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3054 - 68s/epoch - 249ms/step
Epoch 17/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3207 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3972 - 68s/epoch - 250ms/step
Epoch 18/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3174 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3740 - 68s/epoch - 249ms/step
Epoch 19/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3040 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4526 - 68s/epoch - 250ms/step
Epoch 20/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3069 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3659 - 68s/epoch - 249ms/step
Epoch 21/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3370 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3458 - 67s/epoch - 244ms/step
Epoch 22/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3146 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4224 - 68s/epoch - 250ms/step
Epoch 23/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3522 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2692 - 68s/epoch - 248ms/step
Epoch 24/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2846 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3357 - 67s/epoch - 245ms/step
Epoch 25/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3363 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2661 - 68s/epoch - 249ms/step
Epoch 26/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3756 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3155 - 68s/epoch - 249ms/step
Epoch 27/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3400 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.1573 - 68s/epoch - 249ms/step
Epoch 28/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3001 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3649 - 68s/epoch - 249ms/step
Epoch 29/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3531 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3054 - 68s/epoch - 249ms/step
Epoch 30/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3404 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2460 - 68s/epoch - 249ms/step
Epoch 31/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2984 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4022 - 67s/epoch - 246ms/step
Epoch 32/100
273/273 - 66s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3059 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3095 - 66s/epoch - 241ms/step
Epoch 33/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3312 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3286 - 67s/epoch - 244ms/step
Epoch 34/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3009 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3931 - 67s/epoch - 246ms/step
Epoch 35/100
273/273 - 69s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3299 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3175 - 69s/epoch - 251ms/step
Epoch 36/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3133 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3387 - 67s/epoch - 244ms/step
Epoch 37/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3166 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2530 - 67s/epoch - 246ms/step
Epoch 38/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2824 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3357 - 68s/epoch - 250ms/step
Epoch 39/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3342 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2218 - 67s/epoch - 246ms/step
Epoch 40/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3541 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3942 - 68s/epoch - 248ms/step
Epoch 41/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3156 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2893 - 68s/epoch - 250ms/step
Epoch 42/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3389 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 68s/epoch - 249ms/step
Epoch 43/100
273/273 - 66s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2814 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3367 - 66s/epoch - 243ms/step
Epoch 44/100
273/273 - 66s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3579 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3367 - 66s/epoch - 243ms/step
Epoch 45/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3652 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2984 - 67s/epoch - 244ms/step
Epoch 46/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3291 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3780 - 67s/epoch - 244ms/step
Epoch 47/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3039 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2389 - 68s/epoch - 250ms/step
Epoch 48/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2847 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3256 - 68s/epoch - 250ms/step
Epoch 49/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3064 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2167 - 67s/epoch - 247ms/step
Epoch 50/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3101 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3185 - 67s/epoch - 244ms/step
Epoch 51/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3065 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3790 - 68s/epoch - 251ms/step
Epoch 52/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3270 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3931 - 68s/epoch - 248ms/step
Epoch 53/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2978 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2833 - 68s/epoch - 248ms/step
Epoch 54/100
273/273 - 69s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3565 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3558 - 69s/epoch - 252ms/step
Epoch 55/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3703 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3498 - 68s/epoch - 248ms/step
Epoch 56/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3022 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3569 - 67s/epoch - 244ms/step
Epoch 57/100
273/273 - 66s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3460 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4526 - 66s/epoch - 243ms/step
Epoch 58/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3265 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3518 - 67s/epoch - 247ms/step
Epoch 59/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3370 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4214 - 68s/epoch - 248ms/step
Epoch 60/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3060 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2298 - 68s/epoch - 247ms/step
Epoch 61/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3720 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3145 - 68s/epoch - 250ms/step
Epoch 62/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3552 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2964 - 68s/epoch - 249ms/step
Epoch 63/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3197 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3115 - 68s/epoch - 249ms/step
Epoch 64/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3269 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2540 - 68s/epoch - 248ms/step
Epoch 65/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3601 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3599 - 68s/epoch - 249ms/step
Epoch 66/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3160 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3387 - 68s/epoch - 249ms/step
Epoch 67/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3542 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3125 - 68s/epoch - 248ms/step
Epoch 68/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3196 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 68s/epoch - 248ms/step
Epoch 69/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3826 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2036 - 68s/epoch - 248ms/step
Epoch 70/100
273/273 - 63s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3139 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3992 - 63s/epoch - 231ms/step
Epoch 71/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3189 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3679 - 68s/epoch - 250ms/step
Epoch 72/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3484 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3972 - 68s/epoch - 251ms/step
Epoch 73/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3118 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2762 - 68s/epoch - 248ms/step
Epoch 74/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3048 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4728 - 68s/epoch - 250ms/step
Epoch 75/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3679 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4002 - 68s/epoch - 248ms/step
Epoch 76/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3092 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4264 - 68s/epoch - 248ms/step
Epoch 77/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3648 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4315 - 67s/epoch - 247ms/step
Epoch 78/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2925 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3821 - 68s/epoch - 249ms/step
Epoch 79/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3254 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3125 - 67s/epoch - 245ms/step
Epoch 80/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3241 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3700 - 67s/epoch - 247ms/step
Epoch 81/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2969 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3397 - 68s/epoch - 249ms/step
Epoch 82/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3055 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2177 - 68s/epoch - 250ms/step
Epoch 83/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3273 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2843 - 68s/epoch - 250ms/step
Epoch 84/100
273/273 - 64s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3858 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3690 - 64s/epoch - 234ms/step
Epoch 85/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3272 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3669 - 67s/epoch - 245ms/step
Epoch 86/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3464 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3216 - 68s/epoch - 248ms/step
Epoch 87/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2974 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2853 - 68s/epoch - 249ms/step
Epoch 88/100
273/273 - 69s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3025 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4506 - 69s/epoch - 251ms/step
Epoch 89/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3258 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3558 - 67s/epoch - 246ms/step
Epoch 90/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3062 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3014 - 68s/epoch - 249ms/step
Epoch 91/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3061 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4214 - 68s/epoch - 248ms/step
Epoch 92/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3389 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4425 - 68s/epoch - 248ms/step
Epoch 93/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3639 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2510 - 68s/epoch - 249ms/step
Epoch 94/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3054 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2571 - 68s/epoch - 249ms/step
Epoch 95/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3293 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3730 - 68s/epoch - 247ms/step
Epoch 96/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3134 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4325 - 68s/epoch - 250ms/step
Epoch 97/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3504 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3942 - 68s/epoch - 249ms/step
Epoch 98/100
273/273 - 68s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2758 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4052 - 68s/epoch - 249ms/step
Epoch 99/100
273/273 - 66s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3423 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 66s/epoch - 242ms/step
Epoch 100/100
273/273 - 67s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2771 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2460 - 67s/epoch - 245ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 262ms/step
predicted values [[nan nan nan]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 18ms/step
predicted values [[nan nan nan]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 20ms/step
predicted values [[nan nan nan]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 17ms/step
predicted values [[nan nan nan]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 18ms/step
predicted values [[nan nan nan]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 18ms/step
predicted values [[nan nan nan]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 18ms/step
predicted values [[nan nan nan]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 17ms/step
predicted values [[nan nan nan]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 17ms/step
predicted values [[nan nan nan]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 18ms/step
predicted values [[nan nan nan]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 8s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 2/31 [>.............................] - ETA: 6s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 3/31 [=>............................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 4/31 [==>...........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1953 5/31 [===>..........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2000 6/31 [====>.........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1979 7/31 [=====>........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2009 8/31 [======>.......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1992 9/31 [=======>......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.201410/31 [========>.....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.206211/31 [=========>....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.210212/31 [==========>...................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.213513/31 [===========>..................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.216314/31 [============>.................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.218815/31 [=============>................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.220816/31 [==============>...............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.224617/31 [===============>..............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.226118/31 [================>.............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.227419/31 [=================>............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.230320/31 [==================>...........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.232821/31 [===================>..........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.235122/31 [====================>.........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.238623/31 [=====================>........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.243224/31 [======================>.......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.247425/31 [=======================>......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.251226/31 [========================>.....] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.254827/31 [=========================>....] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.256928/31 [==========================>...] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.258929/31 [===========================>..] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.261930/31 [============================>.] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.264631/31 [==============================] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.267131/31 [==============================] - 7s 216ms/step - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2671
test loss, test acc: [nan, nan, 0.2671371102333069]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232348: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:35 2023
Job was executed on host(s) <4*n-62-20-16>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Mon Jan 23 00:46:42 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Mon Jan 23 00:46:42 2023
Terminated at Mon Jan 23 02:39:54 2023
Results reported at Mon Jan 23 02:39:54 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_00005_model_f_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.0005)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_00005_model_f_" "iter6" "load_model_f"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   9284.94 sec.
    Max Memory :                                 2939 MB
    Average Memory :                             2859.64 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17541.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   6794 sec.
    Turnaround time :                            50839 sec.

The output (if any) is above this job summary.

