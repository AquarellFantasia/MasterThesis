Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-22 15:44:37.191800: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-22 15:44:38.632819: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-22 15:44:38.633400: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-22 15:44:38.633413: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-22 15:44:41.481816: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-22 15:44:42.147533: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30960 MB memory:  -> device: 0, name: Tesla V100-PCIE-32GB, pci bus id: 0000:58:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.0005)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_00005_model_i_
Output folder:  iter6
Model name:  load_model_i
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(210, activation="relu")(x)
        x = layers.Dense(32, activation="sigmoid")(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-22 15:44:45.678627: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 201s - loss: 0.4624 - sqrt_abs_min_loss: 0.4624 - accuracy: 0.3138 - val_loss: 0.4919 - val_sqrt_abs_min_loss: 0.4919 - val_accuracy: 0.2923 - 201s/epoch - 735ms/step
Epoch 2/100
273/273 - 177s - loss: 0.4665 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.3553 - val_loss: 0.4757 - val_sqrt_abs_min_loss: 0.4757 - val_accuracy: 0.3528 - 177s/epoch - 650ms/step
Epoch 3/100
273/273 - 177s - loss: 0.4617 - sqrt_abs_min_loss: 0.4617 - accuracy: 0.3033 - val_loss: 0.4589 - val_sqrt_abs_min_loss: 0.4589 - val_accuracy: 0.3306 - 177s/epoch - 650ms/step
Epoch 4/100
273/273 - 177s - loss: 0.4613 - sqrt_abs_min_loss: 0.4613 - accuracy: 0.3238 - val_loss: 0.4576 - val_sqrt_abs_min_loss: 0.4576 - val_accuracy: 0.4143 - 177s/epoch - 649ms/step
Epoch 5/100
273/273 - 177s - loss: 0.4612 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3528 - val_loss: 0.5068 - val_sqrt_abs_min_loss: 0.5068 - val_accuracy: 0.4506 - 177s/epoch - 647ms/step
Epoch 6/100
273/273 - 177s - loss: 0.4628 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.3293 - val_loss: 0.4653 - val_sqrt_abs_min_loss: 0.4653 - val_accuracy: 0.3982 - 177s/epoch - 648ms/step
Epoch 7/100
273/273 - 177s - loss: 0.4740 - sqrt_abs_min_loss: 0.4740 - accuracy: 0.3457 - val_loss: 0.4595 - val_sqrt_abs_min_loss: 0.4595 - val_accuracy: 0.3075 - 177s/epoch - 648ms/step
Epoch 8/100
273/273 - 177s - loss: 0.4665 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.3467 - val_loss: 0.4688 - val_sqrt_abs_min_loss: 0.4688 - val_accuracy: 0.5171 - 177s/epoch - 647ms/step
Epoch 9/100
273/273 - 177s - loss: 0.4625 - sqrt_abs_min_loss: 0.4625 - accuracy: 0.3901 - val_loss: 0.4775 - val_sqrt_abs_min_loss: 0.4775 - val_accuracy: 0.2389 - 177s/epoch - 647ms/step
Epoch 10/100
273/273 - 177s - loss: 0.4636 - sqrt_abs_min_loss: 0.4636 - accuracy: 0.3827 - val_loss: 0.4671 - val_sqrt_abs_min_loss: 0.4671 - val_accuracy: 0.2923 - 177s/epoch - 647ms/step
Epoch 11/100
273/273 - 177s - loss: 0.4611 - sqrt_abs_min_loss: 0.4611 - accuracy: 0.3598 - val_loss: 0.4899 - val_sqrt_abs_min_loss: 0.4899 - val_accuracy: 0.2560 - 177s/epoch - 647ms/step
Epoch 12/100
273/273 - 180s - loss: 0.4624 - sqrt_abs_min_loss: 0.4624 - accuracy: 0.3642 - val_loss: 0.4839 - val_sqrt_abs_min_loss: 0.4839 - val_accuracy: 0.2903 - 180s/epoch - 659ms/step
Epoch 13/100
273/273 - 176s - loss: 0.4615 - sqrt_abs_min_loss: 0.4615 - accuracy: 0.3383 - val_loss: 0.4801 - val_sqrt_abs_min_loss: 0.4801 - val_accuracy: 0.3034 - 176s/epoch - 647ms/step
Epoch 14/100
273/273 - 177s - loss: 0.4622 - sqrt_abs_min_loss: 0.4622 - accuracy: 0.2951 - val_loss: 0.4776 - val_sqrt_abs_min_loss: 0.4776 - val_accuracy: 0.2994 - 177s/epoch - 647ms/step
Epoch 15/100
273/273 - 177s - loss: 0.4667 - sqrt_abs_min_loss: 0.4667 - accuracy: 0.3499 - val_loss: 0.4503 - val_sqrt_abs_min_loss: 0.4503 - val_accuracy: 0.3810 - 177s/epoch - 647ms/step
Epoch 16/100
273/273 - 177s - loss: 0.4638 - sqrt_abs_min_loss: 0.4638 - accuracy: 0.3428 - val_loss: 0.4770 - val_sqrt_abs_min_loss: 0.4770 - val_accuracy: 0.3861 - 177s/epoch - 647ms/step
Epoch 17/100
273/273 - 177s - loss: 0.4663 - sqrt_abs_min_loss: 0.4663 - accuracy: 0.3347 - val_loss: 0.4665 - val_sqrt_abs_min_loss: 0.4665 - val_accuracy: 0.3246 - 177s/epoch - 647ms/step
Epoch 18/100
273/273 - 177s - loss: 0.4631 - sqrt_abs_min_loss: 0.4631 - accuracy: 0.3615 - val_loss: 0.4670 - val_sqrt_abs_min_loss: 0.4670 - val_accuracy: 0.3407 - 177s/epoch - 647ms/step
Epoch 19/100
273/273 - 176s - loss: 0.4658 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.3273 - val_loss: 0.4877 - val_sqrt_abs_min_loss: 0.4877 - val_accuracy: 0.3548 - 176s/epoch - 646ms/step
Epoch 20/100
273/273 - 177s - loss: 0.4670 - sqrt_abs_min_loss: 0.4670 - accuracy: 0.3474 - val_loss: 0.4532 - val_sqrt_abs_min_loss: 0.4532 - val_accuracy: 0.3438 - 177s/epoch - 648ms/step
Epoch 21/100
273/273 - 177s - loss: 0.4637 - sqrt_abs_min_loss: 0.4637 - accuracy: 0.3333 - val_loss: 0.4743 - val_sqrt_abs_min_loss: 0.4743 - val_accuracy: 0.2036 - 177s/epoch - 647ms/step
Epoch 22/100
273/273 - 177s - loss: 0.4667 - sqrt_abs_min_loss: 0.4667 - accuracy: 0.3177 - val_loss: 0.4836 - val_sqrt_abs_min_loss: 0.4836 - val_accuracy: 0.2782 - 177s/epoch - 647ms/step
Epoch 23/100
273/273 - 177s - loss: 0.4600 - sqrt_abs_min_loss: 0.4600 - accuracy: 0.3276 - val_loss: 0.4717 - val_sqrt_abs_min_loss: 0.4717 - val_accuracy: 0.4103 - 177s/epoch - 647ms/step
Epoch 24/100
273/273 - 177s - loss: 0.4612 - sqrt_abs_min_loss: 0.4612 - accuracy: 0.3132 - val_loss: 0.4960 - val_sqrt_abs_min_loss: 0.4960 - val_accuracy: 0.4637 - 177s/epoch - 648ms/step
Epoch 25/100
273/273 - 177s - loss: 0.4575 - sqrt_abs_min_loss: 0.4575 - accuracy: 0.3143 - val_loss: 0.4780 - val_sqrt_abs_min_loss: 0.4780 - val_accuracy: 0.3992 - 177s/epoch - 647ms/step
Epoch 26/100
273/273 - 177s - loss: 0.4524 - sqrt_abs_min_loss: 0.4524 - accuracy: 0.3610 - val_loss: 0.4702 - val_sqrt_abs_min_loss: 0.4702 - val_accuracy: 0.2661 - 177s/epoch - 647ms/step
Epoch 27/100
273/273 - 177s - loss: 0.4556 - sqrt_abs_min_loss: 0.4556 - accuracy: 0.3945 - val_loss: 0.4868 - val_sqrt_abs_min_loss: 0.4868 - val_accuracy: 0.3659 - 177s/epoch - 647ms/step
Epoch 28/100
273/273 - 177s - loss: 0.4639 - sqrt_abs_min_loss: 0.4639 - accuracy: 0.3410 - val_loss: 0.4818 - val_sqrt_abs_min_loss: 0.4818 - val_accuracy: 0.3034 - 177s/epoch - 648ms/step
Epoch 29/100
273/273 - 177s - loss: 0.4797 - sqrt_abs_min_loss: 0.4797 - accuracy: 0.3927 - val_loss: 0.4640 - val_sqrt_abs_min_loss: 0.4640 - val_accuracy: 0.3337 - 177s/epoch - 647ms/step
Epoch 30/100
273/273 - 177s - loss: 0.4666 - sqrt_abs_min_loss: 0.4666 - accuracy: 0.3215 - val_loss: 0.4826 - val_sqrt_abs_min_loss: 0.4826 - val_accuracy: 0.3387 - 177s/epoch - 647ms/step
Epoch 31/100
273/273 - 177s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.3083 - val_loss: 0.4778 - val_sqrt_abs_min_loss: 0.4778 - val_accuracy: 0.2954 - 177s/epoch - 647ms/step
Epoch 32/100
273/273 - 177s - loss: 0.4621 - sqrt_abs_min_loss: 0.4621 - accuracy: 0.3090 - val_loss: 0.4711 - val_sqrt_abs_min_loss: 0.4711 - val_accuracy: 0.3518 - 177s/epoch - 647ms/step
Epoch 33/100
273/273 - 177s - loss: 0.4595 - sqrt_abs_min_loss: 0.4595 - accuracy: 0.3247 - val_loss: 0.4826 - val_sqrt_abs_min_loss: 0.4826 - val_accuracy: 0.2883 - 177s/epoch - 647ms/step
Epoch 34/100
273/273 - 177s - loss: 0.4647 - sqrt_abs_min_loss: 0.4647 - accuracy: 0.3111 - val_loss: 0.4671 - val_sqrt_abs_min_loss: 0.4671 - val_accuracy: 0.2752 - 177s/epoch - 647ms/step
Epoch 35/100
273/273 - 177s - loss: 0.4554 - sqrt_abs_min_loss: 0.4554 - accuracy: 0.2847 - val_loss: 0.4690 - val_sqrt_abs_min_loss: 0.4690 - val_accuracy: 0.3649 - 177s/epoch - 647ms/step
Epoch 36/100
273/273 - 177s - loss: 0.4657 - sqrt_abs_min_loss: 0.4657 - accuracy: 0.3550 - val_loss: 0.4652 - val_sqrt_abs_min_loss: 0.4652 - val_accuracy: 0.2056 - 177s/epoch - 647ms/step
Epoch 37/100
273/273 - 177s - loss: 0.4599 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3110 - val_loss: 0.4833 - val_sqrt_abs_min_loss: 0.4833 - val_accuracy: 0.3508 - 177s/epoch - 647ms/step
Epoch 38/100
273/273 - 177s - loss: 0.4649 - sqrt_abs_min_loss: 0.4649 - accuracy: 0.3454 - val_loss: 0.4684 - val_sqrt_abs_min_loss: 0.4684 - val_accuracy: 0.2601 - 177s/epoch - 647ms/step
Epoch 39/100
273/273 - 176s - loss: 0.4644 - sqrt_abs_min_loss: 0.4644 - accuracy: 0.3114 - val_loss: 0.4638 - val_sqrt_abs_min_loss: 0.4638 - val_accuracy: 0.2944 - 176s/epoch - 646ms/step
Epoch 40/100
273/273 - 177s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.3482 - val_loss: 0.4890 - val_sqrt_abs_min_loss: 0.4890 - val_accuracy: 0.2379 - 177s/epoch - 647ms/step
Epoch 41/100
273/273 - 177s - loss: 0.4648 - sqrt_abs_min_loss: 0.4648 - accuracy: 0.2762 - val_loss: 0.4619 - val_sqrt_abs_min_loss: 0.4619 - val_accuracy: 0.2429 - 177s/epoch - 647ms/step
Epoch 42/100
273/273 - 176s - loss: 0.4689 - sqrt_abs_min_loss: 0.4689 - accuracy: 0.3150 - val_loss: 0.4549 - val_sqrt_abs_min_loss: 0.4549 - val_accuracy: 0.3054 - 176s/epoch - 646ms/step
Epoch 43/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3484 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2712 - 176s/epoch - 646ms/step
Epoch 44/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3436 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3730 - 176s/epoch - 646ms/step
Epoch 45/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3073 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3155 - 177s/epoch - 647ms/step
Epoch 46/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3029 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3841 - 177s/epoch - 647ms/step
Epoch 47/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3022 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2117 - 176s/epoch - 645ms/step
Epoch 48/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3209 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3679 - 176s/epoch - 646ms/step
Epoch 49/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3118 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3639 - 177s/epoch - 647ms/step
Epoch 50/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3148 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3629 - 177s/epoch - 647ms/step
Epoch 51/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3446 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.5272 - 176s/epoch - 645ms/step
Epoch 52/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3218 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2056 - 176s/epoch - 646ms/step
Epoch 53/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3267 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2198 - 176s/epoch - 646ms/step
Epoch 54/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3328 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3397 - 177s/epoch - 647ms/step
Epoch 55/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3205 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2954 - 176s/epoch - 646ms/step
Epoch 56/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3310 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2591 - 177s/epoch - 647ms/step
Epoch 57/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2824 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3881 - 177s/epoch - 648ms/step
Epoch 58/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2861 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3528 - 177s/epoch - 647ms/step
Epoch 59/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3012 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3448 - 176s/epoch - 646ms/step
Epoch 60/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3761 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4254 - 177s/epoch - 647ms/step
Epoch 61/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3606 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2843 - 177s/epoch - 647ms/step
Epoch 62/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3514 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4073 - 177s/epoch - 647ms/step
Epoch 63/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3323 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4778 - 177s/epoch - 647ms/step
Epoch 64/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3266 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3458 - 177s/epoch - 647ms/step
Epoch 65/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3494 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3942 - 177s/epoch - 648ms/step
Epoch 66/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3078 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3034 - 177s/epoch - 647ms/step
Epoch 67/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3329 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3165 - 176s/epoch - 646ms/step
Epoch 68/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2486 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3679 - 176s/epoch - 646ms/step
Epoch 69/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3669 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3246 - 176s/epoch - 646ms/step
Epoch 70/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3411 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4516 - 176s/epoch - 646ms/step
Epoch 71/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3077 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2601 - 177s/epoch - 647ms/step
Epoch 72/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3688 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.1673 - 176s/epoch - 646ms/step
Epoch 73/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3238 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3448 - 176s/epoch - 646ms/step
Epoch 74/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3562 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3669 - 176s/epoch - 646ms/step
Epoch 75/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2872 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3861 - 176s/epoch - 646ms/step
Epoch 76/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2795 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3216 - 177s/epoch - 647ms/step
Epoch 77/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3710 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3730 - 176s/epoch - 646ms/step
Epoch 78/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3514 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3800 - 177s/epoch - 647ms/step
Epoch 79/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2981 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3306 - 176s/epoch - 646ms/step
Epoch 80/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3061 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3226 - 177s/epoch - 647ms/step
Epoch 81/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2849 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4748 - 176s/epoch - 645ms/step
Epoch 82/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3082 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3377 - 176s/epoch - 646ms/step
Epoch 83/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3491 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2560 - 177s/epoch - 647ms/step
Epoch 84/100
273/273 - 179s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3040 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4940 - 179s/epoch - 657ms/step
Epoch 85/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3347 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3538 - 177s/epoch - 649ms/step
Epoch 86/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2873 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3226 - 177s/epoch - 649ms/step
Epoch 87/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2704 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3770 - 177s/epoch - 649ms/step
Epoch 88/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3399 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4577 - 177s/epoch - 648ms/step
Epoch 89/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2946 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3609 - 177s/epoch - 648ms/step
Epoch 90/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3447 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3367 - 177s/epoch - 647ms/step
Epoch 91/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3567 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3478 - 177s/epoch - 648ms/step
Epoch 92/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3261 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3800 - 177s/epoch - 648ms/step
Epoch 93/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2784 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3155 - 177s/epoch - 647ms/step
Epoch 94/100
273/273 - 176s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3364 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3750 - 176s/epoch - 646ms/step
Epoch 95/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3023 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3044 - 177s/epoch - 647ms/step
Epoch 96/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3938 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4002 - 177s/epoch - 648ms/step
Epoch 97/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3235 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3609 - 177s/epoch - 647ms/step
Epoch 98/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3372 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3458 - 177s/epoch - 647ms/step
Epoch 99/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2942 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3347 - 177s/epoch - 647ms/step
Epoch 100/100
273/273 - 177s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2618 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4294 - 177s/epoch - 647ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 796ms/step
predicted values [[nan nan nan]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[nan nan nan]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[nan nan nan]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[nan nan nan]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[nan nan nan]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[nan nan nan]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 10s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 2/31 [>.............................] - ETA: 6s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875  3/31 [=>............................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 4/31 [==>...........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1953 5/31 [===>..........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2000 6/31 [====>.........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1979 7/31 [=====>........................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2009 8/31 [======>.......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1992 9/31 [=======>......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.201410/31 [========>.....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.206211/31 [=========>....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.210212/31 [==========>...................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.213513/31 [===========>..................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.216314/31 [============>.................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.218815/31 [=============>................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.220816/31 [==============>...............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.224617/31 [===============>..............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.226118/31 [================>.............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.227419/31 [=================>............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.230320/31 [==================>...........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.232821/31 [===================>..........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.235122/31 [====================>.........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.238623/31 [=====================>........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.243224/31 [======================>.......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.247425/31 [=======================>......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.251226/31 [========================>.....] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.254827/31 [=========================>....] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.256928/31 [==========================>...] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.258929/31 [===========================>..] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.261930/31 [============================>.] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.264631/31 [==============================] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.267131/31 [==============================] - 7s 208ms/step - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2671
test loss, test acc: [nan, nan, 0.2671371102333069]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232331: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:30 2023
Job was executed on host(s) <4*n-62-20-16>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Sun Jan 22 15:44:34 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Sun Jan 22 15:44:34 2023
Terminated at Sun Jan 22 20:39:49 2023
Results reported at Sun Jan 22 20:39:49 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_00005_model_i_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.0005)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_00005_model_i_" "iter6" "load_model_i"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   22184.50 sec.
    Max Memory :                                 3043 MB
    Average Memory :                             2952.60 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17437.00 MB
    Max Swap :                                   2 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17715 sec.
    Turnaround time :                            29239 sec.

The output (if any) is above this job summary.

