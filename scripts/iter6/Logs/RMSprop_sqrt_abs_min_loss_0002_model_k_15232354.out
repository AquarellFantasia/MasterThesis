Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-23 04:29:35.858856: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 04:29:37.820130: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 04:29:37.820984: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 04:29:37.821023: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-23 04:29:42.108273: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 04:29:42.725963: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14610 MB memory:  -> device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:af:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.002)
Loss function name:  sqrt_abs_min_loss
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_sqrt_abs_min_loss_0002_model_k_
Output folder:  iter6
Model name:  load_model_k
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(32, activation="sigmoid", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-23 04:29:47.691117: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 203s - loss: 1.3315 - sqrt_abs_min_loss: 0.4909 - accuracy: 0.3436 - val_loss: 0.5971 - val_sqrt_abs_min_loss: 0.4825 - val_accuracy: 0.2923 - 203s/epoch - 743ms/step
Epoch 2/100
273/273 - 175s - loss: 0.5021 - sqrt_abs_min_loss: 0.4720 - accuracy: 0.3370 - val_loss: 0.4508 - val_sqrt_abs_min_loss: 0.4488 - val_accuracy: 0.3256 - 175s/epoch - 639ms/step
Epoch 3/100
273/273 - 175s - loss: 0.4639 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.3410 - val_loss: 0.4829 - val_sqrt_abs_min_loss: 0.4809 - val_accuracy: 0.2923 - 175s/epoch - 640ms/step
Epoch 4/100
273/273 - 175s - loss: 0.4568 - sqrt_abs_min_loss: 0.4548 - accuracy: 0.3228 - val_loss: 0.4455 - val_sqrt_abs_min_loss: 0.4435 - val_accuracy: 0.4567 - 175s/epoch - 641ms/step
Epoch 5/100
273/273 - 175s - loss: 0.4682 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3371 - val_loss: 0.4896 - val_sqrt_abs_min_loss: 0.4876 - val_accuracy: 0.5111 - 175s/epoch - 641ms/step
Epoch 6/100
273/273 - 175s - loss: 0.4666 - sqrt_abs_min_loss: 0.4646 - accuracy: 0.3191 - val_loss: 0.4768 - val_sqrt_abs_min_loss: 0.4748 - val_accuracy: 0.3407 - 175s/epoch - 641ms/step
Epoch 7/100
273/273 - 175s - loss: 0.4639 - sqrt_abs_min_loss: 0.4619 - accuracy: 0.3614 - val_loss: 0.4614 - val_sqrt_abs_min_loss: 0.4594 - val_accuracy: 0.3004 - 175s/epoch - 641ms/step
Epoch 8/100
273/273 - 175s - loss: 0.4685 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.3288 - val_loss: 0.4932 - val_sqrt_abs_min_loss: 0.4912 - val_accuracy: 0.3226 - 175s/epoch - 641ms/step
Epoch 9/100
273/273 - 175s - loss: 0.4696 - sqrt_abs_min_loss: 0.4676 - accuracy: 0.3468 - val_loss: 0.4700 - val_sqrt_abs_min_loss: 0.4680 - val_accuracy: 0.2752 - 175s/epoch - 640ms/step
Epoch 10/100
273/273 - 175s - loss: 0.4676 - sqrt_abs_min_loss: 0.4656 - accuracy: 0.3300 - val_loss: 0.4499 - val_sqrt_abs_min_loss: 0.4479 - val_accuracy: 0.2772 - 175s/epoch - 641ms/step
Epoch 11/100
273/273 - 175s - loss: 0.4678 - sqrt_abs_min_loss: 0.4658 - accuracy: 0.2993 - val_loss: 0.4980 - val_sqrt_abs_min_loss: 0.4960 - val_accuracy: 0.3357 - 175s/epoch - 640ms/step
Epoch 12/100
273/273 - 175s - loss: 0.4648 - sqrt_abs_min_loss: 0.4628 - accuracy: 0.3293 - val_loss: 0.4790 - val_sqrt_abs_min_loss: 0.4770 - val_accuracy: 0.5181 - 175s/epoch - 641ms/step
Epoch 13/100
273/273 - 175s - loss: 0.4682 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3134 - val_loss: 0.4780 - val_sqrt_abs_min_loss: 0.4760 - val_accuracy: 0.4546 - 175s/epoch - 640ms/step
Epoch 14/100
273/273 - 175s - loss: 0.4667 - sqrt_abs_min_loss: 0.4647 - accuracy: 0.3342 - val_loss: 0.4947 - val_sqrt_abs_min_loss: 0.4927 - val_accuracy: 0.3548 - 175s/epoch - 642ms/step
Epoch 15/100
273/273 - 175s - loss: 0.4676 - sqrt_abs_min_loss: 0.4656 - accuracy: 0.3133 - val_loss: 0.4956 - val_sqrt_abs_min_loss: 0.4936 - val_accuracy: 0.3740 - 175s/epoch - 641ms/step
Epoch 16/100
273/273 - 175s - loss: 0.4619 - sqrt_abs_min_loss: 0.4599 - accuracy: 0.3114 - val_loss: 0.4752 - val_sqrt_abs_min_loss: 0.4732 - val_accuracy: 0.4012 - 175s/epoch - 642ms/step
Epoch 17/100
273/273 - 175s - loss: 0.4616 - sqrt_abs_min_loss: 0.4596 - accuracy: 0.3266 - val_loss: 0.4761 - val_sqrt_abs_min_loss: 0.4741 - val_accuracy: 0.3669 - 175s/epoch - 642ms/step
Epoch 18/100
273/273 - 175s - loss: 0.4718 - sqrt_abs_min_loss: 0.4698 - accuracy: 0.3220 - val_loss: 0.4763 - val_sqrt_abs_min_loss: 0.4743 - val_accuracy: 0.3155 - 175s/epoch - 641ms/step
Epoch 19/100
273/273 - 175s - loss: 0.4630 - sqrt_abs_min_loss: 0.4610 - accuracy: 0.3484 - val_loss: 0.4598 - val_sqrt_abs_min_loss: 0.4578 - val_accuracy: 0.2278 - 175s/epoch - 642ms/step
Epoch 20/100
273/273 - 175s - loss: 0.4651 - sqrt_abs_min_loss: 0.4631 - accuracy: 0.3122 - val_loss: 0.4806 - val_sqrt_abs_min_loss: 0.4786 - val_accuracy: 0.3317 - 175s/epoch - 642ms/step
Epoch 21/100
273/273 - 175s - loss: 0.4705 - sqrt_abs_min_loss: 0.4685 - accuracy: 0.3204 - val_loss: 0.4815 - val_sqrt_abs_min_loss: 0.4795 - val_accuracy: 0.4748 - 175s/epoch - 642ms/step
Epoch 22/100
273/273 - 175s - loss: 0.4686 - sqrt_abs_min_loss: 0.4666 - accuracy: 0.3247 - val_loss: 0.4658 - val_sqrt_abs_min_loss: 0.4638 - val_accuracy: 0.2913 - 175s/epoch - 641ms/step
Epoch 23/100
273/273 - 175s - loss: 0.4682 - sqrt_abs_min_loss: 0.4662 - accuracy: 0.3090 - val_loss: 0.4572 - val_sqrt_abs_min_loss: 0.4552 - val_accuracy: 0.2974 - 175s/epoch - 641ms/step
Epoch 24/100
273/273 - 175s - loss: 0.4570 - sqrt_abs_min_loss: 0.4550 - accuracy: 0.3403 - val_loss: 0.4488 - val_sqrt_abs_min_loss: 0.4468 - val_accuracy: 0.2702 - 175s/epoch - 642ms/step
Epoch 25/100
273/273 - 175s - loss: 0.4591 - sqrt_abs_min_loss: 0.4571 - accuracy: 0.3225 - val_loss: 0.4661 - val_sqrt_abs_min_loss: 0.4641 - val_accuracy: 0.3810 - 175s/epoch - 641ms/step
Epoch 26/100
273/273 - 175s - loss: 0.4628 - sqrt_abs_min_loss: 0.4608 - accuracy: 0.3222 - val_loss: 0.4793 - val_sqrt_abs_min_loss: 0.4773 - val_accuracy: 0.3135 - 175s/epoch - 642ms/step
Epoch 27/100
273/273 - 175s - loss: 0.4594 - sqrt_abs_min_loss: 0.4574 - accuracy: 0.3394 - val_loss: 0.4676 - val_sqrt_abs_min_loss: 0.4656 - val_accuracy: 0.2933 - 175s/epoch - 641ms/step
Epoch 28/100
273/273 - 175s - loss: 0.4525 - sqrt_abs_min_loss: 0.4505 - accuracy: 0.3199 - val_loss: 0.4950 - val_sqrt_abs_min_loss: 0.4930 - val_accuracy: 0.3044 - 175s/epoch - 640ms/step
Epoch 29/100
273/273 - 175s - loss: 0.4578 - sqrt_abs_min_loss: 0.4558 - accuracy: 0.3490 - val_loss: 0.4677 - val_sqrt_abs_min_loss: 0.4657 - val_accuracy: 0.3095 - 175s/epoch - 641ms/step
Epoch 30/100
273/273 - 175s - loss: 0.4685 - sqrt_abs_min_loss: 0.4665 - accuracy: 0.3480 - val_loss: 0.4487 - val_sqrt_abs_min_loss: 0.4467 - val_accuracy: 0.2722 - 175s/epoch - 641ms/step
Epoch 31/100
273/273 - 175s - loss: 0.4651 - sqrt_abs_min_loss: 0.4631 - accuracy: 0.3217 - val_loss: 0.4574 - val_sqrt_abs_min_loss: 0.4553 - val_accuracy: 0.3438 - 175s/epoch - 641ms/step
Epoch 32/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3415 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4546 - 175s/epoch - 640ms/step
Epoch 33/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3317 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.5181 - 175s/epoch - 640ms/step
Epoch 34/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3162 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3246 - 175s/epoch - 641ms/step
Epoch 35/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3621 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2621 - 175s/epoch - 641ms/step
Epoch 36/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3152 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3004 - 175s/epoch - 640ms/step
Epoch 37/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3494 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2560 - 175s/epoch - 641ms/step
Epoch 38/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3336 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3448 - 175s/epoch - 640ms/step
Epoch 39/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3100 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2177 - 175s/epoch - 641ms/step
Epoch 40/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2763 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3276 - 175s/epoch - 640ms/step
Epoch 41/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3725 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3266 - 175s/epoch - 641ms/step
Epoch 42/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3503 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3831 - 175s/epoch - 641ms/step
Epoch 43/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3252 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3417 - 175s/epoch - 641ms/step
Epoch 44/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3553 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4052 - 175s/epoch - 641ms/step
Epoch 45/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3247 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2601 - 175s/epoch - 641ms/step
Epoch 46/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2866 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3196 - 175s/epoch - 641ms/step
Epoch 47/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3334 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2762 - 175s/epoch - 640ms/step
Epoch 48/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3179 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3780 - 175s/epoch - 640ms/step
Epoch 49/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3511 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3216 - 175s/epoch - 641ms/step
Epoch 50/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3471 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3982 - 175s/epoch - 640ms/step
Epoch 51/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2998 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3216 - 175s/epoch - 641ms/step
Epoch 52/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3111 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4315 - 175s/epoch - 640ms/step
Epoch 53/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3584 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4476 - 175s/epoch - 640ms/step
Epoch 54/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3111 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2913 - 175s/epoch - 640ms/step
Epoch 55/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2570 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3044 - 175s/epoch - 641ms/step
Epoch 56/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2980 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2782 - 175s/epoch - 641ms/step
Epoch 57/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3454 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4819 - 175s/epoch - 642ms/step
Epoch 58/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3205 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3125 - 175s/epoch - 641ms/step
Epoch 59/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3008 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4839 - 175s/epoch - 641ms/step
Epoch 60/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3475 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3750 - 175s/epoch - 640ms/step
Epoch 61/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2750 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2812 - 175s/epoch - 640ms/step
Epoch 62/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2951 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4103 - 175s/epoch - 640ms/step
Epoch 63/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3713 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2369 - 175s/epoch - 640ms/step
Epoch 64/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3708 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3165 - 175s/epoch - 640ms/step
Epoch 65/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3641 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3841 - 175s/epoch - 641ms/step
Epoch 66/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3455 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3246 - 175s/epoch - 641ms/step
Epoch 67/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3473 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3831 - 175s/epoch - 639ms/step
Epoch 68/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3258 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4677 - 175s/epoch - 641ms/step
Epoch 69/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2768 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3216 - 175s/epoch - 641ms/step
Epoch 70/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3306 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2429 - 175s/epoch - 641ms/step
Epoch 71/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3227 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3115 - 175s/epoch - 641ms/step
Epoch 72/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3684 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.1915 - 175s/epoch - 641ms/step
Epoch 73/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3482 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2893 - 175s/epoch - 640ms/step
Epoch 74/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3609 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3327 - 175s/epoch - 641ms/step
Epoch 75/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2981 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3831 - 175s/epoch - 640ms/step
Epoch 76/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3638 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3367 - 175s/epoch - 640ms/step
Epoch 77/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3009 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2339 - 175s/epoch - 640ms/step
Epoch 78/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3575 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4012 - 175s/epoch - 641ms/step
Epoch 79/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3142 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3468 - 175s/epoch - 640ms/step
Epoch 80/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3703 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2450 - 175s/epoch - 641ms/step
Epoch 81/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3289 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4032 - 175s/epoch - 640ms/step
Epoch 82/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3309 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3690 - 175s/epoch - 641ms/step
Epoch 83/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3504 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3931 - 175s/epoch - 640ms/step
Epoch 84/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3269 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2853 - 175s/epoch - 640ms/step
Epoch 85/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3341 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3558 - 175s/epoch - 640ms/step
Epoch 86/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3096 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3861 - 175s/epoch - 641ms/step
Epoch 87/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3055 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.4970 - 175s/epoch - 641ms/step
Epoch 88/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2771 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2964 - 175s/epoch - 640ms/step
Epoch 89/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3418 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3377 - 175s/epoch - 640ms/step
Epoch 90/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3454 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2319 - 175s/epoch - 641ms/step
Epoch 91/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3075 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3569 - 175s/epoch - 641ms/step
Epoch 92/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3304 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3407 - 175s/epoch - 641ms/step
Epoch 93/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3179 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3740 - 175s/epoch - 641ms/step
Epoch 94/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3048 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.2016 - 175s/epoch - 641ms/step
Epoch 95/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2879 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3286 - 175s/epoch - 641ms/step
Epoch 96/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3340 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3659 - 175s/epoch - 641ms/step
Epoch 97/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3586 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3357 - 175s/epoch - 641ms/step
Epoch 98/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3429 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3347 - 175s/epoch - 641ms/step
Epoch 99/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3132 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3780 - 175s/epoch - 641ms/step
Epoch 100/100
273/273 - 175s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.3425 - val_loss: nan - val_sqrt_abs_min_loss: nan - val_accuracy: 0.3125 - 175s/epoch - 640ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 760ms/step
predicted values [[nan nan nan]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 38ms/step
predicted values [[nan nan nan]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[nan nan nan]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 29ms/step
predicted values [[nan nan nan]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 27ms/step
predicted values [[nan nan nan]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[nan nan nan]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 28ms/step
predicted values [[nan nan nan]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[nan nan nan]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 10s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 2/31 [>.............................] - ETA: 6s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875  3/31 [=>............................] - ETA: 6s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1875 4/31 [==>...........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1953 5/31 [===>..........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2000 6/31 [====>.........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1979 7/31 [=====>........................] - ETA: 5s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2009 8/31 [======>.......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.1992 9/31 [=======>......................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.201410/31 [========>.....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.206211/31 [=========>....................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.210212/31 [==========>...................] - ETA: 4s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.213513/31 [===========>..................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.216314/31 [============>.................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.218815/31 [=============>................] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.220816/31 [==============>...............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.224617/31 [===============>..............] - ETA: 3s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.226118/31 [================>.............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.227419/31 [=================>............] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.230320/31 [==================>...........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.232821/31 [===================>..........] - ETA: 2s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.235122/31 [====================>.........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.238623/31 [=====================>........] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.243224/31 [======================>.......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.247425/31 [=======================>......] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.251226/31 [========================>.....] - ETA: 1s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.254827/31 [=========================>....] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.256928/31 [==========================>...] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.258929/31 [===========================>..] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.261930/31 [============================>.] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.264631/31 [==============================] - ETA: 0s - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.267131/31 [==============================] - 7s 215ms/step - loss: nan - sqrt_abs_min_loss: nan - accuracy: 0.2671
test loss, test acc: [nan, nan, 0.2671371102333069]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232354: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:36 2023
Job was executed on host(s) <4*n-62-20-3>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Mon Jan 23 04:29:30 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Mon Jan 23 04:29:30 2023
Terminated at Mon Jan 23 09:21:53 2023
Results reported at Mon Jan 23 09:21:53 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_sqrt_abs_min_loss_0002_model_k_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.002)" "sqrt_abs_min_loss" "black_background_500x500.csv" 2 "RMSprop_sqrt_abs_min_loss_0002_model_k_" "iter6" "load_model_k"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   22168.78 sec.
    Max Memory :                                 2473 MB
    Average Memory :                             2391.37 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               18007.00 MB
    Max Swap :                                   2 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17545 sec.
    Turnaround time :                            74957 sec.

The output (if any) is above this job summary.

