Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-23 16:42:49.078444: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 16:42:58.862401: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 16:42:58.863252: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-23 16:42:58.863292: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-23 16:43:08.259846: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-23 16:43:12.597781: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14610 MB memory:  -> device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:af:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.001)
Loss function name:  abs_loss_function
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_abs_loss_function_0001_model_k_
Output folder:  iter6
Model name:  load_model_k
 
        ################ MODEL ############### 

        inputs = keras.Input(shape=(input_size, input_size, 1))
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(inputs)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=11, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=5, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=2)(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
        x = layers.MaxPooling2D(pool_size=4)(x)
        x = layers.Flatten()(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(210, activation="relu", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        x = layers.Dense(32, activation="sigmoid", kernel_regularizer=keras.regularizers.l2(0.01))(x)
        outputs = layers.Dense(3)(x)
    
Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 490, 490, 32)      3904      
                                                                 
 conv2d_1 (Conv2D)           (None, 480, 480, 32)      123936    
                                                                 
 conv2d_2 (Conv2D)           (None, 470, 470, 32)      123936    
                                                                 
 max_pooling2d (MaxPooling2D  (None, 235, 235, 32)     0         
 )                                                               
                                                                 
 conv2d_3 (Conv2D)           (None, 231, 231, 32)      25632     
                                                                 
 conv2d_4 (Conv2D)           (None, 227, 227, 32)      25632     
                                                                 
 conv2d_5 (Conv2D)           (None, 223, 223, 32)      25632     
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 111, 111, 32)     0         
 2D)                                                             
                                                                 
 conv2d_6 (Conv2D)           (None, 109, 109, 32)      9248      
                                                                 
 conv2d_7 (Conv2D)           (None, 107, 107, 32)      9248      
                                                                 
 conv2d_8 (Conv2D)           (None, 105, 105, 32)      9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 52, 52, 32)       0         
 2D)                                                             
                                                                 
 conv2d_9 (Conv2D)           (None, 50, 50, 32)        9248      
                                                                 
 conv2d_10 (Conv2D)          (None, 48, 48, 32)        9248      
                                                                 
 conv2d_11 (Conv2D)          (None, 46, 46, 32)        9248      
                                                                 
 max_pooling2d_3 (MaxPooling  (None, 23, 23, 32)       0         
 2D)                                                             
                                                                 
 conv2d_12 (Conv2D)          (None, 21, 21, 32)        9248      
                                                                 
 conv2d_13 (Conv2D)          (None, 19, 19, 32)        9248      
                                                                 
 conv2d_14 (Conv2D)          (None, 17, 17, 32)        9248      
                                                                 
 max_pooling2d_4 (MaxPooling  (None, 4, 4, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 512)               0         
                                                                 
 dense (Dense)               (None, 210)               107730    
                                                                 
 dense_1 (Dense)             (None, 210)               44310     
                                                                 
 dense_2 (Dense)             (None, 210)               44310     
                                                                 
 dense_3 (Dense)             (None, 32)                6752      
                                                                 
 dense_4 (Dense)             (None, 3)                 99        
                                                                 
=================================================================
Total params: 615,105
Trainable params: 615,105
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-23 16:43:19.083519: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 202s - loss: 1.0890 - abs_loss_function: 0.2556 - accuracy: 0.2988 - val_loss: 0.2600 - val_abs_loss_function: 0.2573 - val_accuracy: 0.2923 - 202s/epoch - 741ms/step
Epoch 2/100
273/273 - 174s - loss: 0.2378 - abs_loss_function: 0.2371 - accuracy: 0.3442 - val_loss: 0.2384 - val_abs_loss_function: 0.2379 - val_accuracy: 0.2218 - 174s/epoch - 637ms/step
Epoch 3/100
273/273 - 174s - loss: 0.2440 - abs_loss_function: 0.2435 - accuracy: 0.3379 - val_loss: 0.2480 - val_abs_loss_function: 0.2475 - val_accuracy: 0.4022 - 174s/epoch - 637ms/step
Epoch 4/100
273/273 - 174s - loss: 0.2357 - abs_loss_function: 0.2352 - accuracy: 0.3360 - val_loss: 0.2475 - val_abs_loss_function: 0.2470 - val_accuracy: 0.3014 - 174s/epoch - 636ms/step
Epoch 5/100
273/273 - 173s - loss: 0.2433 - abs_loss_function: 0.2428 - accuracy: 0.3094 - val_loss: 0.2545 - val_abs_loss_function: 0.2540 - val_accuracy: 0.4526 - 173s/epoch - 635ms/step
Epoch 6/100
273/273 - 174s - loss: 0.2419 - abs_loss_function: 0.2414 - accuracy: 0.3439 - val_loss: 0.2341 - val_abs_loss_function: 0.2336 - val_accuracy: 0.4103 - 174s/epoch - 636ms/step
Epoch 7/100
273/273 - 174s - loss: 0.2433 - abs_loss_function: 0.2428 - accuracy: 0.3289 - val_loss: 0.2874 - val_abs_loss_function: 0.2869 - val_accuracy: 0.3871 - 174s/epoch - 636ms/step
Epoch 8/100
273/273 - 173s - loss: 0.2450 - abs_loss_function: 0.2445 - accuracy: 0.3756 - val_loss: 0.2511 - val_abs_loss_function: 0.2506 - val_accuracy: 0.2520 - 173s/epoch - 636ms/step
Epoch 9/100
273/273 - 174s - loss: 0.2366 - abs_loss_function: 0.2361 - accuracy: 0.3275 - val_loss: 0.2302 - val_abs_loss_function: 0.2297 - val_accuracy: 0.4163 - 174s/epoch - 636ms/step
Epoch 10/100
273/273 - 174s - loss: 0.2377 - abs_loss_function: 0.2372 - accuracy: 0.3013 - val_loss: 0.2529 - val_abs_loss_function: 0.2524 - val_accuracy: 0.3206 - 174s/epoch - 636ms/step
Epoch 11/100
273/273 - 174s - loss: 0.2448 - abs_loss_function: 0.2443 - accuracy: 0.3400 - val_loss: 0.2383 - val_abs_loss_function: 0.2378 - val_accuracy: 0.3095 - 174s/epoch - 637ms/step
Epoch 12/100
273/273 - 174s - loss: 0.2465 - abs_loss_function: 0.2461 - accuracy: 0.3412 - val_loss: 0.2380 - val_abs_loss_function: 0.2375 - val_accuracy: 0.3347 - 174s/epoch - 638ms/step
Epoch 13/100
273/273 - 174s - loss: 0.2450 - abs_loss_function: 0.2445 - accuracy: 0.3427 - val_loss: 0.2455 - val_abs_loss_function: 0.2450 - val_accuracy: 0.3942 - 174s/epoch - 636ms/step
Epoch 14/100
273/273 - 174s - loss: 0.2404 - abs_loss_function: 0.2399 - accuracy: 0.3286 - val_loss: 0.2516 - val_abs_loss_function: 0.2511 - val_accuracy: 0.2167 - 174s/epoch - 637ms/step
Epoch 15/100
273/273 - 174s - loss: 0.2421 - abs_loss_function: 0.2416 - accuracy: 0.3567 - val_loss: 0.2593 - val_abs_loss_function: 0.2588 - val_accuracy: 0.2923 - 174s/epoch - 637ms/step
Epoch 16/100
273/273 - 174s - loss: 0.2448 - abs_loss_function: 0.2443 - accuracy: 0.3467 - val_loss: 0.2628 - val_abs_loss_function: 0.2623 - val_accuracy: 0.3821 - 174s/epoch - 636ms/step
Epoch 17/100
273/273 - 175s - loss: 0.2303 - abs_loss_function: 0.2298 - accuracy: 0.3283 - val_loss: 0.2374 - val_abs_loss_function: 0.2369 - val_accuracy: 0.3821 - 175s/epoch - 639ms/step
Epoch 18/100
273/273 - 174s - loss: 0.2375 - abs_loss_function: 0.2370 - accuracy: 0.3174 - val_loss: 0.2578 - val_abs_loss_function: 0.2573 - val_accuracy: 0.3397 - 174s/epoch - 636ms/step
Epoch 19/100
273/273 - 174s - loss: 0.2417 - abs_loss_function: 0.2412 - accuracy: 0.3049 - val_loss: 0.2261 - val_abs_loss_function: 0.2256 - val_accuracy: 0.4698 - 174s/epoch - 636ms/step
Epoch 20/100
273/273 - 173s - loss: 0.2404 - abs_loss_function: 0.2400 - accuracy: 0.3291 - val_loss: 0.2662 - val_abs_loss_function: 0.2657 - val_accuracy: 0.3921 - 173s/epoch - 635ms/step
Epoch 21/100
273/273 - 174s - loss: 0.2467 - abs_loss_function: 0.2462 - accuracy: 0.3583 - val_loss: 0.2731 - val_abs_loss_function: 0.2726 - val_accuracy: 0.3377 - 174s/epoch - 639ms/step
Epoch 22/100
273/273 - 174s - loss: 0.2453 - abs_loss_function: 0.2449 - accuracy: 0.3340 - val_loss: 0.2546 - val_abs_loss_function: 0.2541 - val_accuracy: 0.3800 - 174s/epoch - 638ms/step
Epoch 23/100
273/273 - 173s - loss: 0.2392 - abs_loss_function: 0.2387 - accuracy: 0.3030 - val_loss: 0.2627 - val_abs_loss_function: 0.2622 - val_accuracy: 0.3246 - 173s/epoch - 634ms/step
Epoch 24/100
273/273 - 173s - loss: 0.2407 - abs_loss_function: 0.2402 - accuracy: 0.3298 - val_loss: 0.2442 - val_abs_loss_function: 0.2437 - val_accuracy: 0.2641 - 173s/epoch - 634ms/step
Epoch 25/100
273/273 - 174s - loss: 0.2376 - abs_loss_function: 0.2371 - accuracy: 0.3092 - val_loss: 0.2393 - val_abs_loss_function: 0.2388 - val_accuracy: 0.3972 - 174s/epoch - 637ms/step
Epoch 26/100
273/273 - 175s - loss: 0.2421 - abs_loss_function: 0.2416 - accuracy: 0.3257 - val_loss: 0.2493 - val_abs_loss_function: 0.2488 - val_accuracy: 0.3246 - 175s/epoch - 643ms/step
Epoch 27/100
273/273 - 176s - loss: 0.2353 - abs_loss_function: 0.2348 - accuracy: 0.3542 - val_loss: 0.2482 - val_abs_loss_function: 0.2477 - val_accuracy: 0.3085 - 176s/epoch - 643ms/step
Epoch 28/100
273/273 - 175s - loss: 0.2413 - abs_loss_function: 0.2408 - accuracy: 0.2960 - val_loss: 0.2500 - val_abs_loss_function: 0.2495 - val_accuracy: 0.3831 - 175s/epoch - 641ms/step
Epoch 29/100
273/273 - 177s - loss: 0.2416 - abs_loss_function: 0.2411 - accuracy: 0.3524 - val_loss: 0.2711 - val_abs_loss_function: 0.2706 - val_accuracy: 0.3579 - 177s/epoch - 649ms/step
Epoch 30/100
273/273 - 176s - loss: 0.2384 - abs_loss_function: 0.2379 - accuracy: 0.4045 - val_loss: 0.2470 - val_abs_loss_function: 0.2465 - val_accuracy: 0.2984 - 176s/epoch - 645ms/step
Epoch 31/100
273/273 - 174s - loss: 0.2395 - abs_loss_function: 0.2390 - accuracy: 0.3845 - val_loss: 0.2601 - val_abs_loss_function: 0.2597 - val_accuracy: 0.2571 - 174s/epoch - 637ms/step
Epoch 32/100
273/273 - 177s - loss: 0.2413 - abs_loss_function: 0.2408 - accuracy: 0.3355 - val_loss: 0.2365 - val_abs_loss_function: 0.2360 - val_accuracy: 0.3911 - 177s/epoch - 650ms/step
Epoch 33/100
273/273 - 174s - loss: 0.2490 - abs_loss_function: 0.2485 - accuracy: 0.3273 - val_loss: 0.2460 - val_abs_loss_function: 0.2456 - val_accuracy: 0.5242 - 174s/epoch - 636ms/step
Epoch 34/100
273/273 - 174s - loss: 0.2364 - abs_loss_function: 0.2359 - accuracy: 0.3092 - val_loss: 0.2456 - val_abs_loss_function: 0.2451 - val_accuracy: 0.3095 - 174s/epoch - 637ms/step
Epoch 35/100
273/273 - 176s - loss: 0.2452 - abs_loss_function: 0.2447 - accuracy: 0.3569 - val_loss: 0.2534 - val_abs_loss_function: 0.2529 - val_accuracy: 0.3145 - 176s/epoch - 643ms/step
Epoch 36/100
273/273 - 174s - loss: 0.2441 - abs_loss_function: 0.2436 - accuracy: 0.2944 - val_loss: 0.2513 - val_abs_loss_function: 0.2508 - val_accuracy: 0.2792 - 174s/epoch - 636ms/step
Epoch 37/100
273/273 - 174s - loss: 0.2396 - abs_loss_function: 0.2392 - accuracy: 0.3054 - val_loss: 0.2437 - val_abs_loss_function: 0.2432 - val_accuracy: 0.3306 - 174s/epoch - 637ms/step
Epoch 38/100
273/273 - 173s - loss: 0.2389 - abs_loss_function: 0.2384 - accuracy: 0.3380 - val_loss: 0.2448 - val_abs_loss_function: 0.2443 - val_accuracy: 0.4506 - 173s/epoch - 634ms/step
Epoch 39/100
273/273 - 173s - loss: 0.2323 - abs_loss_function: 0.2318 - accuracy: 0.3660 - val_loss: 0.2491 - val_abs_loss_function: 0.2487 - val_accuracy: 0.3579 - 173s/epoch - 635ms/step
Epoch 40/100
273/273 - 174s - loss: 0.2388 - abs_loss_function: 0.2383 - accuracy: 0.2723 - val_loss: 0.2577 - val_abs_loss_function: 0.2572 - val_accuracy: 0.2268 - 174s/epoch - 636ms/step
Epoch 41/100
273/273 - 174s - loss: 0.2414 - abs_loss_function: 0.2409 - accuracy: 0.3442 - val_loss: 0.2569 - val_abs_loss_function: 0.2564 - val_accuracy: 0.4234 - 174s/epoch - 636ms/step
Epoch 42/100
273/273 - 174s - loss: 0.2507 - abs_loss_function: 0.2502 - accuracy: 0.3284 - val_loss: 0.2609 - val_abs_loss_function: 0.2604 - val_accuracy: 0.3004 - 174s/epoch - 636ms/step
Epoch 43/100
273/273 - 174s - loss: 0.2415 - abs_loss_function: 0.2410 - accuracy: 0.3346 - val_loss: 0.2523 - val_abs_loss_function: 0.2518 - val_accuracy: 0.2772 - 174s/epoch - 637ms/step
Epoch 44/100
273/273 - 173s - loss: 0.2434 - abs_loss_function: 0.2429 - accuracy: 0.2896 - val_loss: 0.2647 - val_abs_loss_function: 0.2642 - val_accuracy: 0.4002 - 173s/epoch - 635ms/step
Epoch 45/100
273/273 - 173s - loss: 0.2407 - abs_loss_function: 0.2402 - accuracy: 0.3380 - val_loss: 0.2531 - val_abs_loss_function: 0.2526 - val_accuracy: 0.3054 - 173s/epoch - 635ms/step
Epoch 46/100
273/273 - 174s - loss: 0.2409 - abs_loss_function: 0.2404 - accuracy: 0.3182 - val_loss: 0.2525 - val_abs_loss_function: 0.2520 - val_accuracy: 0.4133 - 174s/epoch - 636ms/step
Epoch 47/100
273/273 - 173s - loss: 0.2481 - abs_loss_function: 0.2476 - accuracy: 0.3227 - val_loss: 0.2226 - val_abs_loss_function: 0.2221 - val_accuracy: 0.3760 - 173s/epoch - 635ms/step
Epoch 48/100
273/273 - 173s - loss: 0.2393 - abs_loss_function: 0.2388 - accuracy: 0.2969 - val_loss: 0.2669 - val_abs_loss_function: 0.2664 - val_accuracy: 0.4234 - 173s/epoch - 635ms/step
Epoch 49/100
273/273 - 174s - loss: 0.2408 - abs_loss_function: 0.2403 - accuracy: 0.3076 - val_loss: 0.2507 - val_abs_loss_function: 0.2502 - val_accuracy: 0.4294 - 174s/epoch - 636ms/step
Epoch 50/100
273/273 - 173s - loss: 0.2396 - abs_loss_function: 0.2391 - accuracy: 0.3571 - val_loss: 0.2566 - val_abs_loss_function: 0.2561 - val_accuracy: 0.2762 - 173s/epoch - 635ms/step
Epoch 51/100
273/273 - 173s - loss: 0.2445 - abs_loss_function: 0.2440 - accuracy: 0.3159 - val_loss: 0.2459 - val_abs_loss_function: 0.2454 - val_accuracy: 0.2681 - 173s/epoch - 634ms/step
Epoch 52/100
273/273 - 173s - loss: 0.2451 - abs_loss_function: 0.2447 - accuracy: 0.3427 - val_loss: 0.2418 - val_abs_loss_function: 0.2413 - val_accuracy: 0.3357 - 173s/epoch - 635ms/step
Epoch 53/100
273/273 - 173s - loss: 0.2470 - abs_loss_function: 0.2465 - accuracy: 0.3019 - val_loss: 0.2352 - val_abs_loss_function: 0.2347 - val_accuracy: 0.3024 - 173s/epoch - 635ms/step
Epoch 54/100
273/273 - 173s - loss: 0.2418 - abs_loss_function: 0.2413 - accuracy: 0.3585 - val_loss: 0.2622 - val_abs_loss_function: 0.2617 - val_accuracy: 0.3528 - 173s/epoch - 635ms/step
Epoch 55/100
273/273 - 173s - loss: 0.2387 - abs_loss_function: 0.2382 - accuracy: 0.3152 - val_loss: 0.2605 - val_abs_loss_function: 0.2600 - val_accuracy: 0.2863 - 173s/epoch - 635ms/step
Epoch 56/100
273/273 - 173s - loss: 0.2354 - abs_loss_function: 0.2349 - accuracy: 0.3280 - val_loss: 0.2350 - val_abs_loss_function: 0.2346 - val_accuracy: 0.4234 - 173s/epoch - 635ms/step
Epoch 57/100
273/273 - 173s - loss: 0.2465 - abs_loss_function: 0.2460 - accuracy: 0.3701 - val_loss: 0.2393 - val_abs_loss_function: 0.2388 - val_accuracy: 0.3427 - 173s/epoch - 634ms/step
Epoch 58/100
273/273 - 173s - loss: 0.2437 - abs_loss_function: 0.2432 - accuracy: 0.3440 - val_loss: 0.2497 - val_abs_loss_function: 0.2492 - val_accuracy: 0.3538 - 173s/epoch - 635ms/step
Epoch 59/100
273/273 - 173s - loss: 0.2353 - abs_loss_function: 0.2348 - accuracy: 0.3371 - val_loss: 0.2594 - val_abs_loss_function: 0.2589 - val_accuracy: 0.4274 - 173s/epoch - 634ms/step
Epoch 60/100
273/273 - 173s - loss: 0.2411 - abs_loss_function: 0.2406 - accuracy: 0.2924 - val_loss: 0.2575 - val_abs_loss_function: 0.2570 - val_accuracy: 0.3508 - 173s/epoch - 635ms/step
Epoch 61/100
273/273 - 173s - loss: 0.2426 - abs_loss_function: 0.2421 - accuracy: 0.3330 - val_loss: 0.2395 - val_abs_loss_function: 0.2390 - val_accuracy: 0.3357 - 173s/epoch - 634ms/step
Epoch 62/100
273/273 - 174s - loss: 0.2427 - abs_loss_function: 0.2423 - accuracy: 0.3285 - val_loss: 0.2360 - val_abs_loss_function: 0.2355 - val_accuracy: 0.2913 - 174s/epoch - 636ms/step
Epoch 63/100
273/273 - 174s - loss: 0.2449 - abs_loss_function: 0.2444 - accuracy: 0.2949 - val_loss: 0.2629 - val_abs_loss_function: 0.2624 - val_accuracy: 0.3024 - 174s/epoch - 636ms/step
Epoch 64/100
273/273 - 174s - loss: 0.2425 - abs_loss_function: 0.2420 - accuracy: 0.3534 - val_loss: 0.2412 - val_abs_loss_function: 0.2407 - val_accuracy: 0.4093 - 174s/epoch - 636ms/step
Epoch 65/100
273/273 - 173s - loss: 0.2418 - abs_loss_function: 0.2413 - accuracy: 0.2771 - val_loss: 0.2597 - val_abs_loss_function: 0.2592 - val_accuracy: 0.3599 - 173s/epoch - 636ms/step
Epoch 66/100
273/273 - 173s - loss: 0.2437 - abs_loss_function: 0.2432 - accuracy: 0.2991 - val_loss: 0.2706 - val_abs_loss_function: 0.2702 - val_accuracy: 0.4738 - 173s/epoch - 634ms/step
Epoch 67/100
273/273 - 173s - loss: 0.2428 - abs_loss_function: 0.2423 - accuracy: 0.3608 - val_loss: 0.2505 - val_abs_loss_function: 0.2500 - val_accuracy: 0.3216 - 173s/epoch - 635ms/step
Epoch 68/100
273/273 - 174s - loss: 0.2411 - abs_loss_function: 0.2406 - accuracy: 0.2780 - val_loss: 0.2704 - val_abs_loss_function: 0.2699 - val_accuracy: 0.4244 - 174s/epoch - 636ms/step
Epoch 69/100
273/273 - 174s - loss: 0.2387 - abs_loss_function: 0.2382 - accuracy: 0.3463 - val_loss: 0.2502 - val_abs_loss_function: 0.2497 - val_accuracy: 0.2792 - 174s/epoch - 636ms/step
Epoch 70/100
273/273 - 174s - loss: 0.2440 - abs_loss_function: 0.2435 - accuracy: 0.3196 - val_loss: 0.2354 - val_abs_loss_function: 0.2349 - val_accuracy: 0.4113 - 174s/epoch - 636ms/step
Epoch 71/100
273/273 - 174s - loss: 0.2481 - abs_loss_function: 0.2476 - accuracy: 0.3080 - val_loss: 0.2429 - val_abs_loss_function: 0.2424 - val_accuracy: 0.2298 - 174s/epoch - 636ms/step
Epoch 72/100
273/273 - 174s - loss: 0.2466 - abs_loss_function: 0.2461 - accuracy: 0.3207 - val_loss: 0.2385 - val_abs_loss_function: 0.2380 - val_accuracy: 0.2823 - 174s/epoch - 636ms/step
Epoch 73/100
273/273 - 174s - loss: 0.2440 - abs_loss_function: 0.2436 - accuracy: 0.3080 - val_loss: 0.2506 - val_abs_loss_function: 0.2501 - val_accuracy: 0.4133 - 174s/epoch - 636ms/step
Epoch 74/100
273/273 - 173s - loss: 0.2380 - abs_loss_function: 0.2375 - accuracy: 0.2995 - val_loss: 0.2791 - val_abs_loss_function: 0.2786 - val_accuracy: 0.4355 - 173s/epoch - 634ms/step
Epoch 75/100
273/273 - 174s - loss: 0.2479 - abs_loss_function: 0.2474 - accuracy: 0.3277 - val_loss: 0.2460 - val_abs_loss_function: 0.2455 - val_accuracy: 0.3700 - 174s/epoch - 636ms/step
Epoch 76/100
273/273 - 173s - loss: 0.2446 - abs_loss_function: 0.2441 - accuracy: 0.3307 - val_loss: 0.2688 - val_abs_loss_function: 0.2683 - val_accuracy: 0.1966 - 173s/epoch - 634ms/step
Epoch 77/100
273/273 - 173s - loss: 0.2381 - abs_loss_function: 0.2376 - accuracy: 0.2762 - val_loss: 0.2394 - val_abs_loss_function: 0.2390 - val_accuracy: 0.2843 - 173s/epoch - 635ms/step
Epoch 78/100
273/273 - 173s - loss: 0.2394 - abs_loss_function: 0.2389 - accuracy: 0.3291 - val_loss: 0.2425 - val_abs_loss_function: 0.2420 - val_accuracy: 0.2994 - 173s/epoch - 634ms/step
Epoch 79/100
273/273 - 174s - loss: 0.2461 - abs_loss_function: 0.2456 - accuracy: 0.3315 - val_loss: 0.2394 - val_abs_loss_function: 0.2389 - val_accuracy: 0.3790 - 174s/epoch - 636ms/step
Epoch 80/100
273/273 - 174s - loss: 0.2415 - abs_loss_function: 0.2410 - accuracy: 0.3345 - val_loss: 0.2310 - val_abs_loss_function: 0.2305 - val_accuracy: 0.2903 - 174s/epoch - 636ms/step
Epoch 81/100
273/273 - 173s - loss: 0.2480 - abs_loss_function: 0.2475 - accuracy: 0.3637 - val_loss: 0.2632 - val_abs_loss_function: 0.2627 - val_accuracy: 0.3558 - 173s/epoch - 633ms/step
Epoch 82/100
273/273 - 173s - loss: 0.2401 - abs_loss_function: 0.2396 - accuracy: 0.3444 - val_loss: 0.2369 - val_abs_loss_function: 0.2364 - val_accuracy: 0.3357 - 173s/epoch - 635ms/step
Epoch 83/100
273/273 - 173s - loss: 0.2379 - abs_loss_function: 0.2375 - accuracy: 0.3199 - val_loss: 0.2617 - val_abs_loss_function: 0.2612 - val_accuracy: 0.3337 - 173s/epoch - 634ms/step
Epoch 84/100
273/273 - 173s - loss: 0.2421 - abs_loss_function: 0.2416 - accuracy: 0.3235 - val_loss: 0.2373 - val_abs_loss_function: 0.2368 - val_accuracy: 0.2379 - 173s/epoch - 635ms/step
Epoch 85/100
273/273 - 173s - loss: 0.2418 - abs_loss_function: 0.2413 - accuracy: 0.3126 - val_loss: 0.2421 - val_abs_loss_function: 0.2416 - val_accuracy: 0.2308 - 173s/epoch - 635ms/step
Epoch 86/100
273/273 - 173s - loss: 0.2397 - abs_loss_function: 0.2392 - accuracy: 0.3306 - val_loss: 0.2530 - val_abs_loss_function: 0.2525 - val_accuracy: 0.3679 - 173s/epoch - 635ms/step
Epoch 87/100
273/273 - 173s - loss: 0.2385 - abs_loss_function: 0.2380 - accuracy: 0.2912 - val_loss: 0.2551 - val_abs_loss_function: 0.2546 - val_accuracy: 0.4264 - 173s/epoch - 635ms/step
Epoch 88/100
273/273 - 173s - loss: 0.2370 - abs_loss_function: 0.2366 - accuracy: 0.3020 - val_loss: 0.2585 - val_abs_loss_function: 0.2580 - val_accuracy: 0.3790 - 173s/epoch - 635ms/step
Epoch 89/100
273/273 - 173s - loss: 0.2413 - abs_loss_function: 0.2408 - accuracy: 0.3610 - val_loss: 0.2510 - val_abs_loss_function: 0.2505 - val_accuracy: 0.3296 - 173s/epoch - 635ms/step
Epoch 90/100
273/273 - 173s - loss: 0.2469 - abs_loss_function: 0.2464 - accuracy: 0.3357 - val_loss: 0.2501 - val_abs_loss_function: 0.2496 - val_accuracy: 0.3589 - 173s/epoch - 635ms/step
Epoch 91/100
273/273 - 173s - loss: 0.2418 - abs_loss_function: 0.2413 - accuracy: 0.3123 - val_loss: 0.2495 - val_abs_loss_function: 0.2490 - val_accuracy: 0.3417 - 173s/epoch - 635ms/step
Epoch 92/100
273/273 - 173s - loss: 0.2415 - abs_loss_function: 0.2411 - accuracy: 0.3116 - val_loss: 0.2668 - val_abs_loss_function: 0.2663 - val_accuracy: 0.4204 - 173s/epoch - 634ms/step
Epoch 93/100
273/273 - 174s - loss: 0.2435 - abs_loss_function: 0.2430 - accuracy: 0.3511 - val_loss: 0.2452 - val_abs_loss_function: 0.2447 - val_accuracy: 0.2933 - 174s/epoch - 636ms/step
Epoch 94/100
273/273 - 173s - loss: 0.2408 - abs_loss_function: 0.2403 - accuracy: 0.3539 - val_loss: 0.2651 - val_abs_loss_function: 0.2646 - val_accuracy: 0.4022 - 173s/epoch - 634ms/step
Epoch 95/100
273/273 - 173s - loss: 0.2412 - abs_loss_function: 0.2407 - accuracy: 0.3015 - val_loss: 0.2483 - val_abs_loss_function: 0.2478 - val_accuracy: 0.2863 - 173s/epoch - 634ms/step
Epoch 96/100
273/273 - 174s - loss: 0.2426 - abs_loss_function: 0.2421 - accuracy: 0.3298 - val_loss: 0.2608 - val_abs_loss_function: 0.2603 - val_accuracy: 0.3881 - 174s/epoch - 636ms/step
Epoch 97/100
273/273 - 173s - loss: 0.2447 - abs_loss_function: 0.2442 - accuracy: 0.3278 - val_loss: 0.2527 - val_abs_loss_function: 0.2522 - val_accuracy: 0.3972 - 173s/epoch - 634ms/step
Epoch 98/100
273/273 - 173s - loss: 0.2415 - abs_loss_function: 0.2410 - accuracy: 0.3276 - val_loss: 0.2535 - val_abs_loss_function: 0.2530 - val_accuracy: 0.2490 - 173s/epoch - 634ms/step
Epoch 99/100
273/273 - 173s - loss: 0.2403 - abs_loss_function: 0.2398 - accuracy: 0.2948 - val_loss: 0.2569 - val_abs_loss_function: 0.2564 - val_accuracy: 0.3145 - 173s/epoch - 634ms/step
Epoch 100/100
273/273 - 173s - loss: 0.2429 - abs_loss_function: 0.2424 - accuracy: 0.3294 - val_loss: 0.2620 - val_abs_loss_function: 0.2615 - val_accuracy: 0.3065 - 173s/epoch - 634ms/step
############### PREDICTIONS ###############
----------0----------
phi1 54.7
PHI 36.1
phi2 23.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 1s 774ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------1----------
phi1 76.0
PHI 83.7
phi2 2.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------2----------
phi1 17.8
PHI 63.8
phi2 50.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 25ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------3----------
phi1 17.5
PHI 15.5
phi2 50.4
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------4----------
phi1 47.5
PHI 32.6
phi2 29.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 23ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------5----------
phi1 33.3
PHI 39.6
phi2 28.5
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------6----------
phi1 60.8
PHI 28.2
phi2 9.9
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 26ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------7----------
phi1 26.6
PHI 6.8
phi2 75.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 23ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------8----------
phi1 39.3
PHI 40.9
phi2 7.6
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
----------9----------
phi1 3.9
PHI 87.4
phi2 25.8
1/1 [==============================] - ETA: 0s1/1 [==============================] - 0s 24ms/step
predicted values [[ 22.255547  70.54616  120.486664]]
############### PREDICTIONS ###############
 1/31 [..............................] - ETA: 9s - loss: 0.2567 - abs_loss_function: 0.2562 - accuracy: 0.4062 2/31 [>.............................] - ETA: 5s - loss: 0.2573 - abs_loss_function: 0.2568 - accuracy: 0.4062 3/31 [=>............................] - ETA: 5s - loss: 0.2585 - abs_loss_function: 0.2580 - accuracy: 0.4167 4/31 [==>...........................] - ETA: 5s - loss: 0.2592 - abs_loss_function: 0.2587 - accuracy: 0.4219 5/31 [===>..........................] - ETA: 5s - loss: 0.2599 - abs_loss_function: 0.2594 - accuracy: 0.4250 6/31 [====>.........................] - ETA: 4s - loss: 0.2602 - abs_loss_function: 0.2597 - accuracy: 0.4271 7/31 [=====>........................] - ETA: 4s - loss: 0.2608 - abs_loss_function: 0.2603 - accuracy: 0.4286 8/31 [======>.......................] - ETA: 4s - loss: 0.2612 - abs_loss_function: 0.2607 - accuracy: 0.4297 9/31 [=======>......................] - ETA: 4s - loss: 0.2619 - abs_loss_function: 0.2614 - accuracy: 0.427110/31 [========>.....................] - ETA: 4s - loss: 0.2624 - abs_loss_function: 0.2619 - accuracy: 0.425011/31 [=========>....................] - ETA: 3s - loss: 0.2628 - abs_loss_function: 0.2623 - accuracy: 0.423312/31 [==========>...................] - ETA: 3s - loss: 0.2633 - abs_loss_function: 0.2628 - accuracy: 0.421913/31 [===========>..................] - ETA: 3s - loss: 0.2636 - abs_loss_function: 0.2631 - accuracy: 0.420714/31 [============>.................] - ETA: 3s - loss: 0.2640 - abs_loss_function: 0.2635 - accuracy: 0.419615/31 [=============>................] - ETA: 3s - loss: 0.2646 - abs_loss_function: 0.2642 - accuracy: 0.418716/31 [==============>...............] - ETA: 2s - loss: 0.2652 - abs_loss_function: 0.2647 - accuracy: 0.416017/31 [===============>..............] - ETA: 2s - loss: 0.2656 - abs_loss_function: 0.2651 - accuracy: 0.415418/31 [================>.............] - ETA: 2s - loss: 0.2657 - abs_loss_function: 0.2652 - accuracy: 0.416719/31 [=================>............] - ETA: 2s - loss: 0.2657 - abs_loss_function: 0.2652 - accuracy: 0.416120/31 [==================>...........] - ETA: 2s - loss: 0.2655 - abs_loss_function: 0.2650 - accuracy: 0.415621/31 [===================>..........] - ETA: 1s - loss: 0.2656 - abs_loss_function: 0.2651 - accuracy: 0.415222/31 [====================>.........] - ETA: 1s - loss: 0.2660 - abs_loss_function: 0.2655 - accuracy: 0.414823/31 [=====================>........] - ETA: 1s - loss: 0.2664 - abs_loss_function: 0.2659 - accuracy: 0.413024/31 [======================>.......] - ETA: 1s - loss: 0.2671 - abs_loss_function: 0.2666 - accuracy: 0.412825/31 [=======================>......] - ETA: 1s - loss: 0.2675 - abs_loss_function: 0.2670 - accuracy: 0.411226/31 [========================>.....] - ETA: 0s - loss: 0.2677 - abs_loss_function: 0.2672 - accuracy: 0.409927/31 [=========================>....] - ETA: 0s - loss: 0.2678 - abs_loss_function: 0.2673 - accuracy: 0.408628/31 [==========================>...] - ETA: 0s - loss: 0.2679 - abs_loss_function: 0.2674 - accuracy: 0.407429/31 [===========================>..] - ETA: 0s - loss: 0.2681 - abs_loss_function: 0.2676 - accuracy: 0.405230/31 [============================>.] - ETA: 0s - loss: 0.2682 - abs_loss_function: 0.2677 - accuracy: 0.403131/31 [==============================] - ETA: 0s - loss: 0.2683 - abs_loss_function: 0.2678 - accuracy: 0.401231/31 [==============================] - 6s 194ms/step - loss: 0.2683 - abs_loss_function: 0.2678 - accuracy: 0.4012
test loss, test acc: [0.26825153827667236, 0.26775553822517395, 0.40120968222618103]

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15232371: <s202741-train> in cluster <dcc> Done

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Sun Jan 22 12:32:41 2023
Job was executed on host(s) <4*n-62-20-5>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Mon Jan 23 16:42:43 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Mon Jan 23 16:42:43 2023
Terminated at Mon Jan 23 21:33:20 2023
Results reported at Mon Jan 23 21:33:20 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 5:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter6/Logs/RMSprop_abs_loss_function_0001_model_k_%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter3.py 100 "RMSprop(learning_rate=0.001)" "abs_loss_function" "black_background_500x500.csv" 2 "RMSprop_abs_loss_function_0001_model_k_" "iter6" "load_model_k"

    
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21617.97 sec.
    Max Memory :                                 2617 MB
    Average Memory :                             2484.24 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17863.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   17438 sec.
    Turnaround time :                            118839 sec.

The output (if any) is above this job summary.

