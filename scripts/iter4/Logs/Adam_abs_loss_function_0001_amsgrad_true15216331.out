Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 13:35:10.774280: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 13:35:22.870633: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 13:35:22.873690: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 13:35:22.873702: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 13:35:35.497242: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 13:35:38.829314: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 14610 MB memory:  -> device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:af:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  Adam(learning_rate=0.001, amsgrad=True)
Loss function name:  abs_loss_function
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  Adam_abs_loss_function_0001_amsgrad_true
Output folder:  iter4
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 13:35:43.411122: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 75s - loss: 0.2396 - abs_loss_function: 0.2396 - accuracy: 0.3166 - val_loss: 0.2607 - val_abs_loss_function: 0.2607 - val_accuracy: 0.2923 - 75s/epoch - 274ms/step
Epoch 2/100
273/273 - 72s - loss: 0.2449 - abs_loss_function: 0.2449 - accuracy: 0.3214 - val_loss: 0.2520 - val_abs_loss_function: 0.2520 - val_accuracy: 0.2903 - 72s/epoch - 265ms/step
Epoch 3/100
273/273 - 73s - loss: 0.2372 - abs_loss_function: 0.2372 - accuracy: 0.3411 - val_loss: 0.2644 - val_abs_loss_function: 0.2644 - val_accuracy: 0.1986 - 73s/epoch - 269ms/step
Epoch 4/100
273/273 - 77s - loss: 0.2355 - abs_loss_function: 0.2355 - accuracy: 0.3264 - val_loss: 0.2461 - val_abs_loss_function: 0.2461 - val_accuracy: 0.2379 - 77s/epoch - 281ms/step
Epoch 5/100
273/273 - 68s - loss: 0.2406 - abs_loss_function: 0.2406 - accuracy: 0.3465 - val_loss: 0.2492 - val_abs_loss_function: 0.2492 - val_accuracy: 0.2288 - 68s/epoch - 249ms/step
Epoch 6/100
273/273 - 68s - loss: 0.2419 - abs_loss_function: 0.2419 - accuracy: 0.3044 - val_loss: 0.2390 - val_abs_loss_function: 0.2390 - val_accuracy: 0.2873 - 68s/epoch - 250ms/step
Epoch 7/100
273/273 - 66s - loss: 0.2392 - abs_loss_function: 0.2392 - accuracy: 0.3096 - val_loss: 0.2533 - val_abs_loss_function: 0.2533 - val_accuracy: 0.1946 - 66s/epoch - 241ms/step
Epoch 8/100
273/273 - 68s - loss: 0.2413 - abs_loss_function: 0.2413 - accuracy: 0.3243 - val_loss: 0.2399 - val_abs_loss_function: 0.2399 - val_accuracy: 0.3508 - 68s/epoch - 250ms/step
Epoch 9/100
273/273 - 73s - loss: 0.2398 - abs_loss_function: 0.2398 - accuracy: 0.3193 - val_loss: 0.2637 - val_abs_loss_function: 0.2637 - val_accuracy: 0.2883 - 73s/epoch - 266ms/step
Epoch 10/100
273/273 - 69s - loss: 0.2443 - abs_loss_function: 0.2443 - accuracy: 0.3186 - val_loss: 0.2515 - val_abs_loss_function: 0.2515 - val_accuracy: 0.3226 - 69s/epoch - 252ms/step
Epoch 11/100
273/273 - 68s - loss: 0.2413 - abs_loss_function: 0.2413 - accuracy: 0.3065 - val_loss: 0.2307 - val_abs_loss_function: 0.2307 - val_accuracy: 0.4022 - 68s/epoch - 250ms/step
Epoch 12/100
273/273 - 68s - loss: 0.2464 - abs_loss_function: 0.2464 - accuracy: 0.3115 - val_loss: 0.2449 - val_abs_loss_function: 0.2449 - val_accuracy: 0.4224 - 68s/epoch - 249ms/step
Epoch 13/100
273/273 - 66s - loss: 0.2373 - abs_loss_function: 0.2373 - accuracy: 0.3301 - val_loss: 0.2436 - val_abs_loss_function: 0.2436 - val_accuracy: 0.3599 - 66s/epoch - 242ms/step
Epoch 14/100
273/273 - 65s - loss: 0.2382 - abs_loss_function: 0.2382 - accuracy: 0.2969 - val_loss: 0.2471 - val_abs_loss_function: 0.2471 - val_accuracy: 0.3649 - 65s/epoch - 239ms/step
Epoch 15/100
273/273 - 67s - loss: 0.2488 - abs_loss_function: 0.2488 - accuracy: 0.3257 - val_loss: 0.2429 - val_abs_loss_function: 0.2429 - val_accuracy: 0.4980 - 67s/epoch - 244ms/step
Epoch 16/100
273/273 - 68s - loss: 0.2428 - abs_loss_function: 0.2428 - accuracy: 0.3310 - val_loss: 0.2363 - val_abs_loss_function: 0.2363 - val_accuracy: 0.4355 - 68s/epoch - 249ms/step
Epoch 17/100
273/273 - 69s - loss: 0.2498 - abs_loss_function: 0.2498 - accuracy: 0.3156 - val_loss: 0.2653 - val_abs_loss_function: 0.2653 - val_accuracy: 0.4677 - 69s/epoch - 251ms/step
Epoch 18/100
273/273 - 70s - loss: 0.2414 - abs_loss_function: 0.2414 - accuracy: 0.3483 - val_loss: 0.2679 - val_abs_loss_function: 0.2679 - val_accuracy: 0.2853 - 70s/epoch - 258ms/step
Epoch 19/100
273/273 - 67s - loss: 0.2408 - abs_loss_function: 0.2408 - accuracy: 0.3323 - val_loss: 0.2555 - val_abs_loss_function: 0.2555 - val_accuracy: 0.2712 - 67s/epoch - 247ms/step
Epoch 20/100
273/273 - 67s - loss: 0.2413 - abs_loss_function: 0.2413 - accuracy: 0.3608 - val_loss: 0.2513 - val_abs_loss_function: 0.2513 - val_accuracy: 0.4133 - 67s/epoch - 246ms/step
Epoch 21/100
273/273 - 66s - loss: 0.2482 - abs_loss_function: 0.2482 - accuracy: 0.3709 - val_loss: 0.2710 - val_abs_loss_function: 0.2710 - val_accuracy: 0.2913 - 66s/epoch - 241ms/step
Epoch 22/100
273/273 - 67s - loss: 0.2335 - abs_loss_function: 0.2335 - accuracy: 0.3712 - val_loss: 0.2462 - val_abs_loss_function: 0.2462 - val_accuracy: 0.4264 - 67s/epoch - 244ms/step
Epoch 23/100
273/273 - 69s - loss: 0.2412 - abs_loss_function: 0.2412 - accuracy: 0.3503 - val_loss: 0.2370 - val_abs_loss_function: 0.2370 - val_accuracy: 0.2792 - 69s/epoch - 254ms/step
Epoch 24/100
273/273 - 66s - loss: 0.2368 - abs_loss_function: 0.2368 - accuracy: 0.3118 - val_loss: 0.2724 - val_abs_loss_function: 0.2724 - val_accuracy: 0.3831 - 66s/epoch - 243ms/step
Epoch 25/100
273/273 - 67s - loss: 0.2382 - abs_loss_function: 0.2382 - accuracy: 0.3155 - val_loss: 0.2691 - val_abs_loss_function: 0.2691 - val_accuracy: 0.4627 - 67s/epoch - 245ms/step
Epoch 26/100
273/273 - 68s - loss: 0.2434 - abs_loss_function: 0.2434 - accuracy: 0.3269 - val_loss: 0.2685 - val_abs_loss_function: 0.2685 - val_accuracy: 0.3155 - 68s/epoch - 248ms/step
Epoch 27/100
273/273 - 67s - loss: 0.2391 - abs_loss_function: 0.2391 - accuracy: 0.3467 - val_loss: 0.2353 - val_abs_loss_function: 0.2353 - val_accuracy: 0.4143 - 67s/epoch - 246ms/step
Epoch 28/100
273/273 - 69s - loss: 0.2394 - abs_loss_function: 0.2394 - accuracy: 0.3500 - val_loss: 0.2540 - val_abs_loss_function: 0.2540 - val_accuracy: 0.2399 - 69s/epoch - 252ms/step
Epoch 29/100
273/273 - 69s - loss: 0.2469 - abs_loss_function: 0.2469 - accuracy: 0.3221 - val_loss: 0.2325 - val_abs_loss_function: 0.2325 - val_accuracy: 0.4103 - 69s/epoch - 252ms/step
Epoch 30/100
273/273 - 69s - loss: 0.2424 - abs_loss_function: 0.2424 - accuracy: 0.3211 - val_loss: 0.2466 - val_abs_loss_function: 0.2466 - val_accuracy: 0.3236 - 69s/epoch - 252ms/step
Epoch 31/100
273/273 - 68s - loss: 0.2453 - abs_loss_function: 0.2453 - accuracy: 0.3246 - val_loss: 0.2410 - val_abs_loss_function: 0.2410 - val_accuracy: 0.3438 - 68s/epoch - 250ms/step
Epoch 32/100
273/273 - 68s - loss: 0.2470 - abs_loss_function: 0.2470 - accuracy: 0.3456 - val_loss: 0.2620 - val_abs_loss_function: 0.2620 - val_accuracy: 0.3952 - 68s/epoch - 248ms/step
Epoch 33/100
273/273 - 68s - loss: 0.2462 - abs_loss_function: 0.2462 - accuracy: 0.3389 - val_loss: 0.2809 - val_abs_loss_function: 0.2809 - val_accuracy: 0.3710 - 68s/epoch - 249ms/step
Epoch 34/100
273/273 - 67s - loss: 0.2454 - abs_loss_function: 0.2454 - accuracy: 0.3575 - val_loss: 0.2578 - val_abs_loss_function: 0.2578 - val_accuracy: 0.2500 - 67s/epoch - 247ms/step
Epoch 35/100
273/273 - 68s - loss: 0.2476 - abs_loss_function: 0.2476 - accuracy: 0.3151 - val_loss: 0.2610 - val_abs_loss_function: 0.2610 - val_accuracy: 0.3075 - 68s/epoch - 249ms/step
Epoch 36/100
273/273 - 67s - loss: 0.2467 - abs_loss_function: 0.2467 - accuracy: 0.2817 - val_loss: 0.2402 - val_abs_loss_function: 0.2402 - val_accuracy: 0.1583 - 67s/epoch - 245ms/step
Epoch 37/100
273/273 - 66s - loss: 0.2399 - abs_loss_function: 0.2399 - accuracy: 0.3209 - val_loss: 0.2681 - val_abs_loss_function: 0.2681 - val_accuracy: 0.3952 - 66s/epoch - 242ms/step
Epoch 38/100
273/273 - 67s - loss: 0.2543 - abs_loss_function: 0.2543 - accuracy: 0.3742 - val_loss: 0.2508 - val_abs_loss_function: 0.2508 - val_accuracy: 0.3952 - 67s/epoch - 247ms/step
Epoch 39/100
273/273 - 66s - loss: 0.2493 - abs_loss_function: 0.2493 - accuracy: 0.3209 - val_loss: 0.2561 - val_abs_loss_function: 0.2561 - val_accuracy: 0.3821 - 66s/epoch - 242ms/step
Epoch 40/100
273/273 - 67s - loss: 0.2437 - abs_loss_function: 0.2437 - accuracy: 0.3443 - val_loss: 0.2458 - val_abs_loss_function: 0.2458 - val_accuracy: 0.2833 - 67s/epoch - 246ms/step
Epoch 41/100
273/273 - 69s - loss: 0.2492 - abs_loss_function: 0.2492 - accuracy: 0.3420 - val_loss: 0.2487 - val_abs_loss_function: 0.2487 - val_accuracy: 0.4153 - 69s/epoch - 251ms/step
Epoch 42/100
273/273 - 69s - loss: 0.2424 - abs_loss_function: 0.2424 - accuracy: 0.3325 - val_loss: 0.2440 - val_abs_loss_function: 0.2440 - val_accuracy: 0.4042 - 69s/epoch - 252ms/step
Epoch 43/100
273/273 - 74s - loss: 0.2515 - abs_loss_function: 0.2515 - accuracy: 0.3785 - val_loss: 0.2451 - val_abs_loss_function: 0.2451 - val_accuracy: 0.2258 - 74s/epoch - 269ms/step
Epoch 44/100
273/273 - 67s - loss: 0.2409 - abs_loss_function: 0.2409 - accuracy: 0.3308 - val_loss: 0.2405 - val_abs_loss_function: 0.2405 - val_accuracy: 0.4274 - 67s/epoch - 246ms/step
Epoch 45/100
273/273 - 67s - loss: 0.2448 - abs_loss_function: 0.2448 - accuracy: 0.3341 - val_loss: 0.2666 - val_abs_loss_function: 0.2666 - val_accuracy: 0.3095 - 67s/epoch - 246ms/step
Epoch 46/100
273/273 - 67s - loss: 0.2418 - abs_loss_function: 0.2418 - accuracy: 0.3150 - val_loss: 0.2634 - val_abs_loss_function: 0.2634 - val_accuracy: 0.3105 - 67s/epoch - 246ms/step
Epoch 47/100
273/273 - 68s - loss: 0.2475 - abs_loss_function: 0.2475 - accuracy: 0.3231 - val_loss: 0.2492 - val_abs_loss_function: 0.2492 - val_accuracy: 0.2429 - 68s/epoch - 248ms/step
Epoch 48/100
273/273 - 68s - loss: 0.2447 - abs_loss_function: 0.2447 - accuracy: 0.3614 - val_loss: 0.2662 - val_abs_loss_function: 0.2662 - val_accuracy: 0.4093 - 68s/epoch - 249ms/step
Epoch 49/100
273/273 - 67s - loss: 0.2407 - abs_loss_function: 0.2407 - accuracy: 0.3023 - val_loss: 0.2488 - val_abs_loss_function: 0.2488 - val_accuracy: 0.2339 - 67s/epoch - 246ms/step
Epoch 50/100
273/273 - 67s - loss: 0.2516 - abs_loss_function: 0.2516 - accuracy: 0.3447 - val_loss: 0.2737 - val_abs_loss_function: 0.2737 - val_accuracy: 0.2853 - 67s/epoch - 246ms/step
Epoch 51/100
273/273 - 68s - loss: 0.2551 - abs_loss_function: 0.2551 - accuracy: 0.3223 - val_loss: 0.2650 - val_abs_loss_function: 0.2650 - val_accuracy: 0.3024 - 68s/epoch - 247ms/step
Epoch 52/100
273/273 - 67s - loss: 0.2455 - abs_loss_function: 0.2455 - accuracy: 0.3656 - val_loss: 0.2540 - val_abs_loss_function: 0.2540 - val_accuracy: 0.4435 - 67s/epoch - 247ms/step
Epoch 53/100
273/273 - 66s - loss: 0.2420 - abs_loss_function: 0.2420 - accuracy: 0.2835 - val_loss: 0.2695 - val_abs_loss_function: 0.2695 - val_accuracy: 0.3649 - 66s/epoch - 241ms/step
Epoch 54/100
273/273 - 65s - loss: 0.2478 - abs_loss_function: 0.2478 - accuracy: 0.3024 - val_loss: 0.2376 - val_abs_loss_function: 0.2376 - val_accuracy: 0.4234 - 65s/epoch - 236ms/step
Epoch 55/100
273/273 - 65s - loss: 0.2481 - abs_loss_function: 0.2481 - accuracy: 0.3383 - val_loss: 0.2403 - val_abs_loss_function: 0.2403 - val_accuracy: 0.2460 - 65s/epoch - 239ms/step
Epoch 56/100
273/273 - 65s - loss: 0.2524 - abs_loss_function: 0.2524 - accuracy: 0.2832 - val_loss: 0.2483 - val_abs_loss_function: 0.2483 - val_accuracy: 0.2954 - 65s/epoch - 236ms/step
Epoch 57/100
273/273 - 65s - loss: 0.2439 - abs_loss_function: 0.2439 - accuracy: 0.2988 - val_loss: 0.2651 - val_abs_loss_function: 0.2651 - val_accuracy: 0.2903 - 65s/epoch - 237ms/step
Epoch 58/100
273/273 - 68s - loss: 0.2464 - abs_loss_function: 0.2464 - accuracy: 0.3526 - val_loss: 0.2476 - val_abs_loss_function: 0.2476 - val_accuracy: 0.2853 - 68s/epoch - 250ms/step
Epoch 59/100
273/273 - 63s - loss: 0.2504 - abs_loss_function: 0.2504 - accuracy: 0.3078 - val_loss: 0.2626 - val_abs_loss_function: 0.2626 - val_accuracy: 0.2974 - 63s/epoch - 231ms/step
Epoch 60/100
273/273 - 67s - loss: 0.2465 - abs_loss_function: 0.2465 - accuracy: 0.2999 - val_loss: 0.2467 - val_abs_loss_function: 0.2467 - val_accuracy: 0.3851 - 67s/epoch - 244ms/step
Epoch 61/100
273/273 - 66s - loss: 0.2447 - abs_loss_function: 0.2447 - accuracy: 0.3527 - val_loss: 0.2633 - val_abs_loss_function: 0.2633 - val_accuracy: 0.3266 - 66s/epoch - 241ms/step
Epoch 62/100
273/273 - 66s - loss: 0.2441 - abs_loss_function: 0.2441 - accuracy: 0.3185 - val_loss: 0.2608 - val_abs_loss_function: 0.2608 - val_accuracy: 0.3317 - 66s/epoch - 241ms/step
Epoch 63/100
273/273 - 67s - loss: 0.2444 - abs_loss_function: 0.2444 - accuracy: 0.3228 - val_loss: 0.2632 - val_abs_loss_function: 0.2632 - val_accuracy: 0.3982 - 67s/epoch - 245ms/step
Epoch 64/100
273/273 - 68s - loss: 0.2408 - abs_loss_function: 0.2408 - accuracy: 0.3309 - val_loss: 0.2697 - val_abs_loss_function: 0.2697 - val_accuracy: 0.2954 - 68s/epoch - 247ms/step
Epoch 65/100
273/273 - 65s - loss: 0.2495 - abs_loss_function: 0.2495 - accuracy: 0.3639 - val_loss: 0.2398 - val_abs_loss_function: 0.2398 - val_accuracy: 0.3921 - 65s/epoch - 239ms/step
Epoch 66/100
273/273 - 65s - loss: 0.2529 - abs_loss_function: 0.2529 - accuracy: 0.3384 - val_loss: 0.2472 - val_abs_loss_function: 0.2472 - val_accuracy: 0.4173 - 65s/epoch - 237ms/step
Epoch 67/100
273/273 - 63s - loss: 0.2454 - abs_loss_function: 0.2454 - accuracy: 0.3007 - val_loss: 0.2413 - val_abs_loss_function: 0.2413 - val_accuracy: 0.3075 - 63s/epoch - 232ms/step
Epoch 68/100
273/273 - 65s - loss: 0.2402 - abs_loss_function: 0.2402 - accuracy: 0.3227 - val_loss: 0.2708 - val_abs_loss_function: 0.2708 - val_accuracy: 0.1492 - 65s/epoch - 237ms/step
Epoch 69/100
273/273 - 64s - loss: 0.2489 - abs_loss_function: 0.2489 - accuracy: 0.3222 - val_loss: 0.2464 - val_abs_loss_function: 0.2464 - val_accuracy: 0.3679 - 64s/epoch - 233ms/step
Epoch 70/100
273/273 - 65s - loss: 0.2478 - abs_loss_function: 0.2478 - accuracy: 0.3466 - val_loss: 0.2371 - val_abs_loss_function: 0.2371 - val_accuracy: 0.2359 - 65s/epoch - 239ms/step
Epoch 71/100
273/273 - 64s - loss: 0.2393 - abs_loss_function: 0.2393 - accuracy: 0.3385 - val_loss: 0.2550 - val_abs_loss_function: 0.2550 - val_accuracy: 0.3367 - 64s/epoch - 233ms/step
Epoch 72/100
273/273 - 67s - loss: 0.2415 - abs_loss_function: 0.2415 - accuracy: 0.3274 - val_loss: 0.2779 - val_abs_loss_function: 0.2779 - val_accuracy: 0.3458 - 67s/epoch - 246ms/step
Epoch 73/100
273/273 - 70s - loss: 0.2387 - abs_loss_function: 0.2387 - accuracy: 0.2990 - val_loss: 0.2372 - val_abs_loss_function: 0.2372 - val_accuracy: 0.3407 - 70s/epoch - 256ms/step
Epoch 74/100
273/273 - 65s - loss: 0.2445 - abs_loss_function: 0.2445 - accuracy: 0.3354 - val_loss: 0.2444 - val_abs_loss_function: 0.2444 - val_accuracy: 0.2762 - 65s/epoch - 239ms/step
Epoch 75/100
273/273 - 65s - loss: 0.2472 - abs_loss_function: 0.2472 - accuracy: 0.3286 - val_loss: 0.2518 - val_abs_loss_function: 0.2518 - val_accuracy: 0.2530 - 65s/epoch - 239ms/step
Epoch 76/100
273/273 - 68s - loss: 0.2513 - abs_loss_function: 0.2513 - accuracy: 0.3570 - val_loss: 0.2654 - val_abs_loss_function: 0.2654 - val_accuracy: 0.4808 - 68s/epoch - 248ms/step
Epoch 77/100
273/273 - 63s - loss: 0.2469 - abs_loss_function: 0.2469 - accuracy: 0.3032 - val_loss: 0.2283 - val_abs_loss_function: 0.2283 - val_accuracy: 0.1976 - 63s/epoch - 231ms/step
Epoch 78/100
273/273 - 61s - loss: 0.2555 - abs_loss_function: 0.2555 - accuracy: 0.3391 - val_loss: 0.2526 - val_abs_loss_function: 0.2526 - val_accuracy: 0.3155 - 61s/epoch - 224ms/step
Epoch 79/100
273/273 - 66s - loss: 0.2457 - abs_loss_function: 0.2457 - accuracy: 0.3666 - val_loss: 0.2589 - val_abs_loss_function: 0.2589 - val_accuracy: 0.2540 - 66s/epoch - 241ms/step
Epoch 80/100
273/273 - 66s - loss: 0.2425 - abs_loss_function: 0.2425 - accuracy: 0.3672 - val_loss: 0.2397 - val_abs_loss_function: 0.2397 - val_accuracy: 0.4113 - 66s/epoch - 241ms/step
Epoch 81/100
273/273 - 64s - loss: 0.2517 - abs_loss_function: 0.2517 - accuracy: 0.2864 - val_loss: 0.2679 - val_abs_loss_function: 0.2679 - val_accuracy: 0.3246 - 64s/epoch - 234ms/step
Epoch 82/100
273/273 - 66s - loss: 0.2511 - abs_loss_function: 0.2511 - accuracy: 0.3091 - val_loss: 0.2550 - val_abs_loss_function: 0.2550 - val_accuracy: 0.3760 - 66s/epoch - 240ms/step
Epoch 83/100
273/273 - 64s - loss: 0.2567 - abs_loss_function: 0.2567 - accuracy: 0.3478 - val_loss: 0.2431 - val_abs_loss_function: 0.2431 - val_accuracy: 0.3911 - 64s/epoch - 236ms/step
Epoch 84/100
273/273 - 65s - loss: 0.2455 - abs_loss_function: 0.2455 - accuracy: 0.3205 - val_loss: 0.2585 - val_abs_loss_function: 0.2585 - val_accuracy: 0.3780 - 65s/epoch - 238ms/step
Epoch 85/100
273/273 - 61s - loss: 0.2400 - abs_loss_function: 0.2400 - accuracy: 0.3237 - val_loss: 0.2530 - val_abs_loss_function: 0.2530 - val_accuracy: 0.3861 - 61s/epoch - 222ms/step
Epoch 86/100
273/273 - 63s - loss: 0.2541 - abs_loss_function: 0.2541 - accuracy: 0.3749 - val_loss: 0.2532 - val_abs_loss_function: 0.2532 - val_accuracy: 0.2732 - 63s/epoch - 232ms/step
Epoch 87/100
273/273 - 64s - loss: 0.2468 - abs_loss_function: 0.2468 - accuracy: 0.3595 - val_loss: 0.2467 - val_abs_loss_function: 0.2467 - val_accuracy: 0.3659 - 64s/epoch - 233ms/step
Epoch 88/100
273/273 - 65s - loss: 0.2478 - abs_loss_function: 0.2478 - accuracy: 0.3563 - val_loss: 0.2722 - val_abs_loss_function: 0.2722 - val_accuracy: 0.3710 - 65s/epoch - 240ms/step
Epoch 89/100
273/273 - 65s - loss: 0.2454 - abs_loss_function: 0.2454 - accuracy: 0.3464 - val_loss: 0.2523 - val_abs_loss_function: 0.2523 - val_accuracy: 0.2510 - 65s/epoch - 236ms/step
Epoch 90/100
273/273 - 66s - loss: 0.2484 - abs_loss_function: 0.2484 - accuracy: 0.3615 - val_loss: 0.2543 - val_abs_loss_function: 0.2543 - val_accuracy: 0.4052 - 66s/epoch - 241ms/step
Epoch 91/100
273/273 - 65s - loss: 0.2454 - abs_loss_function: 0.2454 - accuracy: 0.2938 - val_loss: 0.2570 - val_abs_loss_function: 0.2570 - val_accuracy: 0.3175 - 65s/epoch - 238ms/step
Epoch 92/100
273/273 - 66s - loss: 0.2496 - abs_loss_function: 0.2496 - accuracy: 0.2748 - val_loss: 0.2304 - val_abs_loss_function: 0.2304 - val_accuracy: 0.2863 - 66s/epoch - 240ms/step
Epoch 93/100
273/273 - 65s - loss: 0.2408 - abs_loss_function: 0.2408 - accuracy: 0.3302 - val_loss: 0.2198 - val_abs_loss_function: 0.2198 - val_accuracy: 0.3266 - 65s/epoch - 237ms/step
Epoch 94/100
273/273 - 64s - loss: 0.2480 - abs_loss_function: 0.2480 - accuracy: 0.3229 - val_loss: 0.2343 - val_abs_loss_function: 0.2343 - val_accuracy: 0.3498 - 64s/epoch - 235ms/step
Epoch 95/100
273/273 - 65s - loss: 0.2436 - abs_loss_function: 0.2436 - accuracy: 0.2960 - val_loss: 0.2331 - val_abs_loss_function: 0.2331 - val_accuracy: 0.3407 - 65s/epoch - 240ms/step
Epoch 96/100
273/273 - 65s - loss: 0.2440 - abs_loss_function: 0.2440 - accuracy: 0.2779 - val_loss: 0.2206 - val_abs_loss_function: 0.2206 - val_accuracy: 0.3226 - 65s/epoch - 237ms/step
Epoch 97/100
273/273 - 65s - loss: 0.2498 - abs_loss_function: 0.2498 - accuracy: 0.3012 - val_loss: 0.2505 - val_abs_loss_function: 0.2505 - val_accuracy: 0.4385 - 65s/epoch - 239ms/step
Epoch 98/100
273/273 - 65s - loss: 0.2402 - abs_loss_function: 0.2402 - accuracy: 0.3175 - val_loss: 0.2413 - val_abs_loss_function: 0.2413 - val_accuracy: 0.4022 - 65s/epoch - 238ms/step
Epoch 99/100
273/273 - 65s - loss: 0.2476 - abs_loss_function: 0.2476 - accuracy: 0.3559 - val_loss: 0.2318 - val_abs_loss_function: 0.2318 - val_accuracy: 0.2621 - 65s/epoch - 239ms/step
Epoch 100/100
273/273 - 64s - loss: 0.2439 - abs_loss_function: 0.2439 - accuracy: 0.3286 - val_loss: 0.2746 - val_abs_loss_function: 0.2746 - val_accuracy: 0.3337 - 64s/epoch - 236ms/step
Traceback (most recent call last):
  File "/zhome/ab/7/153983/project/trainModelIter2.py", line 235, in <module>
    plt.savefig("{}/Graphs/{}_Image_{}.png".format(out_path, random_id_str, unique_name))
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/pyplot.py", line 944, in savefig
    res = fig.savefig(*args, **kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/figure.py", line 3277, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backend_bases.py", line 2338, in print_figure
    result = print_method(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backend_bases.py", line 2204, in <lambda>
    print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/_api/deprecation.py", line 410, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py", line 520, in print_png
    self._print_pil(filename_or_obj, "png", pil_kwargs, metadata)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py", line 467, in _print_pil
    mpl.image.imsave(
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/matplotlib/image.py", line 1656, in imsave
    image.save(fname, **pil_kwargs)
  File "/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/PIL/Image.py", line 2317, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: 'iter4/Graphs/c544efac97f511ed8728b47af1dc128c_Image_Adam_abs_loss_function_0001_amsgrad_true.png'

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15216331: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Thu Jan 19 13:28:35 2023
Job was executed on host(s) <4*n-62-20-6>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 13:35:04 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 13:35:04 2023
Terminated at Thu Jan 19 15:26:57 2023
Results reported at Thu Jan 19 15:26:57 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 3:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter4/Logs/Adam_abs_loss_function_0001_amsgrad_true%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "Adam(learning_rate=0.001, amsgrad=True)" "abs_loss_function" "black_background_500x500.csv" 2 "Adam_abs_loss_function_0001_amsgrad_true" "iter4"

    
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   8117.05 sec.
    Max Memory :                                 2468 MB
    Average Memory :                             2350.64 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               18012.00 MB
    Max Swap :                                   2 MB
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   6714 sec.
    Turnaround time :                            7102 sec.

The output (if any) is above this job summary.

