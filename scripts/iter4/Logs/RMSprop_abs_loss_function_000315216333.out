Loaded dependency [python3/3.10.7]: gcc/11.3.0-binutils-2.38
Loaded module: python3/3.10.7

Loading python3/3.10.7
  Loading requirement: gcc/11.3.0-binutils-2.38
Loaded module: cuda/11.6
Loaded module: cudnn/v8.3.2.44-prod-cuda-11.X
2023-01-19 15:27:36.777883: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 15:27:57.885058: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 15:27:57.886089: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /appl/cudnn/v8.3.2.44-prod-cuda-11.5/lib:/appl/cuda/11.6.0/lib64:/appl/python/3.10.7/lib:/appl/gcc/11.3.0-binutils-2.38/lib64:/appl/gcc/11.3.0-binutils-2.38/lib:/lsf/10.1/linux3.10-glibc2.17-x86_64/lib
2023-01-19 15:27:57.886102: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-19 15:28:35.640896: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-19 15:28:41.406387: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30961 MB memory:  -> device: 0, name: Tesla V100-SXM2-32GB, pci bus id: 0000:3b:00.0, compute capability: 7.0
Epochs:  100
Optimizer:  RMSprop(learning_rate=0.003)
Loss function name:  abs_loss_function
Csv file used:  black_background_500x500.csv
Verbose:  2
Unique name:  RMSprop_abs_loss_function_0003
Output folder:  iter4
 ################ MODEL ############### 
 
inputs = keras.Input(shape=(input_size, input_size, 1))
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(inputs)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.Conv2D(filters=32, kernel_size=3, activation="relu")(x)
x = layers.MaxPooling2D(pool_size=4)(x)
x = layers.Flatten()(x)
x = layers.Dense(128, activation="relu")(x)
x = layers.Dense(16, activation="relu")(x)
outputs = layers.Dense(3)(x)


Model: "model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 input_1 (InputLayer)        [(None, 500, 500, 1)]     0         
                                                                 
 conv2d (Conv2D)             (None, 498, 498, 32)      320       
                                                                 
 conv2d_1 (Conv2D)           (None, 496, 496, 32)      9248      
                                                                 
 max_pooling2d (MaxPooling2D  (None, 124, 124, 32)     0         
 )                                                               
                                                                 
 conv2d_2 (Conv2D)           (None, 122, 122, 32)      9248      
                                                                 
 conv2d_3 (Conv2D)           (None, 120, 120, 32)      9248      
                                                                 
 max_pooling2d_1 (MaxPooling  (None, 30, 30, 32)       0         
 2D)                                                             
                                                                 
 conv2d_4 (Conv2D)           (None, 28, 28, 32)        9248      
                                                                 
 conv2d_5 (Conv2D)           (None, 26, 26, 32)        9248      
                                                                 
 max_pooling2d_2 (MaxPooling  (None, 6, 6, 32)         0         
 2D)                                                             
                                                                 
 flatten (Flatten)           (None, 1152)              0         
                                                                 
 dense (Dense)               (None, 128)               147584    
                                                                 
 dense_1 (Dense)             (None, 16)                2064      
                                                                 
 dense_2 (Dense)             (None, 3)                 51        
                                                                 
=================================================================
Total params: 196,259
Trainable params: 196,259
Non-trainable params: 0
_________________________________________________________________
/zhome/ab/7/153983/project/venv/lib/python3.10/site-packages/keras/utils/image_utils.py:409: UserWarning: grayscale is deprecated. Please use color_mode = "grayscale"
  warnings.warn(
Epoch 1/100
2023-01-19 15:28:47.173146: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8302
273/273 - 173s - loss: 0.5985 - abs_loss_function: 0.5985 - accuracy: 0.3151 - val_loss: 0.2596 - val_abs_loss_function: 0.2596 - val_accuracy: 0.2923 - 173s/epoch - 633ms/step
Epoch 2/100
273/273 - 150s - loss: 0.2432 - abs_loss_function: 0.2432 - accuracy: 0.3116 - val_loss: 0.2623 - val_abs_loss_function: 0.2623 - val_accuracy: 0.2944 - 150s/epoch - 551ms/step
Epoch 3/100
273/273 - 117s - loss: 0.2430 - abs_loss_function: 0.2430 - accuracy: 0.3131 - val_loss: 0.2520 - val_abs_loss_function: 0.2520 - val_accuracy: 0.4224 - 117s/epoch - 428ms/step
Epoch 4/100
273/273 - 74s - loss: 0.2373 - abs_loss_function: 0.2373 - accuracy: 0.3045 - val_loss: 0.2439 - val_abs_loss_function: 0.2439 - val_accuracy: 0.2661 - 74s/epoch - 270ms/step
Epoch 5/100
273/273 - 70s - loss: 0.2371 - abs_loss_function: 0.2371 - accuracy: 0.3315 - val_loss: 0.2432 - val_abs_loss_function: 0.2432 - val_accuracy: 0.2188 - 70s/epoch - 255ms/step
Epoch 6/100
273/273 - 77s - loss: 0.2435 - abs_loss_function: 0.2435 - accuracy: 0.3183 - val_loss: 0.2608 - val_abs_loss_function: 0.2608 - val_accuracy: 0.4758 - 77s/epoch - 282ms/step
Epoch 7/100
273/273 - 76s - loss: 0.2416 - abs_loss_function: 0.2416 - accuracy: 0.3603 - val_loss: 0.2519 - val_abs_loss_function: 0.2519 - val_accuracy: 0.3478 - 76s/epoch - 278ms/step
Epoch 8/100
273/273 - 68s - loss: 0.2421 - abs_loss_function: 0.2421 - accuracy: 0.3225 - val_loss: 0.2694 - val_abs_loss_function: 0.2694 - val_accuracy: 0.3891 - 68s/epoch - 249ms/step
Epoch 9/100
273/273 - 68s - loss: 0.2409 - abs_loss_function: 0.2409 - accuracy: 0.3757 - val_loss: 0.2623 - val_abs_loss_function: 0.2623 - val_accuracy: 0.3518 - 68s/epoch - 249ms/step
Epoch 10/100
273/273 - 79s - loss: 0.2423 - abs_loss_function: 0.2423 - accuracy: 0.2668 - val_loss: 0.2379 - val_abs_loss_function: 0.2379 - val_accuracy: 0.4315 - 79s/epoch - 288ms/step
Epoch 11/100
273/273 - 77s - loss: 0.2405 - abs_loss_function: 0.2405 - accuracy: 0.2937 - val_loss: 0.2354 - val_abs_loss_function: 0.2354 - val_accuracy: 0.4093 - 77s/epoch - 282ms/step
Epoch 12/100
273/273 - 75s - loss: 0.2441 - abs_loss_function: 0.2441 - accuracy: 0.3309 - val_loss: 0.2531 - val_abs_loss_function: 0.2531 - val_accuracy: 0.4587 - 75s/epoch - 273ms/step
Epoch 13/100
273/273 - 69s - loss: 0.2435 - abs_loss_function: 0.2435 - accuracy: 0.3139 - val_loss: 0.2503 - val_abs_loss_function: 0.2503 - val_accuracy: 0.2853 - 69s/epoch - 252ms/step
Epoch 14/100
273/273 - 75s - loss: 0.2433 - abs_loss_function: 0.2433 - accuracy: 0.3054 - val_loss: 0.2429 - val_abs_loss_function: 0.2429 - val_accuracy: 0.2873 - 75s/epoch - 276ms/step
Epoch 15/100
273/273 - 72s - loss: 0.2437 - abs_loss_function: 0.2437 - accuracy: 0.3146 - val_loss: 0.2594 - val_abs_loss_function: 0.2594 - val_accuracy: 0.3165 - 72s/epoch - 262ms/step
Epoch 16/100
273/273 - 68s - loss: 0.2395 - abs_loss_function: 0.2395 - accuracy: 0.2730 - val_loss: 0.2628 - val_abs_loss_function: 0.2628 - val_accuracy: 0.4012 - 68s/epoch - 249ms/step
Epoch 17/100
273/273 - 78s - loss: 0.2429 - abs_loss_function: 0.2429 - accuracy: 0.3373 - val_loss: 0.2385 - val_abs_loss_function: 0.2385 - val_accuracy: 0.3700 - 78s/epoch - 285ms/step
Epoch 18/100
273/273 - 79s - loss: 0.2409 - abs_loss_function: 0.2409 - accuracy: 0.3032 - val_loss: 0.2559 - val_abs_loss_function: 0.2559 - val_accuracy: 0.3478 - 79s/epoch - 289ms/step
Epoch 19/100
273/273 - 67s - loss: 0.2404 - abs_loss_function: 0.2404 - accuracy: 0.3456 - val_loss: 0.2438 - val_abs_loss_function: 0.2438 - val_accuracy: 0.3911 - 67s/epoch - 244ms/step
Epoch 20/100
273/273 - 69s - loss: 0.2421 - abs_loss_function: 0.2421 - accuracy: 0.3044 - val_loss: 0.2384 - val_abs_loss_function: 0.2384 - val_accuracy: 0.3327 - 69s/epoch - 252ms/step
Epoch 21/100
273/273 - 71s - loss: 0.2420 - abs_loss_function: 0.2420 - accuracy: 0.3284 - val_loss: 0.2446 - val_abs_loss_function: 0.2446 - val_accuracy: 0.4365 - 71s/epoch - 261ms/step
Epoch 22/100
273/273 - 67s - loss: 0.2383 - abs_loss_function: 0.2383 - accuracy: 0.3915 - val_loss: 0.2501 - val_abs_loss_function: 0.2501 - val_accuracy: 0.3065 - 67s/epoch - 246ms/step
Epoch 23/100
273/273 - 71s - loss: 0.2433 - abs_loss_function: 0.2433 - accuracy: 0.3450 - val_loss: 0.2325 - val_abs_loss_function: 0.2325 - val_accuracy: 0.2954 - 71s/epoch - 260ms/step
Epoch 24/100
273/273 - 67s - loss: 0.2412 - abs_loss_function: 0.2412 - accuracy: 0.3977 - val_loss: 0.2492 - val_abs_loss_function: 0.2492 - val_accuracy: 0.2702 - 67s/epoch - 246ms/step
Epoch 25/100
273/273 - 68s - loss: 0.2421 - abs_loss_function: 0.2421 - accuracy: 0.2976 - val_loss: 0.2491 - val_abs_loss_function: 0.2491 - val_accuracy: 0.3327 - 68s/epoch - 248ms/step
Epoch 26/100
273/273 - 71s - loss: 0.2452 - abs_loss_function: 0.2452 - accuracy: 0.3054 - val_loss: 0.2544 - val_abs_loss_function: 0.2544 - val_accuracy: 0.3286 - 71s/epoch - 262ms/step
Epoch 27/100
273/273 - 67s - loss: 0.2416 - abs_loss_function: 0.2416 - accuracy: 0.3552 - val_loss: 0.2530 - val_abs_loss_function: 0.2530 - val_accuracy: 0.2631 - 67s/epoch - 246ms/step
Epoch 28/100
273/273 - 66s - loss: 0.2509 - abs_loss_function: 0.2509 - accuracy: 0.3045 - val_loss: 0.2623 - val_abs_loss_function: 0.2623 - val_accuracy: 0.3468 - 66s/epoch - 241ms/step
Epoch 29/100
273/273 - 70s - loss: 0.2470 - abs_loss_function: 0.2470 - accuracy: 0.3978 - val_loss: 0.2304 - val_abs_loss_function: 0.2304 - val_accuracy: 0.3528 - 70s/epoch - 255ms/step
Epoch 30/100
273/273 - 69s - loss: 0.2423 - abs_loss_function: 0.2423 - accuracy: 0.3648 - val_loss: 0.2378 - val_abs_loss_function: 0.2378 - val_accuracy: 0.3599 - 69s/epoch - 254ms/step
Epoch 31/100
273/273 - 68s - loss: 0.2427 - abs_loss_function: 0.2427 - accuracy: 0.3347 - val_loss: 0.2514 - val_abs_loss_function: 0.2514 - val_accuracy: 0.2994 - 68s/epoch - 250ms/step
Epoch 32/100
273/273 - 73s - loss: 0.2495 - abs_loss_function: 0.2495 - accuracy: 0.3389 - val_loss: 0.2414 - val_abs_loss_function: 0.2414 - val_accuracy: 0.2641 - 73s/epoch - 267ms/step
Epoch 33/100
273/273 - 69s - loss: 0.2454 - abs_loss_function: 0.2454 - accuracy: 0.3351 - val_loss: 0.2448 - val_abs_loss_function: 0.2448 - val_accuracy: 0.3377 - 69s/epoch - 253ms/step
Epoch 34/100
273/273 - 73s - loss: 0.2544 - abs_loss_function: 0.2544 - accuracy: 0.3527 - val_loss: 0.2601 - val_abs_loss_function: 0.2601 - val_accuracy: 0.2460 - 73s/epoch - 268ms/step
Epoch 35/100
273/273 - 70s - loss: 0.2449 - abs_loss_function: 0.2449 - accuracy: 0.3372 - val_loss: 0.2464 - val_abs_loss_function: 0.2464 - val_accuracy: 0.2450 - 70s/epoch - 257ms/step
Epoch 36/100
273/273 - 75s - loss: 0.2505 - abs_loss_function: 0.2505 - accuracy: 0.2943 - val_loss: 0.2393 - val_abs_loss_function: 0.2393 - val_accuracy: 0.3306 - 75s/epoch - 276ms/step
Epoch 37/100
273/273 - 70s - loss: 0.2449 - abs_loss_function: 0.2449 - accuracy: 0.3329 - val_loss: 0.2259 - val_abs_loss_function: 0.2259 - val_accuracy: 0.3155 - 70s/epoch - 255ms/step
Epoch 38/100
273/273 - 70s - loss: 0.2501 - abs_loss_function: 0.2501 - accuracy: 0.3159 - val_loss: 0.2621 - val_abs_loss_function: 0.2621 - val_accuracy: 0.2419 - 70s/epoch - 257ms/step
Epoch 39/100
273/273 - 69s - loss: 0.2383 - abs_loss_function: 0.2383 - accuracy: 0.3581 - val_loss: 0.2509 - val_abs_loss_function: 0.2509 - val_accuracy: 0.2944 - 69s/epoch - 251ms/step
Epoch 40/100
273/273 - 69s - loss: 0.2384 - abs_loss_function: 0.2384 - accuracy: 0.3401 - val_loss: 0.2439 - val_abs_loss_function: 0.2439 - val_accuracy: 0.3044 - 69s/epoch - 254ms/step
Epoch 41/100
273/273 - 77s - loss: 0.2479 - abs_loss_function: 0.2479 - accuracy: 0.3349 - val_loss: 0.2660 - val_abs_loss_function: 0.2660 - val_accuracy: 0.3579 - 77s/epoch - 284ms/step
Epoch 42/100
273/273 - 66s - loss: 0.2415 - abs_loss_function: 0.2415 - accuracy: 0.3289 - val_loss: 0.2494 - val_abs_loss_function: 0.2494 - val_accuracy: 0.3891 - 66s/epoch - 240ms/step
Epoch 43/100
273/273 - 69s - loss: 0.2414 - abs_loss_function: 0.2414 - accuracy: 0.3434 - val_loss: 0.2595 - val_abs_loss_function: 0.2595 - val_accuracy: 0.3609 - 69s/epoch - 252ms/step
Epoch 44/100
273/273 - 65s - loss: 0.2460 - abs_loss_function: 0.2460 - accuracy: 0.3384 - val_loss: 0.2577 - val_abs_loss_function: 0.2577 - val_accuracy: 0.3306 - 65s/epoch - 238ms/step
Epoch 45/100
273/273 - 65s - loss: 0.2467 - abs_loss_function: 0.2467 - accuracy: 0.3298 - val_loss: 0.2430 - val_abs_loss_function: 0.2430 - val_accuracy: 0.3327 - 65s/epoch - 240ms/step
Epoch 46/100
273/273 - 70s - loss: 0.2401 - abs_loss_function: 0.2401 - accuracy: 0.3109 - val_loss: 0.2374 - val_abs_loss_function: 0.2374 - val_accuracy: 0.3337 - 70s/epoch - 256ms/step
Epoch 47/100
273/273 - 69s - loss: 0.2507 - abs_loss_function: 0.2507 - accuracy: 0.2905 - val_loss: 0.2463 - val_abs_loss_function: 0.2463 - val_accuracy: 0.3317 - 69s/epoch - 253ms/step
Epoch 48/100
273/273 - 75s - loss: 0.2558 - abs_loss_function: 0.2558 - accuracy: 0.3615 - val_loss: 0.2449 - val_abs_loss_function: 0.2449 - val_accuracy: 0.2863 - 75s/epoch - 276ms/step
Epoch 49/100
273/273 - 72s - loss: 0.2431 - abs_loss_function: 0.2431 - accuracy: 0.3245 - val_loss: 0.2587 - val_abs_loss_function: 0.2587 - val_accuracy: 0.3427 - 72s/epoch - 262ms/step
Epoch 50/100
Terminated

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 15216333: <s202741-train> in cluster <dcc> Exited

Job <s202741-train> was submitted from host <n-62-20-1> by user <s202741> in cluster <dcc> at Thu Jan 19 13:28:36 2023
Job was executed on host(s) <4*n-62-20-12>, in queue <gpuv100>, as user <s202741> in cluster <dcc> at Thu Jan 19 15:27:19 2023
</zhome/ab/7/153983> was used as the home directory.
</zhome/ab/7/153983/project/scripts> was used as the working directory.
Started at Thu Jan 19 15:27:19 2023
Terminated at Thu Jan 19 16:32:19 2023
Results reported at Thu Jan 19 16:32:19 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#!/bin/bash
### General options
### -- specify queue --   NOTE: TitanX is significantly faster than K80
#BSUB -q gpuv100
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set the job Name --
#BSUB -J s202741-train
### -- ask for number of cores (default: 1) --
#BSUB -n 4
#BSUB -R "span[hosts=1]"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 3:00
# request 5GB of memory
#BSUB -R "rusage[mem=5GB]"
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o iter4/Logs/RMSprop_abs_loss_function_0003%J.out
# -- end of LSF options --

# Necessary modules
cd ..
source venv/bin/activate

python trainModelIter2.py 100 "RMSprop(learning_rate=0.003)" "abs_loss_function" "black_background_500x500.csv" 2 "RMSprop_abs_loss_function_0003" "iter4"

    
------------------------------------------------------------

Exited with exit code 143.

Resource usage summary:

    CPU time :                                   4157.00 sec.
    Max Memory :                                 2939 MB
    Average Memory :                             2743.74 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               17541.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                33
    Run time :                                   3900 sec.
    Turnaround time :                            11023 sec.

The output (if any) is above this job summary.

